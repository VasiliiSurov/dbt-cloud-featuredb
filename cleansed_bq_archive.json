{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v12.json", "dbt_version": "1.10.0b2", "generated_at": "2025-05-06T18:53:35.644005Z", "invocation_id": "8548d567-9877-4380-bc8f-09a902012007", "invocation_started_at": "2025-05-06T18:53:35.128833Z", "env": {}, "project_name": "cleansed_bq_archive", "project_id": "82f6d868687b269bb1ffe3b2f0bcf3fd", "user_id": "b7cc0b6c-2e6b-41b6-b094-41b2fc466ebb", "send_anonymous_usage_stats": true, "adapter_type": "snowflake"}, "nodes": {"model.cleansed_bq_archive.pdw_slas": {"database": "cleansed", "schema": "bq_product_archive", "name": "pdw_slas", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "pdw/pdw_slas.sql", "original_file_path": "models/pdw/pdw_slas.sql", "unique_id": "model.cleansed_bq_archive.pdw_slas", "fqn": ["cleansed_bq_archive", "pdw", "pdw_slas"], "alias": "pdw_slas", "checksum": {"name": "sha256", "checksum": "fe2c34a1ce3ee4202d6da34a0561aaff71dfac0d5fdc1f5931084c5cf256172a"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557616.9935696, "relation_name": "cleansed.bq_product_archive.pdw_slas", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'pdw_slas') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "pdw_slas"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.pdw_slas"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/pdw/pdw_slas.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.pdw_slas", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_addresses": {"database": "cleansed", "schema": "bq_product_archive", "name": "support_addresses", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "pdw/support_addresses.sql", "original_file_path": "models/pdw/support_addresses.sql", "unique_id": "model.cleansed_bq_archive.support_addresses", "fqn": ["cleansed_bq_archive", "pdw", "support_addresses"], "alias": "support_addresses", "checksum": {"name": "sha256", "checksum": "75a3cafaa6cd09d3dc518383f869735de2fb64b597e5db5aa1f8978f387731bd"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": "cleansed_bq_archive", "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "public", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": "cleansed_bq_archive", "docs": {"show": true, "node_color": null}, "patch_path": "cleansed_bq_archive://models/bq_archive_models.yml", "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive", "group": "cleansed_bq_archive", "access": "public"}, "created_at": 1746557619.7524264, "relation_name": "cleansed.bq_product_archive.support_addresses", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'support_addresses') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "support_addresses"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.support_addresses"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/pdw/support_addresses.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.support_addresses", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "public", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.count_objects": {"database": "cleansed", "schema": "bq_product_archive", "name": "count_objects", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "pdw/count_objects.sql", "original_file_path": "models/pdw/count_objects.sql", "unique_id": "model.cleansed_bq_archive.count_objects", "fqn": ["cleansed_bq_archive", "pdw", "count_objects"], "alias": "count_objects", "checksum": {"name": "sha256", "checksum": "ee18675e7ce085ed97c9cdff6f463b6f16f0343180ce5a398a0ef57ea718d29d"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557617.0742018, "relation_name": "cleansed.bq_product_archive.count_objects", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'count_objects') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "count_objects"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.count_objects"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/pdw/count_objects.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.count_objects", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.ticket_forms": {"database": "cleansed", "schema": "bq_product_archive", "name": "ticket_forms", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "pdw/ticket_forms.sql", "original_file_path": "models/pdw/ticket_forms.sql", "unique_id": "model.cleansed_bq_archive.ticket_forms", "fqn": ["cleansed_bq_archive", "pdw", "ticket_forms"], "alias": "ticket_forms", "checksum": {"name": "sha256", "checksum": "2b9a5201742af36da40a4d72fcc75e68b24b442c1063d997bfb5a14424a82439"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557617.0796115, "relation_name": "cleansed.bq_product_archive.ticket_forms", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'ticket_forms') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "ticket_forms"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.ticket_forms"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/pdw/ticket_forms.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.ticket_forms", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.zuora_voice_usages": {"database": "cleansed", "schema": "bq_product_archive", "name": "zuora_voice_usages", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "pdw/zuora_voice_usages.sql", "original_file_path": "models/pdw/zuora_voice_usages.sql", "unique_id": "model.cleansed_bq_archive.zuora_voice_usages", "fqn": ["cleansed_bq_archive", "pdw", "zuora_voice_usages"], "alias": "zuora_voice_usages", "checksum": {"name": "sha256", "checksum": "a8cbb49b8b708612c26b0b7300e3365cdddd7578677e7117ffbf31961c78e63c"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557617.086494, "relation_name": "cleansed.bq_product_archive.zuora_voice_usages", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'pdw_zuora_voice_usages') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "pdw_zuora_voice_usages"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.pdw_zuora_voice_usages"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/pdw/zuora_voice_usages.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.pdw_zuora_voice_usages", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.explore_users": {"database": "cleansed", "schema": "bq_product_archive", "name": "explore_users", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "pdw/explore_users.sql", "original_file_path": "models/pdw/explore_users.sql", "unique_id": "model.cleansed_bq_archive.explore_users", "fqn": ["cleansed_bq_archive", "pdw", "explore_users"], "alias": "explore_users", "checksum": {"name": "sha256", "checksum": "a9b0e52722c0da5beedbe36245fdddf700410472525806db3f57f94a6fdec64d"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557617.0918224, "relation_name": "cleansed.bq_product_archive.explore_users", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'explore_users') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "explore_users"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.explore_users"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/pdw/explore_users.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.explore_users", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.explore_dashboards": {"database": "cleansed", "schema": "bq_product_archive", "name": "explore_dashboards", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "pdw/explore_dashboards.sql", "original_file_path": "models/pdw/explore_dashboards.sql", "unique_id": "model.cleansed_bq_archive.explore_dashboards", "fqn": ["cleansed_bq_archive", "pdw", "explore_dashboards"], "alias": "explore_dashboards", "checksum": {"name": "sha256", "checksum": "6e50c7a9ea62be31c465ad363196d818e8974b78671affd2cd7d26947537f9cd"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557617.0971682, "relation_name": "cleansed.bq_product_archive.explore_dashboards", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'explore_dashboards') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "explore_dashboards"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.explore_dashboards"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/pdw/explore_dashboards.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.explore_dashboards", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.account_settings_events": {"database": "cleansed", "schema": "bq_product_archive", "name": "account_settings_events", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "pdw/account_settings_events.sql", "original_file_path": "models/pdw/account_settings_events.sql", "unique_id": "model.cleansed_bq_archive.account_settings_events", "fqn": ["cleansed_bq_archive", "pdw", "account_settings_events"], "alias": "account_settings_events", "checksum": {"name": "sha256", "checksum": "f565a6aea909571c8304c22726589d4ad004fe9bea8cb8f022789814bf87dd25"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557617.102268, "relation_name": "cleansed.bq_product_archive.account_settings_events", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'pdw_account_settings_events') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "pdw_account_settings_events"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.pdw_account_settings_events"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/pdw/account_settings_events.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.pdw_account_settings_events", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.voice_details": {"database": "cleansed", "schema": "bq_product_archive", "name": "voice_details", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "pdw/voice_details.sql", "original_file_path": "models/pdw/voice_details.sql", "unique_id": "model.cleansed_bq_archive.voice_details", "fqn": ["cleansed_bq_archive", "pdw", "voice_details"], "alias": "voice_details", "checksum": {"name": "sha256", "checksum": "5f852e24d217bbc38f2cd0a248ddc09e3314c7a41b8d3bd261b94c6348ad2b3c"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557617.107637, "relation_name": "cleansed.bq_product_archive.voice_details", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'pdw_voice_details') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "pdw_voice_details"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.pdw_voice_details"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/pdw/voice_details.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.pdw_voice_details", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.pdw_hc_usage": {"database": "cleansed", "schema": "bq_product_archive", "name": "pdw_hc_usage", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "pdw/pdw_hc_usage.sql", "original_file_path": "models/pdw/pdw_hc_usage.sql", "unique_id": "model.cleansed_bq_archive.pdw_hc_usage", "fqn": ["cleansed_bq_archive", "pdw", "pdw_hc_usage"], "alias": "pdw_hc_usage", "checksum": {"name": "sha256", "checksum": "ee8e4366c6f93f15e32163b7fa549057f859543ca32d7043670f5ca12d474fff"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557617.113047, "relation_name": "cleansed.bq_product_archive.pdw_hc_usage", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'pdw_hc_usage') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "pdw_hc_usage"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.pdw_hc_usage"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/pdw/pdw_hc_usage.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.pdw_hc_usage", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.explore_accounts": {"database": "cleansed", "schema": "bq_product_archive", "name": "explore_accounts", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "pdw/explore_accounts.sql", "original_file_path": "models/pdw/explore_accounts.sql", "unique_id": "model.cleansed_bq_archive.explore_accounts", "fqn": ["cleansed_bq_archive", "pdw", "explore_accounts"], "alias": "explore_accounts", "checksum": {"name": "sha256", "checksum": "2e16f724206cef42e661b09c965875a26f0c8eac57b4617a899ddddb16e41bd0"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557617.1183414, "relation_name": "cleansed.bq_product_archive.explore_accounts", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'explore_accounts') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "explore_accounts"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.explore_accounts"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/pdw/explore_accounts.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.explore_accounts", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.explore_dashboard_views": {"database": "cleansed", "schema": "bq_product_archive", "name": "explore_dashboard_views", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "pdw/explore_dashboard_views.sql", "original_file_path": "models/pdw/explore_dashboard_views.sql", "unique_id": "model.cleansed_bq_archive.explore_dashboard_views", "fqn": ["cleansed_bq_archive", "pdw", "explore_dashboard_views"], "alias": "explore_dashboard_views", "checksum": {"name": "sha256", "checksum": "358b893752eb13ca232404c31e8c2bdda4b4c96868fa6192f6c6d26deebcd4df"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557617.124887, "relation_name": "cleansed.bq_product_archive.explore_dashboard_views", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'explore_dashboard_views') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "explore_dashboard_views"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.explore_dashboard_views"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/pdw/explore_dashboard_views.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.explore_dashboard_views", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.agent_email_addresses": {"database": "cleansed", "schema": "bq_product_archive", "name": "agent_email_addresses", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "pdw/agent_email_addresses.sql", "original_file_path": "models/pdw/agent_email_addresses.sql", "unique_id": "model.cleansed_bq_archive.agent_email_addresses", "fqn": ["cleansed_bq_archive", "pdw", "agent_email_addresses"], "alias": "agent_email_addresses", "checksum": {"name": "sha256", "checksum": "0baf6c09bc6c86381ba8a087d64f9febf193c6615d737a9748c33b449095a551"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": "cleansed_bq_product_archive", "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "public", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": "cleansed_bq_product_archive", "docs": {"show": true, "node_color": null}, "patch_path": "cleansed_bq_archive://models/bq_product_archive_models.yml", "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive", "group": "cleansed_bq_product_archive", "access": "public"}, "created_at": 1746557619.6823497, "relation_name": "cleansed.bq_product_archive.agent_email_addresses", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'agent_email_addresses_2023_onward') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "agent_email_addresses_2023_onward"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.agent_email_addresses_2023_onward"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/pdw/agent_email_addresses.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.agent_email_addresses_2023_onward", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "public", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.signals_metrics": {"database": "cleansed", "schema": "bq_product_archive", "name": "signals_metrics", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "pdw/signals_metrics.sql", "original_file_path": "models/pdw/signals_metrics.sql", "unique_id": "model.cleansed_bq_archive.signals_metrics", "fqn": ["cleansed_bq_archive", "pdw", "signals_metrics"], "alias": "signals_metrics", "checksum": {"name": "sha256", "checksum": "6b45875a2850b0a601622c6aca712f8d1b1cb186ee6f5dc67066cee98031fe6e"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557617.1355314, "relation_name": "cleansed.bq_product_archive.signals_metrics", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'signals_metrics') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "signals_metrics"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.signals_metrics"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/pdw/signals_metrics.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.signals_metrics", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_granular": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "tb_ws_cc_renewals_finadj_granular", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_analytics__cx/tb_ws_cc_renewals_finadj_granular.sql", "original_file_path": "models/eda_analytics__cx/tb_ws_cc_renewals_finadj_granular.sql", "unique_id": "model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_granular", "fqn": ["cleansed_bq_archive", "eda_analytics__cx", "tb_ws_cc_renewals_finadj_granular"], "alias": "tb_ws_cc_renewals_finadj_granular", "checksum": {"name": "sha256", "checksum": "04ba9fdc09242bcb9d571249c3b7e860d1758a3f61fbfc76a140b5e94935a1cc"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.1408396, "relation_name": "cleansed.BQ_ARCHIVE.tb_ws_cc_renewals_finadj_granular", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'tb_ws_cc_renewals_finadj_granular') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "tb_ws_cc_renewals_finadj_granular"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_granular"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_analytics__cx/tb_ws_cc_renewals_finadj_granular.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.tb_ws_cc_renewals_finadj_granular", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.tb_ws_cc_renewals_subterm_weighted": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "tb_ws_cc_renewals_subterm_weighted", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_analytics__cx/tb_ws_cc_renewals_subterm_weighted.sql", "original_file_path": "models/eda_analytics__cx/tb_ws_cc_renewals_subterm_weighted.sql", "unique_id": "model.cleansed_bq_archive.tb_ws_cc_renewals_subterm_weighted", "fqn": ["cleansed_bq_archive", "eda_analytics__cx", "tb_ws_cc_renewals_subterm_weighted"], "alias": "tb_ws_cc_renewals_subterm_weighted", "checksum": {"name": "sha256", "checksum": "13f783ea2a6b738236cb55e75a5a7321eafaa28d77b3a6a3c6d488f57d8b220c"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.14611, "relation_name": "cleansed.BQ_ARCHIVE.tb_ws_cc_renewals_subterm_weighted", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'tb_ws_cc_renewals_subterm_weighted') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "tb_ws_cc_renewals_subterm_weighted"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_subterm_weighted"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_analytics__cx/tb_ws_cc_renewals_subterm_weighted.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.tb_ws_cc_renewals_subterm_weighted", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.tb_ws_cc_renewals_pacing_renewals": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "tb_ws_cc_renewals_pacing_renewals", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_analytics__cx/tb_ws_cc_renewals_pacing_renewals.sql", "original_file_path": "models/eda_analytics__cx/tb_ws_cc_renewals_pacing_renewals.sql", "unique_id": "model.cleansed_bq_archive.tb_ws_cc_renewals_pacing_renewals", "fqn": ["cleansed_bq_archive", "eda_analytics__cx", "tb_ws_cc_renewals_pacing_renewals"], "alias": "tb_ws_cc_renewals_pacing_renewals", "checksum": {"name": "sha256", "checksum": "877817329ee6db8b9806a0931b639b6866c5cbfc40498a91a3402018f1e70819"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.1512828, "relation_name": "cleansed.BQ_ARCHIVE.tb_ws_cc_renewals_pacing_renewals", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'tb_ws_cc_renewals_pacing_renewals') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "tb_ws_cc_renewals_pacing_renewals"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_pacing_renewals"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_analytics__cx/tb_ws_cc_renewals_pacing_renewals.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.tb_ws_cc_renewals_pacing_renewals", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.tb_ws_cc_renewals_day_of_qtr": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "tb_ws_cc_renewals_day_of_qtr", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_analytics__cx/tb_ws_cc_renewals_day_of_qtr.sql", "original_file_path": "models/eda_analytics__cx/tb_ws_cc_renewals_day_of_qtr.sql", "unique_id": "model.cleansed_bq_archive.tb_ws_cc_renewals_day_of_qtr", "fqn": ["cleansed_bq_archive", "eda_analytics__cx", "tb_ws_cc_renewals_day_of_qtr"], "alias": "tb_ws_cc_renewals_day_of_qtr", "checksum": {"name": "sha256", "checksum": "36471aedffdbfe1ff7f75b2e6c6a9d6b9048b7b4dc2a87ea62efbd1266912ded"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.15635, "relation_name": "cleansed.BQ_ARCHIVE.tb_ws_cc_renewals_day_of_qtr", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'tb_ws_cc_renewals_day_of_qtr') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "tb_ws_cc_renewals_day_of_qtr"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_day_of_qtr"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_analytics__cx/tb_ws_cc_renewals_day_of_qtr.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.tb_ws_cc_renewals_day_of_qtr", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_summary": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "tb_ws_cc_renewals_finadj_summary", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_analytics__cx/tb_ws_cc_renewals_finadj_summary.sql", "original_file_path": "models/eda_analytics__cx/tb_ws_cc_renewals_finadj_summary.sql", "unique_id": "model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_summary", "fqn": ["cleansed_bq_archive", "eda_analytics__cx", "tb_ws_cc_renewals_finadj_summary"], "alias": "tb_ws_cc_renewals_finadj_summary", "checksum": {"name": "sha256", "checksum": "7af0e1376a729000debc31b43b2f1b955d0393cc725c41841ce044a93fa9e3ba"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.1628456, "relation_name": "cleansed.BQ_ARCHIVE.tb_ws_cc_renewals_finadj_summary", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'tb_ws_cc_renewals_finadj_summary') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "tb_ws_cc_renewals_finadj_summary"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_summary"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_analytics__cx/tb_ws_cc_renewals_finadj_summary.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.tb_ws_cc_renewals_finadj_summary", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.tb_ws_cc_renewals_qtrly_crm_dim": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "tb_ws_cc_renewals_qtrly_crm_dim", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_analytics__cx/tb_ws_cc_renewals_qtrly_crm_dim.sql", "original_file_path": "models/eda_analytics__cx/tb_ws_cc_renewals_qtrly_crm_dim.sql", "unique_id": "model.cleansed_bq_archive.tb_ws_cc_renewals_qtrly_crm_dim", "fqn": ["cleansed_bq_archive", "eda_analytics__cx", "tb_ws_cc_renewals_qtrly_crm_dim"], "alias": "tb_ws_cc_renewals_qtrly_crm_dim", "checksum": {"name": "sha256", "checksum": "bdb1615de6c16259c9f3903564fcbb2a0d3443d07281af6d3d97f7ff110b6286"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.168087, "relation_name": "cleansed.BQ_ARCHIVE.tb_ws_cc_renewals_qtrly_crm_dim", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'tb_ws_cc_renewals_qtrly_crm_dim') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "tb_ws_cc_renewals_qtrly_crm_dim"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_qtrly_crm_dim"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_analytics__cx/tb_ws_cc_renewals_qtrly_crm_dim.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.tb_ws_cc_renewals_qtrly_crm_dim", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.tb_ws_cc_renewals_future_renewals": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "tb_ws_cc_renewals_future_renewals", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_analytics__cx/tb_ws_cc_renewals_future_renewals.sql", "original_file_path": "models/eda_analytics__cx/tb_ws_cc_renewals_future_renewals.sql", "unique_id": "model.cleansed_bq_archive.tb_ws_cc_renewals_future_renewals", "fqn": ["cleansed_bq_archive", "eda_analytics__cx", "tb_ws_cc_renewals_future_renewals"], "alias": "tb_ws_cc_renewals_future_renewals", "checksum": {"name": "sha256", "checksum": "3bcba7edf7ae0049727d65cc09b5222a42d7bd198c822155257589dfa3428808"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.1733286, "relation_name": "cleansed.BQ_ARCHIVE.tb_ws_cc_renewals_future_renewals", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'tb_ws_cc_renewals_future_renewals') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "tb_ws_cc_renewals_future_renewals"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_future_renewals"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_analytics__cx/tb_ws_cc_renewals_future_renewals.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.tb_ws_cc_renewals_future_renewals", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_summary_yoy_union": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "tb_ws_cc_renewals_finadj_summary_yoy_union", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_analytics__cx/tb_ws_cc_renewals_finadj_summary_yoy_union.sql", "original_file_path": "models/eda_analytics__cx/tb_ws_cc_renewals_finadj_summary_yoy_union.sql", "unique_id": "model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_summary_yoy_union", "fqn": ["cleansed_bq_archive", "eda_analytics__cx", "tb_ws_cc_renewals_finadj_summary_yoy_union"], "alias": "tb_ws_cc_renewals_finadj_summary_yoy_union", "checksum": {"name": "sha256", "checksum": "0c7d6e8c79acb05b77330f8d20044c221a5854658e4ac5b9f8c41e2578f0c311"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.1785073, "relation_name": "cleansed.BQ_ARCHIVE.tb_ws_cc_renewals_finadj_summary_yoy_union", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'tb_ws_cc_renewals_finadj_summary_yoy_union') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "tb_ws_cc_renewals_finadj_summary_yoy_union"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_summary_yoy_union"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_analytics__cx/tb_ws_cc_renewals_finadj_summary_yoy_union.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.tb_ws_cc_renewals_finadj_summary_yoy_union", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_granular_subtype": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "tb_ws_cc_renewals_finadj_granular_subtype", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_analytics__cx/tb_ws_cc_renewals_finadj_granular_subtype.sql", "original_file_path": "models/eda_analytics__cx/tb_ws_cc_renewals_finadj_granular_subtype.sql", "unique_id": "model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_granular_subtype", "fqn": ["cleansed_bq_archive", "eda_analytics__cx", "tb_ws_cc_renewals_finadj_granular_subtype"], "alias": "tb_ws_cc_renewals_finadj_granular_subtype", "checksum": {"name": "sha256", "checksum": "4eaae174063ede937161e80775542daca57fdbcce1d5b813e92780427c9b8658"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.1835265, "relation_name": "cleansed.BQ_ARCHIVE.tb_ws_cc_renewals_finadj_granular_subtype", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'tb_ws_cc_renewals_finadj_granular_subtype') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "tb_ws_cc_renewals_finadj_granular_subtype"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_granular_subtype"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_analytics__cx/tb_ws_cc_renewals_finadj_granular_subtype.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.tb_ws_cc_renewals_finadj_granular_subtype", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_granular_grouped": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "tb_ws_cc_renewals_finadj_granular_grouped", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_analytics__cx/tb_ws_cc_renewals_finadj_granular_grouped.sql", "original_file_path": "models/eda_analytics__cx/tb_ws_cc_renewals_finadj_granular_grouped.sql", "unique_id": "model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_granular_grouped", "fqn": ["cleansed_bq_archive", "eda_analytics__cx", "tb_ws_cc_renewals_finadj_granular_grouped"], "alias": "tb_ws_cc_renewals_finadj_granular_grouped", "checksum": {"name": "sha256", "checksum": "0653c4e23df904b022620ede44041d31c9f80cf956599ff0c87e664b2e3e6fbb"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.1886945, "relation_name": "cleansed.BQ_ARCHIVE.tb_ws_cc_renewals_finadj_granular_grouped", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'tb_ws_cc_renewals_finadj_granular_grouped') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "tb_ws_cc_renewals_finadj_granular_grouped"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_granular_grouped"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_analytics__cx/tb_ws_cc_renewals_finadj_granular_grouped.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.tb_ws_cc_renewals_finadj_granular_grouped", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.tb_ws_cc_renewals_granular_arr_band": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "tb_ws_cc_renewals_granular_arr_band", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_analytics__cx/tb_ws_cc_renewals_granular_arr_band.sql", "original_file_path": "models/eda_analytics__cx/tb_ws_cc_renewals_granular_arr_band.sql", "unique_id": "model.cleansed_bq_archive.tb_ws_cc_renewals_granular_arr_band", "fqn": ["cleansed_bq_archive", "eda_analytics__cx", "tb_ws_cc_renewals_granular_arr_band"], "alias": "tb_ws_cc_renewals_granular_arr_band", "checksum": {"name": "sha256", "checksum": "9656a6207b5de04bb9aab34e6d26a6fc34a145370d943f8e240ce5a8c929db73"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.1952412, "relation_name": "cleansed.BQ_ARCHIVE.tb_ws_cc_renewals_granular_arr_band", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'tb_ws_cc_renewals_granular_arr_band') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "tb_ws_cc_renewals_granular_arr_band"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_granular_arr_band"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_analytics__cx/tb_ws_cc_renewals_granular_arr_band.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.tb_ws_cc_renewals_granular_arr_band", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.tb_ws_cc_renewals_timestamp": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "tb_ws_cc_renewals_timestamp", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_analytics__cx/tb_ws_cc_renewals_timestamp.sql", "original_file_path": "models/eda_analytics__cx/tb_ws_cc_renewals_timestamp.sql", "unique_id": "model.cleansed_bq_archive.tb_ws_cc_renewals_timestamp", "fqn": ["cleansed_bq_archive", "eda_analytics__cx", "tb_ws_cc_renewals_timestamp"], "alias": "tb_ws_cc_renewals_timestamp", "checksum": {"name": "sha256", "checksum": "064fd5c771009e0d4847eb9df3d073b8385cf7fd26ce7339021058108b3d9d73"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.200459, "relation_name": "cleansed.BQ_ARCHIVE.tb_ws_cc_renewals_timestamp", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'tb_ws_cc_renewals_timestamp') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "tb_ws_cc_renewals_timestamp"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_timestamp"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_analytics__cx/tb_ws_cc_renewals_timestamp.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.tb_ws_cc_renewals_timestamp", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.tb_ws_cc_renewals_pacing": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "tb_ws_cc_renewals_pacing", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_analytics__cx/tb_ws_cc_renewals_pacing.sql", "original_file_path": "models/eda_analytics__cx/tb_ws_cc_renewals_pacing.sql", "unique_id": "model.cleansed_bq_archive.tb_ws_cc_renewals_pacing", "fqn": ["cleansed_bq_archive", "eda_analytics__cx", "tb_ws_cc_renewals_pacing"], "alias": "tb_ws_cc_renewals_pacing", "checksum": {"name": "sha256", "checksum": "aa246e770a3bde0555686df894ee2bd6b2c74342d1642ec89bb13332862225ec"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.2056205, "relation_name": "cleansed.BQ_ARCHIVE.tb_ws_cc_renewals_pacing", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'tb_ws_cc_renewals_pacing') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "tb_ws_cc_renewals_pacing"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_pacing"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_analytics__cx/tb_ws_cc_renewals_pacing.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.tb_ws_cc_renewals_pacing", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.segment_marketing_website_identifies": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "segment_marketing_website_identifies", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_marketing_website/segment_marketing_website_identifies.sql", "original_file_path": "models/segment_marketing_website/segment_marketing_website_identifies.sql", "unique_id": "model.cleansed_bq_archive.segment_marketing_website_identifies", "fqn": ["cleansed_bq_archive", "segment_marketing_website", "segment_marketing_website_identifies"], "alias": "segment_marketing_website_identifies", "checksum": {"name": "sha256", "checksum": "468502c6ad55b4f82fa39fbf56bad277e63b29955b685fecc4af3a56728f3932"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.210628, "relation_name": "cleansed.BQ_ARCHIVE.segment_marketing_website_identifies", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'segment_marketing_website_identifies') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "segment_marketing_website_identifies"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.segment_marketing_website_identifies"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_marketing_website/segment_marketing_website_identifies.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.segment_marketing_website_identifies", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.website_register_lead_demo_request": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "website_register_lead_demo_request", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_marketing_website/website_register_lead_demo_request.sql", "original_file_path": "models/segment_marketing_website/website_register_lead_demo_request.sql", "unique_id": "model.cleansed_bq_archive.website_register_lead_demo_request", "fqn": ["cleansed_bq_archive", "segment_marketing_website", "website_register_lead_demo_request"], "alias": "website_register_lead_demo_request", "checksum": {"name": "sha256", "checksum": "871d52af00394c44614e18e0cdea9b78429856bbae78d5354ee52427918d1a94"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.21598, "relation_name": "cleansed.BQ_ARCHIVE.website_register_lead_demo_request", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'website_register_lead_demo_request') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "website_register_lead_demo_request"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.website_register_lead_demo_request"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_marketing_website/website_register_lead_demo_request.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.website_register_lead_demo_request", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.website_register_lead_contact_modal_submit": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "website_register_lead_contact_modal_submit", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_marketing_website/website_register_lead_contact_modal_submit.sql", "original_file_path": "models/segment_marketing_website/website_register_lead_contact_modal_submit.sql", "unique_id": "model.cleansed_bq_archive.website_register_lead_contact_modal_submit", "fqn": ["cleansed_bq_archive", "segment_marketing_website", "website_register_lead_contact_modal_submit"], "alias": "website_register_lead_contact_modal_submit", "checksum": {"name": "sha256", "checksum": "58ab65e1642430286b78e265889552c299bce6a53478aa74a112c76254f8a31a"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.221272, "relation_name": "cleansed.BQ_ARCHIVE.website_register_lead_contact_modal_submit", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'website_register_lead_contact_modal_submit') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "website_register_lead_contact_modal_submit"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.website_register_lead_contact_modal_submit"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_marketing_website/website_register_lead_contact_modal_submit.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.website_register_lead_contact_modal_submit", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.website_trial_reg_account_creation_apirequest_succeed": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "website_trial_reg_account_creation_apirequest_succeed", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_marketing_website/website_trial_reg_account_creation_apirequest_succeed.sql", "original_file_path": "models/segment_marketing_website/website_trial_reg_account_creation_apirequest_succeed.sql", "unique_id": "model.cleansed_bq_archive.website_trial_reg_account_creation_apirequest_succeed", "fqn": ["cleansed_bq_archive", "segment_marketing_website", "website_trial_reg_account_creation_apirequest_succeed"], "alias": "website_trial_reg_account_creation_apirequest_succeed", "checksum": {"name": "sha256", "checksum": "5f2c00adc2dda7add09bc7ce72f1aca59e89a6672892f8108ef18b279109a2ce"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.2265673, "relation_name": "cleansed.BQ_ARCHIVE.website_trial_reg_account_creation_apirequest_succeed", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'website_trial_reg_account_creation_apirequest_succeed') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "website_trial_reg_account_creation_apirequest_succeed"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.website_trial_reg_account_creation_apirequest_succeed"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_marketing_website/website_trial_reg_account_creation_apirequest_succeed.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.website_trial_reg_account_creation_apirequest_succeed", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.segment_marketing_website_experiment_viewed": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "segment_marketing_website_experiment_viewed", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_marketing_website/segment_marketing_website_experiment_viewed.sql", "original_file_path": "models/segment_marketing_website/segment_marketing_website_experiment_viewed.sql", "unique_id": "model.cleansed_bq_archive.segment_marketing_website_experiment_viewed", "fqn": ["cleansed_bq_archive", "segment_marketing_website", "segment_marketing_website_experiment_viewed"], "alias": "segment_marketing_website_experiment_viewed", "checksum": {"name": "sha256", "checksum": "5d61746b7ee8afa2fdd6be9210fc835283c9ecccce21de3c9b07ccb3b1c3612c"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.2331276, "relation_name": "cleansed.BQ_ARCHIVE.segment_marketing_website_experiment_viewed", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'segment_marketing_website_experiment_viewed') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "segment_marketing_website_experiment_viewed"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.segment_marketing_website_experiment_viewed"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_marketing_website/segment_marketing_website_experiment_viewed.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.segment_marketing_website_experiment_viewed", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.website_register_lead_contact_form_widget": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "website_register_lead_contact_form_widget", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_marketing_website/website_register_lead_contact_form_widget.sql", "original_file_path": "models/segment_marketing_website/website_register_lead_contact_form_widget.sql", "unique_id": "model.cleansed_bq_archive.website_register_lead_contact_form_widget", "fqn": ["cleansed_bq_archive", "segment_marketing_website", "website_register_lead_contact_form_widget"], "alias": "website_register_lead_contact_form_widget", "checksum": {"name": "sha256", "checksum": "fe0062a2fba78a9d46f15aaa42a6e024ef16beb244761c5de59326c553d9801b"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.238108, "relation_name": "cleansed.BQ_ARCHIVE.website_register_lead_contact_form_widget", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'website_register_lead_contact_form_widget') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "website_register_lead_contact_form_widget"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.website_register_lead_contact_form_widget"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_marketing_website/website_register_lead_contact_form_widget.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.website_register_lead_contact_form_widget", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_search_user_opened": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_search_user_opened", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_search_user_opened.sql", "original_file_path": "models/segment_support_android/support_android_search_user_opened.sql", "unique_id": "model.cleansed_bq_archive.support_android_search_user_opened", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_search_user_opened"], "alias": "support_android_search_user_opened", "checksum": {"name": "sha256", "checksum": "6467b8eac0575d045d846f079312dd63187ebab7ce1111a5575b06df36e9fe49"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.2434015, "relation_name": "cleansed.BQ_ARCHIVE.support_android_search_user_opened", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_search_user_opened') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_search_user_opened"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_search_user_opened"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_search_user_opened.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_search_user_opened", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_rate_app_status": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_rate_app_status", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_rate_app_status.sql", "original_file_path": "models/segment_support_android/support_android_rate_app_status.sql", "unique_id": "model.cleansed_bq_archive.support_android_rate_app_status", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_rate_app_status"], "alias": "support_android_rate_app_status", "checksum": {"name": "sha256", "checksum": "e4c85026aa35e8d04b526bc7e61469a98bd34ae145ee2ad2d6bcf4639bffe47b"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.2487047, "relation_name": "cleansed.BQ_ARCHIVE.support_android_rate_app_status", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_rate_app_status') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_rate_app_status"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_rate_app_status"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_rate_app_status.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_rate_app_status", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_side_conversations_list_viewed": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_side_conversations_list_viewed", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_side_conversations_list_viewed.sql", "original_file_path": "models/segment_support_android/support_android_side_conversations_list_viewed.sql", "unique_id": "model.cleansed_bq_archive.support_android_side_conversations_list_viewed", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_side_conversations_list_viewed"], "alias": "support_android_side_conversations_list_viewed", "checksum": {"name": "sha256", "checksum": "ee64d05cbad576e8f805dc44780cc5535047c79cff727e4e15f327950c01149f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.2539558, "relation_name": "cleansed.BQ_ARCHIVE.support_android_side_conversations_list_viewed", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_side_conversations_list_viewed') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_side_conversations_list_viewed"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_side_conversations_list_viewed"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_side_conversations_list_viewed.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_side_conversations_list_viewed", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_user_profile_save_failed": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_user_profile_save_failed", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_user_profile_save_failed.sql", "original_file_path": "models/segment_support_android/support_android_user_profile_save_failed.sql", "unique_id": "model.cleansed_bq_archive.support_android_user_profile_save_failed", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_user_profile_save_failed"], "alias": "support_android_user_profile_save_failed", "checksum": {"name": "sha256", "checksum": "c77306c55c3e5b2d5913a5d4e772c6d62dff673c821ca0fcdb891c95748a11e2"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.2591426, "relation_name": "cleansed.BQ_ARCHIVE.support_android_user_profile_save_failed", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_user_profile_save_failed') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_user_profile_save_failed"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_user_profile_save_failed"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_user_profile_save_failed.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_user_profile_save_failed", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_edit_user_profile_opened": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_edit_user_profile_opened", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_edit_user_profile_opened.sql", "original_file_path": "models/segment_support_android/support_android_edit_user_profile_opened.sql", "unique_id": "model.cleansed_bq_archive.support_android_edit_user_profile_opened", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_edit_user_profile_opened"], "alias": "support_android_edit_user_profile_opened", "checksum": {"name": "sha256", "checksum": "2b8af9a3d62555f71bd5b856351baa98c682db7466b69d92446700f3d9c698ed"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.26422, "relation_name": "cleansed.BQ_ARCHIVE.support_android_edit_user_profile_opened", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_edit_user_profile_opened') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_edit_user_profile_opened"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_edit_user_profile_opened"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_edit_user_profile_opened.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_edit_user_profile_opened", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_search_opened": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_search_opened", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_search_opened.sql", "original_file_path": "models/segment_support_android/support_android_search_opened.sql", "unique_id": "model.cleansed_bq_archive.support_android_search_opened", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_search_opened"], "alias": "support_android_search_opened", "checksum": {"name": "sha256", "checksum": "f2b193d0928e6ac9e337f29e103f19092445a449ad52f4f7eca571b4c8450b9a"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.270745, "relation_name": "cleansed.BQ_ARCHIVE.support_android_search_opened", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_search_opened') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_search_opened"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_search_opened"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_search_opened.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_search_opened", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_talk_status_opened": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_talk_status_opened", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_talk_status_opened.sql", "original_file_path": "models/segment_support_android/support_android_talk_status_opened.sql", "unique_id": "model.cleansed_bq_archive.support_android_talk_status_opened", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_talk_status_opened"], "alias": "support_android_talk_status_opened", "checksum": {"name": "sha256", "checksum": "51cc6136c4db790f18cc765faf469a05c6f7a7b21299db9ccdac8a9d065cd876"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.2759726, "relation_name": "cleansed.BQ_ARCHIVE.support_android_talk_status_opened", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_talk_status_opened') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_talk_status_opened"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_talk_status_opened"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_talk_status_opened.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_talk_status_opened", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_force_update_dismissible_alert_update_tapped": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_force_update_dismissible_alert_update_tapped", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_force_update_dismissible_alert_update_tapped.sql", "original_file_path": "models/segment_support_android/support_android_force_update_dismissible_alert_update_tapped.sql", "unique_id": "model.cleansed_bq_archive.support_android_force_update_dismissible_alert_update_tapped", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_force_update_dismissible_alert_update_tapped"], "alias": "support_android_force_update_dismissible_alert_update_tapped", "checksum": {"name": "sha256", "checksum": "37186c4005bf886fb46b117d76fa5d3069dfb99076a4eafe1e73cacce880961e"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.2813346, "relation_name": "cleansed.BQ_ARCHIVE.support_android_force_update_dismissible_alert_update_tapped", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_force_update_dismissible_alert_update_tapped') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_force_update_dismissible_alert_update_tapped"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_force_update_dismissible_alert_update_tapped"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_force_update_dismissible_alert_update_tapped.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_force_update_dismissible_alert_update_tapped", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_search_submitted": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_search_submitted", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_search_submitted.sql", "original_file_path": "models/segment_support_android/support_android_search_submitted.sql", "unique_id": "model.cleansed_bq_archive.support_android_search_submitted", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_search_submitted"], "alias": "support_android_search_submitted", "checksum": {"name": "sha256", "checksum": "26101a89f834cc8fe3dce3eaf0bf916dc64db076a607e46addd1caf06d39211a"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.2866185, "relation_name": "cleansed.BQ_ARCHIVE.support_android_search_submitted", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_search_submitted') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_search_submitted"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_search_submitted"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_search_submitted.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_search_submitted", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_merge_opened": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_merge_opened", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_merge_opened.sql", "original_file_path": "models/segment_support_android/support_android_merge_opened.sql", "unique_id": "model.cleansed_bq_archive.support_android_merge_opened", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_merge_opened"], "alias": "support_android_merge_opened", "checksum": {"name": "sha256", "checksum": "230d020339e79aaf9cd05e7d0e1583c94011c4ec581b234ce1d461a289af1a29"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.291612, "relation_name": "cleansed.BQ_ARCHIVE.support_android_merge_opened", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_merge_opened') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_merge_opened"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_merge_opened"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_merge_opened.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_merge_opened", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_bulk_edit_submitted": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_bulk_edit_submitted", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_bulk_edit_submitted.sql", "original_file_path": "models/segment_support_android/support_android_bulk_edit_submitted.sql", "unique_id": "model.cleansed_bq_archive.support_android_bulk_edit_submitted", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_bulk_edit_submitted"], "alias": "support_android_bulk_edit_submitted", "checksum": {"name": "sha256", "checksum": "c328ef8db20ee9ca9ca4d2c4a2d7be918546b620294c137bb4cc3f2dff73c5b9"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.2967775, "relation_name": "cleansed.BQ_ARCHIVE.support_android_bulk_edit_submitted", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_bulk_edit_submitted') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_bulk_edit_submitted"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_bulk_edit_submitted"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_bulk_edit_submitted.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_bulk_edit_submitted", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_ticket_viewed": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_ticket_viewed", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_ticket_viewed.sql", "original_file_path": "models/segment_support_android/support_android_ticket_viewed.sql", "unique_id": "model.cleansed_bq_archive.support_android_ticket_viewed", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_ticket_viewed"], "alias": "support_android_ticket_viewed", "checksum": {"name": "sha256", "checksum": "1ec711cd87d79a1dbf3887f9a2217b528f0e54f584b47884f3f124516fe69a7d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.3034348, "relation_name": "cleansed.BQ_ARCHIVE.support_android_ticket_viewed", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_ticket_viewed') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_ticket_viewed"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_viewed"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_ticket_viewed.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_ticket_viewed", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_quick_property_tapped": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_quick_property_tapped", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_quick_property_tapped.sql", "original_file_path": "models/segment_support_android/support_android_quick_property_tapped.sql", "unique_id": "model.cleansed_bq_archive.support_android_quick_property_tapped", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_quick_property_tapped"], "alias": "support_android_quick_property_tapped", "checksum": {"name": "sha256", "checksum": "2a1526b903a75f4c4bfff9bb57a453b23da255b6f81c9e85a1f7ec08261f1cbf"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.308735, "relation_name": "cleansed.BQ_ARCHIVE.support_android_quick_property_tapped", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_quick_property_tapped') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_quick_property_tapped"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_quick_property_tapped"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_quick_property_tapped.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_quick_property_tapped", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_search_ticket_opened": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_search_ticket_opened", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_search_ticket_opened.sql", "original_file_path": "models/segment_support_android/support_android_search_ticket_opened.sql", "unique_id": "model.cleansed_bq_archive.support_android_search_ticket_opened", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_search_ticket_opened"], "alias": "support_android_search_ticket_opened", "checksum": {"name": "sha256", "checksum": "eb623e6ce1d2a8cb23b52a0dfdd49ef932d4b5b13c241276b91ebdf06ba1968d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.3141785, "relation_name": "cleansed.BQ_ARCHIVE.support_android_search_ticket_opened", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_search_ticket_opened') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_search_ticket_opened"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_search_ticket_opened"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_search_ticket_opened.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_search_ticket_opened", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_merge_submitted": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_merge_submitted", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_merge_submitted.sql", "original_file_path": "models/segment_support_android/support_android_merge_submitted.sql", "unique_id": "model.cleansed_bq_archive.support_android_merge_submitted", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_merge_submitted"], "alias": "support_android_merge_submitted", "checksum": {"name": "sha256", "checksum": "0449054ba3f338b2062507ccfc7708c6054ff4c9af5459c2f19e85a2d9dab266"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.3192835, "relation_name": "cleansed.BQ_ARCHIVE.support_android_merge_submitted", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_merge_submitted') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_merge_submitted"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_merge_submitted"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_merge_submitted.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_merge_submitted", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_push_notification_received": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_push_notification_received", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_push_notification_received.sql", "original_file_path": "models/segment_support_android/support_android_push_notification_received.sql", "unique_id": "model.cleansed_bq_archive.support_android_push_notification_received", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_push_notification_received"], "alias": "support_android_push_notification_received", "checksum": {"name": "sha256", "checksum": "1061ffda84a9b4b89fc8bd7dd5b0ff5e038f7a1cc43a031ffb35c9ff2a49b119"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.3246472, "relation_name": "cleansed.BQ_ARCHIVE.support_android_push_notification_received", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_push_notification_received') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_push_notification_received"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_push_notification_received"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_push_notification_received.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_push_notification_received", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_ongoing_chat_conversation": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_ongoing_chat_conversation", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_ongoing_chat_conversation.sql", "original_file_path": "models/segment_support_android/support_android_ongoing_chat_conversation.sql", "unique_id": "model.cleansed_bq_archive.support_android_ongoing_chat_conversation", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_ongoing_chat_conversation"], "alias": "support_android_ongoing_chat_conversation", "checksum": {"name": "sha256", "checksum": "72f078cb15bd4d77764278db910f70b9cde0d44f576b5866a8fc52c018edad10"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.3300185, "relation_name": "cleansed.BQ_ARCHIVE.support_android_ongoing_chat_conversation", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_ongoing_chat_conversation') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_ongoing_chat_conversation"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_ongoing_chat_conversation"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_ongoing_chat_conversation.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_ongoing_chat_conversation", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_job_result": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_job_result", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_job_result.sql", "original_file_path": "models/segment_support_android/support_android_job_result.sql", "unique_id": "model.cleansed_bq_archive.support_android_job_result", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_job_result"], "alias": "support_android_job_result", "checksum": {"name": "sha256", "checksum": "8016cf756b61cecf53b8081e1504e05d2e868e819f149dcc4f0047d4c26b521b"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.3352666, "relation_name": "cleansed.BQ_ARCHIVE.support_android_job_result", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_job_result') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_job_result"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_job_result"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_job_result.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_job_result", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_force_update_non_dismissible_alert_presented": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_force_update_non_dismissible_alert_presented", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_force_update_non_dismissible_alert_presented.sql", "original_file_path": "models/segment_support_android/support_android_force_update_non_dismissible_alert_presented.sql", "unique_id": "model.cleansed_bq_archive.support_android_force_update_non_dismissible_alert_presented", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_force_update_non_dismissible_alert_presented"], "alias": "support_android_force_update_non_dismissible_alert_presented", "checksum": {"name": "sha256", "checksum": "7c8fd9f771e297292c3a01f955a0e62cc51018fa987eefdfa5490e498cf956ed"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.3419785, "relation_name": "cleansed.BQ_ARCHIVE.support_android_force_update_non_dismissible_alert_presented", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_force_update_non_dismissible_alert_presented') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_force_update_non_dismissible_alert_presented"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_force_update_non_dismissible_alert_presented"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_force_update_non_dismissible_alert_presented.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_force_update_non_dismissible_alert_presented", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_application_opened": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_application_opened", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_application_opened.sql", "original_file_path": "models/segment_support_android/support_android_application_opened.sql", "unique_id": "model.cleansed_bq_archive.support_android_application_opened", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_application_opened"], "alias": "support_android_application_opened", "checksum": {"name": "sha256", "checksum": "ea0d359c5a6e2a995d07a772500a6c11e6ced885f428af9e78bbce489b8a139a"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.3471029, "relation_name": "cleansed.BQ_ARCHIVE.support_android_application_opened", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_application_opened') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_application_opened"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_application_opened"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_application_opened.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_application_opened", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_comment_sort_order_changed": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_comment_sort_order_changed", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_comment_sort_order_changed.sql", "original_file_path": "models/segment_support_android/support_android_comment_sort_order_changed.sql", "unique_id": "model.cleansed_bq_archive.support_android_comment_sort_order_changed", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_comment_sort_order_changed"], "alias": "support_android_comment_sort_order_changed", "checksum": {"name": "sha256", "checksum": "16a4cd1589b0e97df5fe7412c0da42e22e705eb15f2bbaa26e0f05e995ed5a98"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.3524017, "relation_name": "cleansed.BQ_ARCHIVE.support_android_comment_sort_order_changed", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_comment_sort_order_changed') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_comment_sort_order_changed"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_comment_sort_order_changed"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_comment_sort_order_changed.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_comment_sort_order_changed", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_side_conversation_viewed": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_side_conversation_viewed", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_side_conversation_viewed.sql", "original_file_path": "models/segment_support_android/support_android_side_conversation_viewed.sql", "unique_id": "model.cleansed_bq_archive.support_android_side_conversation_viewed", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_side_conversation_viewed"], "alias": "support_android_side_conversation_viewed", "checksum": {"name": "sha256", "checksum": "baf12efb86dba0271efc29fd0170aa0fd9f40f3021c7157b379026d2031fca91"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.3577878, "relation_name": "cleansed.BQ_ARCHIVE.support_android_side_conversation_viewed", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_side_conversation_viewed') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_side_conversation_viewed"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_side_conversation_viewed"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_side_conversation_viewed.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_side_conversation_viewed", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_comment_added": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_comment_added", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_comment_added.sql", "original_file_path": "models/segment_support_android/support_android_comment_added.sql", "unique_id": "model.cleansed_bq_archive.support_android_comment_added", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_comment_added"], "alias": "support_android_comment_added", "checksum": {"name": "sha256", "checksum": "082d4a57be25753f63c8d64b4b33927fd0aab6ac1c67bb8692d85553c2eae17b"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.3630662, "relation_name": "cleansed.BQ_ARCHIVE.support_android_comment_added", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_comment_added') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_comment_added"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_comment_added"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_comment_added.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_comment_added", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_bulk_edit_opened": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_bulk_edit_opened", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_bulk_edit_opened.sql", "original_file_path": "models/segment_support_android/support_android_bulk_edit_opened.sql", "unique_id": "model.cleansed_bq_archive.support_android_bulk_edit_opened", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_bulk_edit_opened"], "alias": "support_android_bulk_edit_opened", "checksum": {"name": "sha256", "checksum": "ae9607ea77ef269ecd9f2470c0b02fc81471f087949baf3003ca9b6b85559a58"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.3683498, "relation_name": "cleansed.BQ_ARCHIVE.support_android_bulk_edit_opened", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_bulk_edit_opened') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_bulk_edit_opened"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_bulk_edit_opened"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_bulk_edit_opened.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_bulk_edit_opened", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_macro_applied": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_macro_applied", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_macro_applied.sql", "original_file_path": "models/segment_support_android/support_android_macro_applied.sql", "unique_id": "model.cleansed_bq_archive.support_android_macro_applied", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_macro_applied"], "alias": "support_android_macro_applied", "checksum": {"name": "sha256", "checksum": "d15e530424f19ecaf545cf06a45da3ae92c4d9f2bcf37dc033e22acd7aee4649"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.3734956, "relation_name": "cleansed.BQ_ARCHIVE.support_android_macro_applied", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_macro_applied') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_macro_applied"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_macro_applied"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_macro_applied.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_macro_applied", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_ticket_unsaved_changes_dialog": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_ticket_unsaved_changes_dialog", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_ticket_unsaved_changes_dialog.sql", "original_file_path": "models/segment_support_android/support_android_ticket_unsaved_changes_dialog.sql", "unique_id": "model.cleansed_bq_archive.support_android_ticket_unsaved_changes_dialog", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_ticket_unsaved_changes_dialog"], "alias": "support_android_ticket_unsaved_changes_dialog", "checksum": {"name": "sha256", "checksum": "24c97bb3a07c3fc0ddd0b6dc150168da92e528945680bb9d5ce6ba74adb6ed1c"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.3804343, "relation_name": "cleansed.BQ_ARCHIVE.support_android_ticket_unsaved_changes_dialog", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_ticket_unsaved_changes_dialog') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_ticket_unsaved_changes_dialog"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_unsaved_changes_dialog"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_ticket_unsaved_changes_dialog.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_ticket_unsaved_changes_dialog", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_force_update_dismissible_alert_presented": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_force_update_dismissible_alert_presented", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_force_update_dismissible_alert_presented.sql", "original_file_path": "models/segment_support_android/support_android_force_update_dismissible_alert_presented.sql", "unique_id": "model.cleansed_bq_archive.support_android_force_update_dismissible_alert_presented", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_force_update_dismissible_alert_presented"], "alias": "support_android_force_update_dismissible_alert_presented", "checksum": {"name": "sha256", "checksum": "04aac97d0024876c89e19217c8797e0d6ff8dd4803dd6255f7710595d0a2b47f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.3858786, "relation_name": "cleansed.BQ_ARCHIVE.support_android_force_update_dismissible_alert_presented", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_force_update_dismissible_alert_presented') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_force_update_dismissible_alert_presented"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_force_update_dismissible_alert_presented"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_force_update_dismissible_alert_presented.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_force_update_dismissible_alert_presented", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.segment_support_android_identifies": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "segment_support_android_identifies", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/segment_support_android_identifies.sql", "original_file_path": "models/segment_support_android/segment_support_android_identifies.sql", "unique_id": "model.cleansed_bq_archive.segment_support_android_identifies", "fqn": ["cleansed_bq_archive", "segment_support_android", "segment_support_android_identifies"], "alias": "segment_support_android_identifies", "checksum": {"name": "sha256", "checksum": "a26a22281f6526ee2e53c745ad13a37652d38d15de13c78fa91b268e5ced0e4a"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.391297, "relation_name": "cleansed.BQ_ARCHIVE.segment_support_android_identifies", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'segment_support_android_identifies') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "segment_support_android_identifies"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.segment_support_android_identifies"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/segment_support_android_identifies.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.segment_support_android_identifies", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_opened_view_management": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_opened_view_management", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_opened_view_management.sql", "original_file_path": "models/segment_support_android/support_android_opened_view_management.sql", "unique_id": "model.cleansed_bq_archive.support_android_opened_view_management", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_opened_view_management"], "alias": "support_android_opened_view_management", "checksum": {"name": "sha256", "checksum": "e181a2d95f814e732e7b0b26e92f957a272ac794f777e0dfa247eddbd957886a"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.3966076, "relation_name": "cleansed.BQ_ARCHIVE.support_android_opened_view_management", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_opened_view_management') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_opened_view_management"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_opened_view_management"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_opened_view_management.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_opened_view_management", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_user_profile_saved": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_user_profile_saved", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_user_profile_saved.sql", "original_file_path": "models/segment_support_android/support_android_user_profile_saved.sql", "unique_id": "model.cleansed_bq_archive.support_android_user_profile_saved", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_user_profile_saved"], "alias": "support_android_user_profile_saved", "checksum": {"name": "sha256", "checksum": "23372ca4d86dca7ef874c3b32545d9fff8b6dac7ccb57710879ffda2e21c4f68"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.4016368, "relation_name": "cleansed.BQ_ARCHIVE.support_android_user_profile_saved", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_user_profile_saved') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_user_profile_saved"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_user_profile_saved"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_user_profile_saved.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_user_profile_saved", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_quick_merge_not_permitted": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_quick_merge_not_permitted", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_quick_merge_not_permitted.sql", "original_file_path": "models/segment_support_android/support_android_quick_merge_not_permitted.sql", "unique_id": "model.cleansed_bq_archive.support_android_quick_merge_not_permitted", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_quick_merge_not_permitted"], "alias": "support_android_quick_merge_not_permitted", "checksum": {"name": "sha256", "checksum": "984615ed2e139c750e15e47ac7368e524c027a2281c6d3ea55c5928fa9e2b348"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.406944, "relation_name": "cleansed.BQ_ARCHIVE.support_android_quick_merge_not_permitted", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_quick_merge_not_permitted') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_quick_merge_not_permitted"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_quick_merge_not_permitted"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_quick_merge_not_permitted.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_quick_merge_not_permitted", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_push_notification_opened": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_push_notification_opened", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_push_notification_opened.sql", "original_file_path": "models/segment_support_android/support_android_push_notification_opened.sql", "unique_id": "model.cleansed_bq_archive.support_android_push_notification_opened", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_push_notification_opened"], "alias": "support_android_push_notification_opened", "checksum": {"name": "sha256", "checksum": "d4bf0260aec8e2731384b39238d52477e30914a17032dea9ab254c8a1fa33a37"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.4136586, "relation_name": "cleansed.BQ_ARCHIVE.support_android_push_notification_opened", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_push_notification_opened') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_push_notification_opened"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_push_notification_opened"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_push_notification_opened.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_push_notification_opened", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_accessed_user_profile_via_avatar": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_accessed_user_profile_via_avatar", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_accessed_user_profile_via_avatar.sql", "original_file_path": "models/segment_support_android/support_android_accessed_user_profile_via_avatar.sql", "unique_id": "model.cleansed_bq_archive.support_android_accessed_user_profile_via_avatar", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_accessed_user_profile_via_avatar"], "alias": "support_android_accessed_user_profile_via_avatar", "checksum": {"name": "sha256", "checksum": "7577cf336d554eaae223bda98b17d0872156601651047c7343816fae80a3edd2"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.4189594, "relation_name": "cleansed.BQ_ARCHIVE.support_android_accessed_user_profile_via_avatar", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_accessed_user_profile_via_avatar') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_accessed_user_profile_via_avatar"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_accessed_user_profile_via_avatar"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_accessed_user_profile_via_avatar.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_accessed_user_profile_via_avatar", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_talk_status_changed": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_talk_status_changed", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_talk_status_changed.sql", "original_file_path": "models/segment_support_android/support_android_talk_status_changed.sql", "unique_id": "model.cleansed_bq_archive.support_android_talk_status_changed", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_talk_status_changed"], "alias": "support_android_talk_status_changed", "checksum": {"name": "sha256", "checksum": "a882e5630c97d4adf8c5196c18075e8a84607e6d2318c379c9d10f5a366c67d9"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.4242237, "relation_name": "cleansed.BQ_ARCHIVE.support_android_talk_status_changed", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_talk_status_changed') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_talk_status_changed"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_talk_status_changed"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_talk_status_changed.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_talk_status_changed", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_search_opened_pt": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_search_opened_pt", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_search_opened_pt.sql", "original_file_path": "models/segment_support_android/support_android_search_opened_pt.sql", "unique_id": "model.cleansed_bq_archive.support_android_search_opened_pt", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_search_opened_pt"], "alias": "support_android_search_opened_pt", "checksum": {"name": "sha256", "checksum": "90888881a7dbb6eed478a1a6e9580d20eac7355f155295fe37079645be77e14c"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.4293714, "relation_name": "cleansed.BQ_ARCHIVE.support_android_search_opened_pt", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_search_opened_pt') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_search_opened_pt"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_search_opened_pt"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_search_opened_pt.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_search_opened_pt", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_form_opened": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_form_opened", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_form_opened.sql", "original_file_path": "models/segment_support_android/support_android_form_opened.sql", "unique_id": "model.cleansed_bq_archive.support_android_form_opened", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_form_opened"], "alias": "support_android_form_opened", "checksum": {"name": "sha256", "checksum": "a9bed1062762562f8f0d26e8086986f91e2f61f3359b01542aa1d41fbd5be5fc"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.4346018, "relation_name": "cleansed.BQ_ARCHIVE.support_android_form_opened", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_form_opened') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_form_opened"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_form_opened"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_form_opened.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_form_opened", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_ticket_updated": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_ticket_updated", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_ticket_updated.sql", "original_file_path": "models/segment_support_android/support_android_ticket_updated.sql", "unique_id": "model.cleansed_bq_archive.support_android_ticket_updated", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_ticket_updated"], "alias": "support_android_ticket_updated", "checksum": {"name": "sha256", "checksum": "b3d19793915bddad3c9a83ca3d6f9df9ccc50f221e4e732cdb5b121bbbaabf07"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.4399, "relation_name": "cleansed.BQ_ARCHIVE.support_android_ticket_updated", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_ticket_updated') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_ticket_updated"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_updated"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_ticket_updated.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_ticket_updated", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_ticket_reply_type_changed": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_ticket_reply_type_changed", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_ticket_reply_type_changed.sql", "original_file_path": "models/segment_support_android/support_android_ticket_reply_type_changed.sql", "unique_id": "model.cleansed_bq_archive.support_android_ticket_reply_type_changed", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_ticket_reply_type_changed"], "alias": "support_android_ticket_reply_type_changed", "checksum": {"name": "sha256", "checksum": "49e599fb6bbead78030baca0fc6d0d444b8076963c0beb28f9a240cf077c1032"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.44514, "relation_name": "cleansed.BQ_ARCHIVE.support_android_ticket_reply_type_changed", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_ticket_reply_type_changed') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_ticket_reply_type_changed"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_reply_type_changed"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_ticket_reply_type_changed.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_ticket_reply_type_changed", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_user_profile_created": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_user_profile_created", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_user_profile_created.sql", "original_file_path": "models/segment_support_android/support_android_user_profile_created.sql", "unique_id": "model.cleansed_bq_archive.support_android_user_profile_created", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_user_profile_created"], "alias": "support_android_user_profile_created", "checksum": {"name": "sha256", "checksum": "0810d78a3dec156fe8455e752c9b7e6ca97181883373f566b7b278a7a9e7a60f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.4517484, "relation_name": "cleansed.BQ_ARCHIVE.support_android_user_profile_created", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_user_profile_created') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_user_profile_created"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_user_profile_created"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_user_profile_created.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_user_profile_created", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_search_organisation_opened": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_search_organisation_opened", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_search_organisation_opened.sql", "original_file_path": "models/segment_support_android/support_android_search_organisation_opened.sql", "unique_id": "model.cleansed_bq_archive.support_android_search_organisation_opened", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_search_organisation_opened"], "alias": "support_android_search_organisation_opened", "checksum": {"name": "sha256", "checksum": "0ad24793719a1212f39bf7a703b3a09d040452aa527d865244557d298d31c703"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.4568753, "relation_name": "cleansed.BQ_ARCHIVE.support_android_search_organisation_opened", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_search_organisation_opened') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_search_organisation_opened"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_search_organisation_opened"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_search_organisation_opened.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_search_organisation_opened", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_message_playback": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_message_playback", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_message_playback.sql", "original_file_path": "models/segment_support_android/support_android_message_playback.sql", "unique_id": "model.cleansed_bq_archive.support_android_message_playback", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_message_playback"], "alias": "support_android_message_playback", "checksum": {"name": "sha256", "checksum": "6ccb506ee7c49520cd42fa12f9e77fbe451d78d04a3c6e0265ac677234bf5383"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.4621587, "relation_name": "cleansed.BQ_ARCHIVE.support_android_message_playback", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_message_playback') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_message_playback"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_message_playback"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_message_playback.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_message_playback", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_ticket_created": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_ticket_created", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_ticket_created.sql", "original_file_path": "models/segment_support_android/support_android_ticket_created.sql", "unique_id": "model.cleansed_bq_archive.support_android_ticket_created", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_ticket_created"], "alias": "support_android_ticket_created", "checksum": {"name": "sha256", "checksum": "725f440b2f8145abf4a8f074e5f97abf991cdf7821f6500e3a1698bc5458c6cd"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.467522, "relation_name": "cleansed.BQ_ARCHIVE.support_android_ticket_created", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_ticket_created') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_ticket_created"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_created"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_ticket_created.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_ticket_created", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_properties_changed": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_properties_changed", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_properties_changed.sql", "original_file_path": "models/segment_support_android/support_android_properties_changed.sql", "unique_id": "model.cleansed_bq_archive.support_android_properties_changed", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_properties_changed"], "alias": "support_android_properties_changed", "checksum": {"name": "sha256", "checksum": "92d484158ca234d083fc405927e0dc6f3f26cb086c9aaa737c090aea80b41111"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.4728491, "relation_name": "cleansed.BQ_ARCHIVE.support_android_properties_changed", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_properties_changed') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_properties_changed"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_properties_changed"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_properties_changed.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_properties_changed", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_android_search_filter_tooltip_shown": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_android_search_filter_tooltip_shown", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_android/support_android_search_filter_tooltip_shown.sql", "original_file_path": "models/segment_support_android/support_android_search_filter_tooltip_shown.sql", "unique_id": "model.cleansed_bq_archive.support_android_search_filter_tooltip_shown", "fqn": ["cleansed_bq_archive", "segment_support_android", "support_android_search_filter_tooltip_shown"], "alias": "support_android_search_filter_tooltip_shown", "checksum": {"name": "sha256", "checksum": "cfd47e9127916e9ef70365df8069314bb8e945035a8508a7709d71fb1cd4e145"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.4780645, "relation_name": "cleansed.BQ_ARCHIVE.support_android_search_filter_tooltip_shown", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_android_search_filter_tooltip_shown') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_android_search_filter_tooltip_shown"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_android_search_filter_tooltip_shown"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_android/support_android_search_filter_tooltip_shown.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_android_search_filter_tooltip_shown", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eloqua__emailopen": {"database": "cleansed", "schema": "bq_archive", "name": "eloqua__emailopen", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "bullseye/eloqua__emailopen.sql", "original_file_path": "models/bullseye/eloqua__emailopen.sql", "unique_id": "model.cleansed_bq_archive.eloqua__emailopen", "fqn": ["cleansed_bq_archive", "bullseye", "eloqua__emailopen"], "alias": "eloqua__emailopen", "checksum": {"name": "sha256", "checksum": "db56a24893aed09ec7d19c9792ea6ea6a17e2f79ecbcba4ea5535c8d202cd35f"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557617.483083, "relation_name": "cleansed.bq_archive.eloqua__emailopen", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eloqua__emailopen_jan_22_fw') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eloqua__emailopen_jan_22_fw"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eloqua__emailopen_jan_22_fw"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/bullseye/eloqua__emailopen.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eloqua__emailopen_jan_22_fw", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.bizible_user_touchpoints": {"database": "cleansed", "schema": "bq_archive", "name": "bizible_user_touchpoints", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "bullseye/bizible_user_touchpoints.sql", "original_file_path": "models/bullseye/bizible_user_touchpoints.sql", "unique_id": "model.cleansed_bq_archive.bizible_user_touchpoints", "fqn": ["cleansed_bq_archive", "bullseye", "bizible_user_touchpoints"], "alias": "bizible_user_touchpoints", "checksum": {"name": "sha256", "checksum": "2026dca42db012284cc9725a60232358267f6c944427630cacc8d7307921f3ad"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": "cleansed_bq_archive", "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "public", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": "cleansed_bq_archive", "docs": {"show": true, "node_color": null}, "patch_path": "cleansed_bq_archive://models/bq_archive_models.yml", "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive", "group": "cleansed_bq_archive", "access": "public"}, "created_at": 1746557619.7718232, "relation_name": "cleansed.bq_archive.bizible_user_touchpoints", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'bizible_user_touchpoints') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "bizible_user_touchpoints"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.bizible_user_touchpoints"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/bullseye/bizible_user_touchpoints.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.bizible_user_touchpoints", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "public", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.tableau_events": {"database": "cleansed", "schema": "bq_archive", "name": "tableau_events", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "bullseye/tableau_events.sql", "original_file_path": "models/bullseye/tableau_events.sql", "unique_id": "model.cleansed_bq_archive.tableau_events", "fqn": ["cleansed_bq_archive", "bullseye", "tableau_events"], "alias": "tableau_events", "checksum": {"name": "sha256", "checksum": "fd69be446af5b23b2940ce4a45aeffbe3fdf5b852d2440a1d8c4dd8883d0c2d8"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557617.494986, "relation_name": "cleansed.bq_archive.tableau_events", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'tableau_events') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "tableau_events"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.tableau_events"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/bullseye/tableau_events.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.tableau_events", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.hg_insights_contract_view": {"database": "cleansed", "schema": "bq_archive", "name": "hg_insights_contract_view", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "bullseye/hg_insights_contract_view.sql", "original_file_path": "models/bullseye/hg_insights_contract_view.sql", "unique_id": "model.cleansed_bq_archive.hg_insights_contract_view", "fqn": ["cleansed_bq_archive", "bullseye", "hg_insights_contract_view"], "alias": "hg_insights_contract_view", "checksum": {"name": "sha256", "checksum": "b840970f491310a5269aaacc885d5711d11f08aa8ce875d2a56741f4960047d7"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557617.5002387, "relation_name": "cleansed.bq_archive.hg_insights_contract_view", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'hg_insights_contract_view') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "hg_insights_contract_view"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.hg_insights_contract_view"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/bullseye/hg_insights_contract_view.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.hg_insights_contract_view", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eloqua__unsubscribe": {"database": "cleansed", "schema": "bq_archive", "name": "eloqua__unsubscribe", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "bullseye/eloqua__unsubscribe.sql", "original_file_path": "models/bullseye/eloqua__unsubscribe.sql", "unique_id": "model.cleansed_bq_archive.eloqua__unsubscribe", "fqn": ["cleansed_bq_archive", "bullseye", "eloqua__unsubscribe"], "alias": "eloqua__unsubscribe", "checksum": {"name": "sha256", "checksum": "7dbb19bbcab6290efe53cc2eb7d2c1a2c191bd71dc825417bd018770c6b5e04e"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557617.5055678, "relation_name": "cleansed.bq_archive.eloqua__unsubscribe", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eloqua__unsubscribe_jan_22_fw') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eloqua__unsubscribe_jan_22_fw"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eloqua__unsubscribe_jan_22_fw"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/bullseye/eloqua__unsubscribe.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eloqua__unsubscribe_jan_22_fw", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eloqua_curated": {"database": "cleansed", "schema": "bq_archive", "name": "eloqua_curated", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "bullseye/eloqua_curated.sql", "original_file_path": "models/bullseye/eloqua_curated.sql", "unique_id": "model.cleansed_bq_archive.eloqua_curated", "fqn": ["cleansed_bq_archive", "bullseye", "eloqua_curated"], "alias": "eloqua_curated", "checksum": {"name": "sha256", "checksum": "fef1be7383072506084cc7be028ca3599ea82dd3b8527cec7ccd6911874b8bbe"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557617.5106647, "relation_name": "cleansed.bq_archive.eloqua_curated", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eloqua_curated') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eloqua_curated"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eloqua_curated"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/bullseye/eloqua_curated.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eloqua_curated", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eloqua__bounceback": {"database": "cleansed", "schema": "bq_archive", "name": "eloqua__bounceback", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "bullseye/eloqua__bounceback.sql", "original_file_path": "models/bullseye/eloqua__bounceback.sql", "unique_id": "model.cleansed_bq_archive.eloqua__bounceback", "fqn": ["cleansed_bq_archive", "bullseye", "eloqua__bounceback"], "alias": "eloqua__bounceback", "checksum": {"name": "sha256", "checksum": "2fbd1b14efe7538c917f13776e3898bb8a14840aba43fd9677f13836d86dba51"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557617.5158944, "relation_name": "cleansed.bq_archive.eloqua__bounceback", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eloqua__bounceback_jan_22_fw') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eloqua__bounceback_jan_22_fw"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eloqua__bounceback_jan_22_fw"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/bullseye/eloqua__bounceback.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eloqua__bounceback_jan_22_fw", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.hg_insights_install_view": {"database": "cleansed", "schema": "bq_archive", "name": "hg_insights_install_view", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "bullseye/hg_insights_install_view.sql", "original_file_path": "models/bullseye/hg_insights_install_view.sql", "unique_id": "model.cleansed_bq_archive.hg_insights_install_view", "fqn": ["cleansed_bq_archive", "bullseye", "hg_insights_install_view"], "alias": "hg_insights_install_view", "checksum": {"name": "sha256", "checksum": "d0fe274c025d1550e496c7ca0cd212d1394235475ec4d09b3a3a7b46e3350620"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557617.522963, "relation_name": "cleansed.bq_archive.hg_insights_install_view", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'hg_insights_install_view') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "hg_insights_install_view"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.hg_insights_install_view"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/bullseye/hg_insights_install_view.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.hg_insights_install_view", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.bizible_costs": {"database": "cleansed", "schema": "bq_archive", "name": "bizible_costs", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "bullseye/bizible_costs.sql", "original_file_path": "models/bullseye/bizible_costs.sql", "unique_id": "model.cleansed_bq_archive.bizible_costs", "fqn": ["cleansed_bq_archive", "bullseye", "bizible_costs"], "alias": "bizible_costs", "checksum": {"name": "sha256", "checksum": "3abb613ce128bc3792c515fcb18e14c07dfc95f714991767ea692a83a74e8076"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": "cleansed_bq_archive", "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "public", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": "cleansed_bq_archive", "docs": {"show": true, "node_color": null}, "patch_path": "cleansed_bq_archive://models/bq_archive_models.yml", "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive", "group": "cleansed_bq_archive", "access": "public"}, "created_at": 1746557619.7754107, "relation_name": "cleansed.bq_archive.bizible_costs", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'bizible_costs') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "bizible_costs"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.bizible_costs"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/bullseye/bizible_costs.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.bizible_costs", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "public", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.hg_insights_spend_view": {"database": "cleansed", "schema": "bq_archive", "name": "hg_insights_spend_view", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "bullseye/hg_insights_spend_view.sql", "original_file_path": "models/bullseye/hg_insights_spend_view.sql", "unique_id": "model.cleansed_bq_archive.hg_insights_spend_view", "fqn": ["cleansed_bq_archive", "bullseye", "hg_insights_spend_view"], "alias": "hg_insights_spend_view", "checksum": {"name": "sha256", "checksum": "725d618bc74ffeb1194c403094e36bcfa6d50f3e4ce7da8918410eb5a1175f3c"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557617.5337987, "relation_name": "cleansed.bq_archive.hg_insights_spend_view", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'hg_insights_spend_view') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "hg_insights_spend_view"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.hg_insights_spend_view"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/bullseye/hg_insights_spend_view.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.hg_insights_spend_view", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.contacts": {"database": "cleansed", "schema": "bq_archive", "name": "contacts", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "bullseye/contacts.sql", "original_file_path": "models/bullseye/contacts.sql", "unique_id": "model.cleansed_bq_archive.contacts", "fqn": ["cleansed_bq_archive", "bullseye", "contacts"], "alias": "contacts", "checksum": {"name": "sha256", "checksum": "8158ca6b0b389bb69c4424a256c5b0ca80eb37912d79bfb2a2abcf570ca509a5"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557617.5388236, "relation_name": "cleansed.bq_archive.contacts", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eloqua__contacts_jan_22_fw') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eloqua__contacts_jan_22_fw"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eloqua__contacts_jan_22_fw"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/bullseye/contacts.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eloqua__contacts_jan_22_fw", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eloqua__emailclickthrough": {"database": "cleansed", "schema": "bq_archive", "name": "eloqua__emailclickthrough", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "bullseye/eloqua__emailclickthrough.sql", "original_file_path": "models/bullseye/eloqua__emailclickthrough.sql", "unique_id": "model.cleansed_bq_archive.eloqua__emailclickthrough", "fqn": ["cleansed_bq_archive", "bullseye", "eloqua__emailclickthrough"], "alias": "eloqua__emailclickthrough", "checksum": {"name": "sha256", "checksum": "4912a794e70660e43e7ab1ce55431f53a2ac72cf8e77370b8ad56158c8b64530"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557617.5440876, "relation_name": "cleansed.bq_archive.eloqua__emailclickthrough", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eloqua__emailclickthrough_jan_22_fw') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eloqua__emailclickthrough_jan_22_fw"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eloqua__emailclickthrough_jan_22_fw"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/bullseye/eloqua__emailclickthrough.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eloqua__emailclickthrough_jan_22_fw", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eloqua__emailsend": {"database": "cleansed", "schema": "bq_archive", "name": "eloqua__emailsend", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "bullseye/eloqua__emailsend.sql", "original_file_path": "models/bullseye/eloqua__emailsend.sql", "unique_id": "model.cleansed_bq_archive.eloqua__emailsend", "fqn": ["cleansed_bq_archive", "bullseye", "eloqua__emailsend"], "alias": "eloqua__emailsend", "checksum": {"name": "sha256", "checksum": "99400df729ddc3043771a1299cc75e2f9bd8eb63186ff9d5e9f5d673b4bdb244"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557617.5495121, "relation_name": "cleansed.bq_archive.eloqua__emailsend", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eloqua__emailsend_jan_22_fw') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eloqua__emailsend_jan_22_fw"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eloqua__emailsend_jan_22_fw"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/bullseye/eloqua__emailsend.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eloqua__emailsend_jan_22_fw", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.central_admin_onboarding_panel_task_completion": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "central_admin_onboarding_panel_task_completion", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "central_admin/central_admin_onboarding_panel_task_completion.sql", "original_file_path": "models/central_admin/central_admin_onboarding_panel_task_completion.sql", "unique_id": "model.cleansed_bq_archive.central_admin_onboarding_panel_task_completion", "fqn": ["cleansed_bq_archive", "central_admin", "central_admin_onboarding_panel_task_completion"], "alias": "central_admin_onboarding_panel_task_completion", "checksum": {"name": "sha256", "checksum": "8c7d0f662db9f1eed19b5a97d6f4152a1aa50066f34967567c01b2f1fdb4a614"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.5547147, "relation_name": "cleansed.BQ_ARCHIVE.central_admin_onboarding_panel_task_completion", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'central_admin_onboarding_panel_task_completion') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "central_admin_onboarding_panel_task_completion"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.central_admin_onboarding_panel_task_completion"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/central_admin/central_admin_onboarding_panel_task_completion.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.central_admin_onboarding_panel_task_completion", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.scheduled_pagerduty_incidents_monitors": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "scheduled_pagerduty_incidents_monitors", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/scheduled_pagerduty_incidents_monitors.sql", "original_file_path": "models/znoc_sla_phd/scheduled_pagerduty_incidents_monitors.sql", "unique_id": "model.cleansed_bq_archive.scheduled_pagerduty_incidents_monitors", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "scheduled_pagerduty_incidents_monitors"], "alias": "scheduled_pagerduty_incidents_monitors", "checksum": {"name": "sha256", "checksum": "45f11bd1f156baa39db34637373d8822d105b2ea027b2a3c45b06b9870a208ca"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.561345, "relation_name": "cleansed.BQ_ARCHIVE.scheduled_pagerduty_incidents_monitors", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'scheduled_pagerduty_incidents_monitors') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "scheduled_pagerduty_incidents_monitors"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.scheduled_pagerduty_incidents_monitors"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/scheduled_pagerduty_incidents_monitors.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.scheduled_pagerduty_incidents_monitors", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.SLA_Chat": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "SLA_Chat", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/SLA_Chat.sql", "original_file_path": "models/znoc_sla_phd/SLA_Chat.sql", "unique_id": "model.cleansed_bq_archive.SLA_Chat", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "SLA_Chat"], "alias": "SLA_Chat", "checksum": {"name": "sha256", "checksum": "6eee2cb6fb79667ff4c3f3a38185ece859af219dd29fc046800e87475d4069c3"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.5664105, "relation_name": "cleansed.BQ_ARCHIVE.SLA_Chat", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'SLA_Chat') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "SLA_Chat"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.SLA_Chat"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/SLA_Chat.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.SLA_Chat", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.All_Premier_Accounts_2023_06_27T16_05_41": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "All_Premier_Accounts_2023_06_27T16_05_41", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/All_Premier_Accounts_2023_06_27T16_05_41.sql", "original_file_path": "models/znoc_sla_phd/All_Premier_Accounts_2023_06_27T16_05_41.sql", "unique_id": "model.cleansed_bq_archive.All_Premier_Accounts_2023_06_27T16_05_41", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "All_Premier_Accounts_2023_06_27T16_05_41"], "alias": "All_Premier_Accounts_2023_06_27T16_05_41", "checksum": {"name": "sha256", "checksum": "10540fcc186c248e82c982a188238321611633428eb5a9d2808354ca84f80953"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.5716093, "relation_name": "cleansed.BQ_ARCHIVE.All_Premier_Accounts_2023_06_27T16_05_41", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'All_Premier_Accounts_2023_06_27T16_05_41') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "All_Premier_Accounts_2023_06_27T16_05_41"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.All_Premier_Accounts_2023_06_27T16_05_41"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/All_Premier_Accounts_2023_06_27T16_05_41.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.All_Premier_Accounts_2023_06_27T16_05_41", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.pagerduty_alerts": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "pagerduty_alerts", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/pagerduty_alerts.sql", "original_file_path": "models/znoc_sla_phd/pagerduty_alerts.sql", "unique_id": "model.cleansed_bq_archive.pagerduty_alerts", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "pagerduty_alerts"], "alias": "pagerduty_alerts", "checksum": {"name": "sha256", "checksum": "f2d64255e4544d2027eff0757f67fb24676132573f299a636de225c56a2c7144"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.5768723, "relation_name": "cleansed.BQ_ARCHIVE.pagerduty_alerts", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'pagerduty_alerts') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "pagerduty_alerts"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_alerts"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/pagerduty_alerts.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.pagerduty_alerts", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.pagerduty_users": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "pagerduty_users", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/pagerduty_users.sql", "original_file_path": "models/znoc_sla_phd/pagerduty_users.sql", "unique_id": "model.cleansed_bq_archive.pagerduty_users", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "pagerduty_users"], "alias": "pagerduty_users", "checksum": {"name": "sha256", "checksum": "0015b978207aeb277e5f8a38c17d4de6a8d9e1faac325e93cd05f27ad5dcaddf"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.5820582, "relation_name": "cleansed.BQ_ARCHIVE.pagerduty_users", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'pagerduty_users') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "pagerduty_users"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_users"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/pagerduty_users.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.pagerduty_users", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.IM_Incidents": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "IM_Incidents", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/IM_Incidents.sql", "original_file_path": "models/znoc_sla_phd/IM_Incidents.sql", "unique_id": "model.cleansed_bq_archive.IM_Incidents", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "IM_Incidents"], "alias": "IM_Incidents", "checksum": {"name": "sha256", "checksum": "94e6c4157f3bc689d6f678c3ae08a943185065f38cf9b791db24126c321f9962"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.587252, "relation_name": "cleansed.BQ_ARCHIVE.IM_Incidents", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'IM_Incidents') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "IM_Incidents"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.IM_Incidents"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/IM_Incidents.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.IM_Incidents", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.scheduled_pagerduty_incidents": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "scheduled_pagerduty_incidents", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/scheduled_pagerduty_incidents.sql", "original_file_path": "models/znoc_sla_phd/scheduled_pagerduty_incidents.sql", "unique_id": "model.cleansed_bq_archive.scheduled_pagerduty_incidents", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "scheduled_pagerduty_incidents"], "alias": "scheduled_pagerduty_incidents", "checksum": {"name": "sha256", "checksum": "9dc3661912a93db7ee78b2bb627e95f4c8afb9c6213d884f50f15654091cb22d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.5922804, "relation_name": "cleansed.BQ_ARCHIVE.scheduled_pagerduty_incidents", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'scheduled_pagerduty_incidents') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "scheduled_pagerduty_incidents"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.scheduled_pagerduty_incidents"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/scheduled_pagerduty_incidents.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.scheduled_pagerduty_incidents", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.pagerduty_service_orchestrations": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "pagerduty_service_orchestrations", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/pagerduty_service_orchestrations.sql", "original_file_path": "models/znoc_sla_phd/pagerduty_service_orchestrations.sql", "unique_id": "model.cleansed_bq_archive.pagerduty_service_orchestrations", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "pagerduty_service_orchestrations"], "alias": "pagerduty_service_orchestrations", "checksum": {"name": "sha256", "checksum": "788b206151c15fe304284f799eaac998a7bf966c052685eaa008b6ffdf8b9aaa"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.5988324, "relation_name": "cleansed.BQ_ARCHIVE.pagerduty_service_orchestrations", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'pagerduty_service_orchestrations') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "pagerduty_service_orchestrations"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_service_orchestrations"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/pagerduty_service_orchestrations.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.pagerduty_service_orchestrations", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.Historical_SLA_Chat": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "Historical_SLA_Chat", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/Historical_SLA_Chat.sql", "original_file_path": "models/znoc_sla_phd/Historical_SLA_Chat.sql", "unique_id": "model.cleansed_bq_archive.Historical_SLA_Chat", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "Historical_SLA_Chat"], "alias": "Historical_SLA_Chat", "checksum": {"name": "sha256", "checksum": "375250f53571c1d808d895141102629f393a760f027f6faf370104737201b3aa"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.6040704, "relation_name": "cleansed.BQ_ARCHIVE.Historical_SLA_Chat", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'Historical_SLA_Chat') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "Historical_SLA_Chat"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.Historical_SLA_Chat"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/Historical_SLA_Chat.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.Historical_SLA_Chat", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.Historical_SC_Canaries": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "Historical_SC_Canaries", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/Historical_SC_Canaries.sql", "original_file_path": "models/znoc_sla_phd/Historical_SC_Canaries.sql", "unique_id": "model.cleansed_bq_archive.Historical_SC_Canaries", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "Historical_SC_Canaries"], "alias": "Historical_SC_Canaries", "checksum": {"name": "sha256", "checksum": "2231e385b9735d0c8d1bb8156f68c7416cc68c4986991fa1acca770ed6e46fe5"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.6093688, "relation_name": "cleansed.BQ_ARCHIVE.Historical_SC_Canaries", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'Historical_SC_Canaries') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "Historical_SC_Canaries"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.Historical_SC_Canaries"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/Historical_SC_Canaries.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.Historical_SC_Canaries", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.datadog_monitors": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "datadog_monitors", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/datadog_monitors.sql", "original_file_path": "models/znoc_sla_phd/datadog_monitors.sql", "unique_id": "model.cleansed_bq_archive.datadog_monitors", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "datadog_monitors"], "alias": "datadog_monitors", "checksum": {"name": "sha256", "checksum": "8e388df67262e8b38baf87a84044fb6dd19d52b1260c3ff36ea09524a9f65229"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.6145742, "relation_name": "cleansed.BQ_ARCHIVE.datadog_monitors", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'datadog_monitors') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "datadog_monitors"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.datadog_monitors"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/datadog_monitors.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.datadog_monitors", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.pagerduty_business_services": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "pagerduty_business_services", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/pagerduty_business_services.sql", "original_file_path": "models/znoc_sla_phd/pagerduty_business_services.sql", "unique_id": "model.cleansed_bq_archive.pagerduty_business_services", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "pagerduty_business_services"], "alias": "pagerduty_business_services", "checksum": {"name": "sha256", "checksum": "fcad18e1847d3056008844d1c1bd4ab31bb13542267c48bc8e1a79af1d84cabb"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.6195984, "relation_name": "cleansed.BQ_ARCHIVE.pagerduty_business_services", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'pagerduty_business_services') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "pagerduty_business_services"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_business_services"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/pagerduty_business_services.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.pagerduty_business_services", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.IBM_Customers": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "IBM_Customers", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/IBM_Customers.sql", "original_file_path": "models/znoc_sla_phd/IBM_Customers.sql", "unique_id": "model.cleansed_bq_archive.IBM_Customers", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "IBM_Customers"], "alias": "IBM_Customers", "checksum": {"name": "sha256", "checksum": "a7a3630e12172744062e08183f6dc014561ffb712670c8a84598a8ba528ba1f4"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.6248686, "relation_name": "cleansed.BQ_ARCHIVE.IBM_Customers", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'IBM_Customers') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "IBM_Customers"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.IBM_Customers"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/IBM_Customers.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.IBM_Customers", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.All_Premier_Accounts": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "All_Premier_Accounts", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/All_Premier_Accounts.sql", "original_file_path": "models/znoc_sla_phd/All_Premier_Accounts.sql", "unique_id": "model.cleansed_bq_archive.All_Premier_Accounts", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "All_Premier_Accounts"], "alias": "All_Premier_Accounts", "checksum": {"name": "sha256", "checksum": "a78b24659550ff1d82c970a6a00db93a0973eddb29f05264a191744d40f3548a"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.6316078, "relation_name": "cleansed.BQ_ARCHIVE.All_Premier_Accounts", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'All_Premier_Accounts') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "All_Premier_Accounts"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.All_Premier_Accounts"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/All_Premier_Accounts.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.All_Premier_Accounts", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.Historical_All_Premier_Accounts": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "Historical_All_Premier_Accounts", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/Historical_All_Premier_Accounts.sql", "original_file_path": "models/znoc_sla_phd/Historical_All_Premier_Accounts.sql", "unique_id": "model.cleansed_bq_archive.Historical_All_Premier_Accounts", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "Historical_All_Premier_Accounts"], "alias": "Historical_All_Premier_Accounts", "checksum": {"name": "sha256", "checksum": "588a373a8cebbf26eb997992810f1bf3c0c5781a930e561037f205b1b2032f64"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.6368523, "relation_name": "cleansed.BQ_ARCHIVE.Historical_All_Premier_Accounts", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'Historical_All_Premier_Accounts') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "Historical_All_Premier_Accounts"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.Historical_All_Premier_Accounts"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/Historical_All_Premier_Accounts.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.Historical_All_Premier_Accounts", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.scheduled_tech_tier_projects": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "scheduled_tech_tier_projects", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/scheduled_tech_tier_projects.sql", "original_file_path": "models/znoc_sla_phd/scheduled_tech_tier_projects.sql", "unique_id": "model.cleansed_bq_archive.scheduled_tech_tier_projects", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "scheduled_tech_tier_projects"], "alias": "scheduled_tech_tier_projects", "checksum": {"name": "sha256", "checksum": "a31b26afb7d3a2c694651f09b80aa23036466c0934fda65ba3d294d08534ee38"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.6421103, "relation_name": "cleansed.BQ_ARCHIVE.scheduled_tech_tier_projects", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'scheduled_tech_tier_projects') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "scheduled_tech_tier_projects"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.scheduled_tech_tier_projects"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/scheduled_tech_tier_projects.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.scheduled_tech_tier_projects", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.scheduled_tech_tier_team_hierarchy": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "scheduled_tech_tier_team_hierarchy", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/scheduled_tech_tier_team_hierarchy.sql", "original_file_path": "models/znoc_sla_phd/scheduled_tech_tier_team_hierarchy.sql", "unique_id": "model.cleansed_bq_archive.scheduled_tech_tier_team_hierarchy", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "scheduled_tech_tier_team_hierarchy"], "alias": "scheduled_tech_tier_team_hierarchy", "checksum": {"name": "sha256", "checksum": "b242c7eff0a9238b5ab822af038a7c1f7efec247b7e5c8894e5e8ca0716c707c"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.6472857, "relation_name": "cleansed.BQ_ARCHIVE.scheduled_tech_tier_team_hierarchy", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'scheduled_tech_tier_team_hierarchy') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "scheduled_tech_tier_team_hierarchy"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.scheduled_tech_tier_team_hierarchy"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/scheduled_tech_tier_team_hierarchy.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.scheduled_tech_tier_team_hierarchy", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.scheduled_critical_services": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "scheduled_critical_services", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/scheduled_critical_services.sql", "original_file_path": "models/znoc_sla_phd/scheduled_critical_services.sql", "unique_id": "model.cleansed_bq_archive.scheduled_critical_services", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "scheduled_critical_services"], "alias": "scheduled_critical_services", "checksum": {"name": "sha256", "checksum": "f68bbfec9244606475568444ac88c5ddc4cd1c1cf63525bc779f5aa675e33ea9"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.6525517, "relation_name": "cleansed.BQ_ARCHIVE.scheduled_critical_services", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'scheduled_critical_services') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "scheduled_critical_services"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.scheduled_critical_services"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/scheduled_critical_services.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.scheduled_critical_services", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.pagerduty_services": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "pagerduty_services", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/pagerduty_services.sql", "original_file_path": "models/znoc_sla_phd/pagerduty_services.sql", "unique_id": "model.cleansed_bq_archive.pagerduty_services", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "pagerduty_services"], "alias": "pagerduty_services", "checksum": {"name": "sha256", "checksum": "4a379b22c10f4c0d0be87f87a3d841c49fbaffa7eeedc7bcd66d41b80cc4f6ab"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.65782, "relation_name": "cleansed.BQ_ARCHIVE.pagerduty_services", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'pagerduty_services') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "pagerduty_services"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_services"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/pagerduty_services.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.pagerduty_services", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.pagerduty_logs": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "pagerduty_logs", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/pagerduty_logs.sql", "original_file_path": "models/znoc_sla_phd/pagerduty_logs.sql", "unique_id": "model.cleansed_bq_archive.pagerduty_logs", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "pagerduty_logs"], "alias": "pagerduty_logs", "checksum": {"name": "sha256", "checksum": "0046a42a4337fd7a000b6af1189dec2becdb4cc6f1b198644fcb2ea8d34fb5ed"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.6630442, "relation_name": "cleansed.BQ_ARCHIVE.pagerduty_logs", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'pagerduty_logs') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "pagerduty_logs"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_logs"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/pagerduty_logs.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.pagerduty_logs", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.scheduled_cerebro_blend": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "scheduled_cerebro_blend", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/scheduled_cerebro_blend.sql", "original_file_path": "models/znoc_sla_phd/scheduled_cerebro_blend.sql", "unique_id": "model.cleansed_bq_archive.scheduled_cerebro_blend", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "scheduled_cerebro_blend"], "alias": "scheduled_cerebro_blend", "checksum": {"name": "sha256", "checksum": "a4c24a1372930a1605b31f8d239d3f21b0032f7fd17151f5bd6433b30fef7600"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.6697156, "relation_name": "cleansed.BQ_ARCHIVE.scheduled_cerebro_blend", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'scheduled_cerebro_blend') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "scheduled_cerebro_blend"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.scheduled_cerebro_blend"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/scheduled_cerebro_blend.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.scheduled_cerebro_blend", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.pagerduty_event_orchestrations": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "pagerduty_event_orchestrations", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/pagerduty_event_orchestrations.sql", "original_file_path": "models/znoc_sla_phd/pagerduty_event_orchestrations.sql", "unique_id": "model.cleansed_bq_archive.pagerduty_event_orchestrations", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "pagerduty_event_orchestrations"], "alias": "pagerduty_event_orchestrations", "checksum": {"name": "sha256", "checksum": "69a49379ec3143ac8a9e81ea9c783c4561cc918cd92a28350c836156020b4335"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.674746, "relation_name": "cleansed.BQ_ARCHIVE.pagerduty_event_orchestrations", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'pagerduty_event_orchestrations') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "pagerduty_event_orchestrations"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_event_orchestrations"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/pagerduty_event_orchestrations.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.pagerduty_event_orchestrations", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.pagerduty_event_orchestration_routers": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "pagerduty_event_orchestration_routers", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/pagerduty_event_orchestration_routers.sql", "original_file_path": "models/znoc_sla_phd/pagerduty_event_orchestration_routers.sql", "unique_id": "model.cleansed_bq_archive.pagerduty_event_orchestration_routers", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "pagerduty_event_orchestration_routers"], "alias": "pagerduty_event_orchestration_routers", "checksum": {"name": "sha256", "checksum": "709ed8c932a63f17beb04c2ded5689e5d0c6d9732ed774fbc4d693a8477ca313"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.6799521, "relation_name": "cleansed.BQ_ARCHIVE.pagerduty_event_orchestration_routers", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'pagerduty_event_orchestration_routers') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "pagerduty_event_orchestration_routers"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_event_orchestration_routers"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/pagerduty_event_orchestration_routers.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.pagerduty_event_orchestration_routers", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.pagerduty_escalation_policies": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "pagerduty_escalation_policies", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/pagerduty_escalation_policies.sql", "original_file_path": "models/znoc_sla_phd/pagerduty_escalation_policies.sql", "unique_id": "model.cleansed_bq_archive.pagerduty_escalation_policies", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "pagerduty_escalation_policies"], "alias": "pagerduty_escalation_policies", "checksum": {"name": "sha256", "checksum": "5437e726f1063a955d75a092b056ac396cf9be401a0baff18d31333aa6c6efad"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.6851265, "relation_name": "cleansed.BQ_ARCHIVE.pagerduty_escalation_policies", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'pagerduty_escalation_policies') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "pagerduty_escalation_policies"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_escalation_policies"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/pagerduty_escalation_policies.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.pagerduty_escalation_policies", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.pagerduty_teams": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "pagerduty_teams", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/pagerduty_teams.sql", "original_file_path": "models/znoc_sla_phd/pagerduty_teams.sql", "unique_id": "model.cleansed_bq_archive.pagerduty_teams", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "pagerduty_teams"], "alias": "pagerduty_teams", "checksum": {"name": "sha256", "checksum": "95aac0e302d516a1c2dae204b5248bc7529854bb8fd8b726fbc82efbbe2852be"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.6902423, "relation_name": "cleansed.BQ_ARCHIVE.pagerduty_teams", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'pagerduty_teams') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "pagerduty_teams"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_teams"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/pagerduty_teams.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.pagerduty_teams", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.scheduled_core_features": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "scheduled_core_features", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/scheduled_core_features.sql", "original_file_path": "models/znoc_sla_phd/scheduled_core_features.sql", "unique_id": "model.cleansed_bq_archive.scheduled_core_features", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "scheduled_core_features"], "alias": "scheduled_core_features", "checksum": {"name": "sha256", "checksum": "64dd9706fa9f88cd7cf887bb28dc20300c2839bcd47f4b46d2983e7184cd5cca"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.6954105, "relation_name": "cleansed.BQ_ARCHIVE.scheduled_core_features", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'scheduled_core_features') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "scheduled_core_features"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.scheduled_core_features"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/scheduled_core_features.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.scheduled_core_features", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.scheduled_monitor_metadata": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "scheduled_monitor_metadata", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/scheduled_monitor_metadata.sql", "original_file_path": "models/znoc_sla_phd/scheduled_monitor_metadata.sql", "unique_id": "model.cleansed_bq_archive.scheduled_monitor_metadata", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "scheduled_monitor_metadata"], "alias": "scheduled_monitor_metadata", "checksum": {"name": "sha256", "checksum": "aeb7c81d7ca5ca18d2edc40f540f0e1a542824403f72c70b4d68f2e991c3c1ec"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.7004032, "relation_name": "cleansed.BQ_ARCHIVE.scheduled_monitor_metadata", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'scheduled_monitor_metadata') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "scheduled_monitor_metadata"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.scheduled_monitor_metadata"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/scheduled_monitor_metadata.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.scheduled_monitor_metadata", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.pagerduty_schedules": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "pagerduty_schedules", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/pagerduty_schedules.sql", "original_file_path": "models/znoc_sla_phd/pagerduty_schedules.sql", "unique_id": "model.cleansed_bq_archive.pagerduty_schedules", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "pagerduty_schedules"], "alias": "pagerduty_schedules", "checksum": {"name": "sha256", "checksum": "49b6dc88b2baea0e21492eefcf30e8b880949613c57c11c3d16a27a4b3d066e1"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.7070909, "relation_name": "cleansed.BQ_ARCHIVE.pagerduty_schedules", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'pagerduty_schedules') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "pagerduty_schedules"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_schedules"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/pagerduty_schedules.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.pagerduty_schedules", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.scheduled_unowned_projects": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "scheduled_unowned_projects", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/scheduled_unowned_projects.sql", "original_file_path": "models/znoc_sla_phd/scheduled_unowned_projects.sql", "unique_id": "model.cleansed_bq_archive.scheduled_unowned_projects", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "scheduled_unowned_projects"], "alias": "scheduled_unowned_projects", "checksum": {"name": "sha256", "checksum": "cd59618c826e8f48b0fc8a12d01ecdb51d8aa38dffe68d6701743b3d3cc4ef3f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.7124505, "relation_name": "cleansed.BQ_ARCHIVE.scheduled_unowned_projects", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'scheduled_unowned_projects') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "scheduled_unowned_projects"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.scheduled_unowned_projects"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/scheduled_unowned_projects.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.scheduled_unowned_projects", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.pagerduty_incidents": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "pagerduty_incidents", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/pagerduty_incidents.sql", "original_file_path": "models/znoc_sla_phd/pagerduty_incidents.sql", "unique_id": "model.cleansed_bq_archive.pagerduty_incidents", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "pagerduty_incidents"], "alias": "pagerduty_incidents", "checksum": {"name": "sha256", "checksum": "2670dd6bd599b960cc37cc70d5e0873960d85d7a78b1809f666c8a7a950c8874"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.717776, "relation_name": "cleansed.BQ_ARCHIVE.pagerduty_incidents", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'pagerduty_incidents') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "pagerduty_incidents"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_incidents"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/pagerduty_incidents.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.pagerduty_incidents", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.SC_Canaries": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "SC_Canaries", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "znoc_sla_phd/SC_Canaries.sql", "original_file_path": "models/znoc_sla_phd/SC_Canaries.sql", "unique_id": "model.cleansed_bq_archive.SC_Canaries", "fqn": ["cleansed_bq_archive", "znoc_sla_phd", "SC_Canaries"], "alias": "SC_Canaries", "checksum": {"name": "sha256", "checksum": "aef40eeaa11820c4a1c1822cba0b1405e01362c0302c2a94412a10670453f8e8"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.7230728, "relation_name": "cleansed.BQ_ARCHIVE.SC_Canaries", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'SC_Canaries') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "SC_Canaries"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.SC_Canaries"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/znoc_sla_phd/SC_Canaries.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.SC_Canaries", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.cs_db_acctmngr_chat_accounts_tableau": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "cs_db_acctmngr_chat_accounts_tableau", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_analytics__success__tableau/cs_db_acctmngr_chat_accounts_tableau.sql", "original_file_path": "models/eda_analytics__success__tableau/cs_db_acctmngr_chat_accounts_tableau.sql", "unique_id": "model.cleansed_bq_archive.cs_db_acctmngr_chat_accounts_tableau", "fqn": ["cleansed_bq_archive", "eda_analytics__success__tableau", "cs_db_acctmngr_chat_accounts_tableau"], "alias": "cs_db_acctmngr_chat_accounts_tableau", "checksum": {"name": "sha256", "checksum": "61429ef4a6b9a483002ae013653c82d356f30748b4767bab71955c404048dffa"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.728105, "relation_name": "cleansed.BQ_ARCHIVE.cs_db_acctmngr_chat_accounts_tableau", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'cs_db_acctmngr_chat_accounts_tableau') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "cs_db_acctmngr_chat_accounts_tableau"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_chat_accounts_tableau"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_analytics__success__tableau/cs_db_acctmngr_chat_accounts_tableau.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.cs_db_acctmngr_chat_accounts_tableau", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.cs_db_acctmngr_master_tableau": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "cs_db_acctmngr_master_tableau", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_analytics__success__tableau/cs_db_acctmngr_master_tableau.sql", "original_file_path": "models/eda_analytics__success__tableau/cs_db_acctmngr_master_tableau.sql", "unique_id": "model.cleansed_bq_archive.cs_db_acctmngr_master_tableau", "fqn": ["cleansed_bq_archive", "eda_analytics__success__tableau", "cs_db_acctmngr_master_tableau"], "alias": "cs_db_acctmngr_master_tableau", "checksum": {"name": "sha256", "checksum": "a055b766590935341bdf8fffcb9099d499ba51a1e49d934e4a6af7a7983eedd8"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.7331955, "relation_name": "cleansed.BQ_ARCHIVE.cs_db_acctmngr_master_tableau", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'cs_db_acctmngr_master_tableau') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "cs_db_acctmngr_master_tableau"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_master_tableau"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_analytics__success__tableau/cs_db_acctmngr_master_tableau.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.cs_db_acctmngr_master_tableau", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.cs_db_acctmngr_benchmark_tableau": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "cs_db_acctmngr_benchmark_tableau", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_analytics__success__tableau/cs_db_acctmngr_benchmark_tableau.sql", "original_file_path": "models/eda_analytics__success__tableau/cs_db_acctmngr_benchmark_tableau.sql", "unique_id": "model.cleansed_bq_archive.cs_db_acctmngr_benchmark_tableau", "fqn": ["cleansed_bq_archive", "eda_analytics__success__tableau", "cs_db_acctmngr_benchmark_tableau"], "alias": "cs_db_acctmngr_benchmark_tableau", "checksum": {"name": "sha256", "checksum": "55385f224475a2582f6bd841a93b0ac52a57471337e58cb40e2d9efbe7c426f0"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.739788, "relation_name": "cleansed.BQ_ARCHIVE.cs_db_acctmngr_benchmark_tableau", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'cs_db_acctmngr_benchmark_tableau') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "cs_db_acctmngr_benchmark_tableau"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_benchmark_tableau"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_analytics__success__tableau/cs_db_acctmngr_benchmark_tableau.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.cs_db_acctmngr_benchmark_tableau", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.cs_db_acctmngr_wtdavg_median_tableau": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "cs_db_acctmngr_wtdavg_median_tableau", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_analytics__success__tableau/cs_db_acctmngr_wtdavg_median_tableau.sql", "original_file_path": "models/eda_analytics__success__tableau/cs_db_acctmngr_wtdavg_median_tableau.sql", "unique_id": "model.cleansed_bq_archive.cs_db_acctmngr_wtdavg_median_tableau", "fqn": ["cleansed_bq_archive", "eda_analytics__success__tableau", "cs_db_acctmngr_wtdavg_median_tableau"], "alias": "cs_db_acctmngr_wtdavg_median_tableau", "checksum": {"name": "sha256", "checksum": "c12863bbb21f10af97abe1ae09821e048059ffa1a0e1b88d782d6a28eaa67fd8"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.7450814, "relation_name": "cleansed.BQ_ARCHIVE.cs_db_acctmngr_wtdavg_median_tableau", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'cs_db_acctmngr_wtdavg_median_tableau') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "cs_db_acctmngr_wtdavg_median_tableau"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_wtdavg_median_tableau"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_analytics__success__tableau/cs_db_acctmngr_wtdavg_median_tableau.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.cs_db_acctmngr_wtdavg_median_tableau", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.cs_db_acctmngr_median_tableau": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "cs_db_acctmngr_median_tableau", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_analytics__success__tableau/cs_db_acctmngr_median_tableau.sql", "original_file_path": "models/eda_analytics__success__tableau/cs_db_acctmngr_median_tableau.sql", "unique_id": "model.cleansed_bq_archive.cs_db_acctmngr_median_tableau", "fqn": ["cleansed_bq_archive", "eda_analytics__success__tableau", "cs_db_acctmngr_median_tableau"], "alias": "cs_db_acctmngr_median_tableau", "checksum": {"name": "sha256", "checksum": "79797bcf34c228303ce9eca3d6b66a77eaf08e124adfb48b14abfbe8b1d2c56c"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.7503896, "relation_name": "cleansed.BQ_ARCHIVE.cs_db_acctmngr_median_tableau", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'cs_db_acctmngr_median_tableau') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "cs_db_acctmngr_median_tableau"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_median_tableau"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_analytics__success__tableau/cs_db_acctmngr_median_tableau.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.cs_db_acctmngr_median_tableau", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.cs_db_acctmngr_chshacct_tableau": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "cs_db_acctmngr_chshacct_tableau", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_analytics__success__tableau/cs_db_acctmngr_chshacct_tableau.sql", "original_file_path": "models/eda_analytics__success__tableau/cs_db_acctmngr_chshacct_tableau.sql", "unique_id": "model.cleansed_bq_archive.cs_db_acctmngr_chshacct_tableau", "fqn": ["cleansed_bq_archive", "eda_analytics__success__tableau", "cs_db_acctmngr_chshacct_tableau"], "alias": "cs_db_acctmngr_chshacct_tableau", "checksum": {"name": "sha256", "checksum": "3363a83ad0e23937f0c6561382b9007a38d1b1944372c081fb49620d6bffcd52"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.7553911, "relation_name": "cleansed.BQ_ARCHIVE.cs_db_acctmngr_chshacct_tableau", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'cs_db_acctmngr_chshacct_tableau') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "cs_db_acctmngr_chshacct_tableau"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_chshacct_tableau"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_analytics__success__tableau/cs_db_acctmngr_chshacct_tableau.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.cs_db_acctmngr_chshacct_tableau", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.acctmgrdash_full_list_of_accounts_tableau": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "acctmgrdash_full_list_of_accounts_tableau", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_analytics__success__tableau/acctmgrdash_full_list_of_accounts_tableau.sql", "original_file_path": "models/eda_analytics__success__tableau/acctmgrdash_full_list_of_accounts_tableau.sql", "unique_id": "model.cleansed_bq_archive.acctmgrdash_full_list_of_accounts_tableau", "fqn": ["cleansed_bq_archive", "eda_analytics__success__tableau", "acctmgrdash_full_list_of_accounts_tableau"], "alias": "acctmgrdash_full_list_of_accounts_tableau", "checksum": {"name": "sha256", "checksum": "90d4d188425457adb2bfe4b6a63087c14380893d53603e27fb31a8659221a874"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.7605193, "relation_name": "cleansed.BQ_ARCHIVE.acctmgrdash_full_list_of_accounts_tableau", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'acctmgrdash_full_list_of_accounts_tableau') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "acctmgrdash_full_list_of_accounts_tableau"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.acctmgrdash_full_list_of_accounts_tableau"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_analytics__success__tableau/acctmgrdash_full_list_of_accounts_tableau.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.acctmgrdash_full_list_of_accounts_tableau", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.cs_db_acctmngr_utilization": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "cs_db_acctmngr_utilization", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_analytics__success__tableau/cs_db_acctmngr_utilization.sql", "original_file_path": "models/eda_analytics__success__tableau/cs_db_acctmngr_utilization.sql", "unique_id": "model.cleansed_bq_archive.cs_db_acctmngr_utilization", "fqn": ["cleansed_bq_archive", "eda_analytics__success__tableau", "cs_db_acctmngr_utilization"], "alias": "cs_db_acctmngr_utilization", "checksum": {"name": "sha256", "checksum": "4e7e6503c1426940c59890217d1a7fb24801ad51536610dc46f5101d7ba7e88d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.765738, "relation_name": "cleansed.BQ_ARCHIVE.cs_db_acctmngr_utilization", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'cs_db_acctmngr_utilization') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "cs_db_acctmngr_utilization"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_utilization"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_analytics__success__tableau/cs_db_acctmngr_utilization.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.cs_db_acctmngr_utilization", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.cs_db_acctmngr_chshacct_tableau_preagg": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "cs_db_acctmngr_chshacct_tableau_preagg", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_analytics__success__tableau/cs_db_acctmngr_chshacct_tableau_preagg.sql", "original_file_path": "models/eda_analytics__success__tableau/cs_db_acctmngr_chshacct_tableau_preagg.sql", "unique_id": "model.cleansed_bq_archive.cs_db_acctmngr_chshacct_tableau_preagg", "fqn": ["cleansed_bq_archive", "eda_analytics__success__tableau", "cs_db_acctmngr_chshacct_tableau_preagg"], "alias": "cs_db_acctmngr_chshacct_tableau_preagg", "checksum": {"name": "sha256", "checksum": "1800b13a1df4a7141e5f92e1f94cee2cab3debc69a3c4b27a3541e8778d50d7e"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.7709816, "relation_name": "cleansed.BQ_ARCHIVE.cs_db_acctmngr_chshacct_tableau_preagg", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'cs_db_acctmngr_chshacct_tableau_preagg') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "cs_db_acctmngr_chshacct_tableau_preagg"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_chshacct_tableau_preagg"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_analytics__success__tableau/cs_db_acctmngr_chshacct_tableau_preagg.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.cs_db_acctmngr_chshacct_tableau_preagg", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_push_notification_opened": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_push_notification_opened", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_push_notification_opened.sql", "original_file_path": "models/segment_support_ios/support_i_os_push_notification_opened.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_push_notification_opened", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_push_notification_opened"], "alias": "support_i_os_push_notification_opened", "checksum": {"name": "sha256", "checksum": "6d2fb78e642c0d7b24f3fda7f0b6d3d5d1d50bb929f57576a0bf1923690865fe"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.7776256, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_push_notification_opened", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_push_notification_opened') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_push_notification_opened"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_push_notification_opened"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_push_notification_opened.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_push_notification_opened", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_search_submitted": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_search_submitted", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_search_submitted.sql", "original_file_path": "models/segment_support_ios/support_i_os_search_submitted.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_search_submitted", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_search_submitted"], "alias": "support_i_os_search_submitted", "checksum": {"name": "sha256", "checksum": "364321fcb8de488b80d77413778cb9f8387c269fd970c29ebed9e42c7474f9ed"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.7825873, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_search_submitted", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_search_submitted') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_search_submitted"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_search_submitted"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_search_submitted.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_search_submitted", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_ticket_updated": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_ticket_updated", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_ticket_updated.sql", "original_file_path": "models/segment_support_ios/support_i_os_ticket_updated.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_ticket_updated", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_ticket_updated"], "alias": "support_i_os_ticket_updated", "checksum": {"name": "sha256", "checksum": "510c0daf08a1336945206a8864697eaafa9f4a76432465674ddd7e2087743630"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.7877262, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_ticket_updated", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_ticket_updated') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_ticket_updated"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_ticket_updated"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_ticket_updated.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_ticket_updated", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_user_profile_saved": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_user_profile_saved", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_user_profile_saved.sql", "original_file_path": "models/segment_support_ios/support_i_os_user_profile_saved.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_user_profile_saved", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_user_profile_saved"], "alias": "support_i_os_user_profile_saved", "checksum": {"name": "sha256", "checksum": "9df923e401bcdabe7ce0fc4146ef815a42152403c20eb426b9f9e2efdb49ad71"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.7930205, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_user_profile_saved", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_user_profile_saved') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_user_profile_saved"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_user_profile_saved"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_user_profile_saved.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_user_profile_saved", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_application_opened": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_application_opened", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_application_opened.sql", "original_file_path": "models/segment_support_ios/support_i_os_application_opened.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_application_opened", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_application_opened"], "alias": "support_i_os_application_opened", "checksum": {"name": "sha256", "checksum": "0e489e0804ee07991be5cc2c33f0c6abcfae4fdb5025cb3b8291f8da9ed52564"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.7982347, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_application_opened", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_application_opened') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_application_opened"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_application_opened"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_application_opened.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_application_opened", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_bulk_edit_opened": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_bulk_edit_opened", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_bulk_edit_opened.sql", "original_file_path": "models/segment_support_ios/support_i_os_bulk_edit_opened.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_bulk_edit_opened", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_bulk_edit_opened"], "alias": "support_i_os_bulk_edit_opened", "checksum": {"name": "sha256", "checksum": "2a44c656152da111b2ad0d8c61123dd71446295a331e91a144fb879d97eea090"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.8034198, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_bulk_edit_opened", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_bulk_edit_opened') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_bulk_edit_opened"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_bulk_edit_opened"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_bulk_edit_opened.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_bulk_edit_opened", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_ticket_reply_type_changed": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_ticket_reply_type_changed", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_ticket_reply_type_changed.sql", "original_file_path": "models/segment_support_ios/support_i_os_ticket_reply_type_changed.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_ticket_reply_type_changed", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_ticket_reply_type_changed"], "alias": "support_i_os_ticket_reply_type_changed", "checksum": {"name": "sha256", "checksum": "700fa118a9e5ad35878bd0fb5b4c0cf7a7c0cb8d8470a8e887730ba089064681"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.8084724, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_ticket_reply_type_changed", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_ticket_reply_type_changed') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_ticket_reply_type_changed"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_ticket_reply_type_changed"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_ticket_reply_type_changed.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_ticket_reply_type_changed", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_bulk_edit_submitted": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_bulk_edit_submitted", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_bulk_edit_submitted.sql", "original_file_path": "models/segment_support_ios/support_i_os_bulk_edit_submitted.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_bulk_edit_submitted", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_bulk_edit_submitted"], "alias": "support_i_os_bulk_edit_submitted", "checksum": {"name": "sha256", "checksum": "ca8e8e0f593e34eed0427b4395c5e86ea09b6a14561e98f8e070357d3c155d7d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.8152363, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_bulk_edit_submitted", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_bulk_edit_submitted') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_bulk_edit_submitted"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_bulk_edit_submitted"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_bulk_edit_submitted.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_bulk_edit_submitted", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_comment_added": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_comment_added", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_comment_added.sql", "original_file_path": "models/segment_support_ios/support_i_os_comment_added.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_comment_added", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_comment_added"], "alias": "support_i_os_comment_added", "checksum": {"name": "sha256", "checksum": "9f46d1516ff7c1337808798ce166c212a89bde596ec961dd89219cb6a1d1a1bd"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.820514, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_comment_added", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_comment_added') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_comment_added"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_comment_added"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_comment_added.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_comment_added", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_edit_user_profile_opened": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_edit_user_profile_opened", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_edit_user_profile_opened.sql", "original_file_path": "models/segment_support_ios/support_i_os_edit_user_profile_opened.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_edit_user_profile_opened", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_edit_user_profile_opened"], "alias": "support_i_os_edit_user_profile_opened", "checksum": {"name": "sha256", "checksum": "9c28a0992ed4aef1142aa03fa27f08bef3249ce69a1d5d292deab1e596300e84"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.8257139, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_edit_user_profile_opened", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_edit_user_profile_opened') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_edit_user_profile_opened"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_edit_user_profile_opened"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_edit_user_profile_opened.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_edit_user_profile_opened", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_hc_tapped": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_hc_tapped", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_hc_tapped.sql", "original_file_path": "models/segment_support_ios/support_i_os_hc_tapped.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_hc_tapped", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_hc_tapped"], "alias": "support_i_os_hc_tapped", "checksum": {"name": "sha256", "checksum": "acdac94b35828822829502a60a7368fb3e79c8d2657f1726573b1bdffeaf46c3"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.8309677, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_hc_tapped", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_hc_tapped') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_hc_tapped"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_hc_tapped"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_hc_tapped.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_hc_tapped", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_opened_view_management": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_opened_view_management", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_opened_view_management.sql", "original_file_path": "models/segment_support_ios/support_i_os_opened_view_management.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_opened_view_management", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_opened_view_management"], "alias": "support_i_os_opened_view_management", "checksum": {"name": "sha256", "checksum": "398abfb91b86bf19b066a220eff15831734665296a0c81216457f390cd061a68"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.8359632, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_opened_view_management", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_opened_view_management') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_opened_view_management"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_opened_view_management"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_opened_view_management.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_opened_view_management", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_quick_property_tapped": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_quick_property_tapped", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_quick_property_tapped.sql", "original_file_path": "models/segment_support_ios/support_i_os_quick_property_tapped.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_quick_property_tapped", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_quick_property_tapped"], "alias": "support_i_os_quick_property_tapped", "checksum": {"name": "sha256", "checksum": "0fd209408efb622b03f45fd9abb564af6510f7bd0c0304735c6f2dbf0a29bbcc"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.8411431, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_quick_property_tapped", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_quick_property_tapped') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_quick_property_tapped"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_quick_property_tapped"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_quick_property_tapped.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_quick_property_tapped", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_user_profile_save_failed": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_user_profile_save_failed", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_user_profile_save_failed.sql", "original_file_path": "models/segment_support_ios/support_i_os_user_profile_save_failed.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_user_profile_save_failed", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_user_profile_save_failed"], "alias": "support_i_os_user_profile_save_failed", "checksum": {"name": "sha256", "checksum": "7b2c3f78e152dc36e1ade32016ea47805f6980440cb231fb7fd4dacbbd49ed01"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.8477807, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_user_profile_save_failed", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_user_profile_save_failed') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_user_profile_save_failed"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_user_profile_save_failed"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_user_profile_save_failed.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_user_profile_save_failed", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_ticket_created": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_ticket_created", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_ticket_created.sql", "original_file_path": "models/segment_support_ios/support_i_os_ticket_created.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_ticket_created", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_ticket_created"], "alias": "support_i_os_ticket_created", "checksum": {"name": "sha256", "checksum": "6736ee6ed138451c6d014c7cb9e976c38388d4e0b8fdeba6c6858a536a6790d1"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.9452531, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_ticket_created", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_ticket_created') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_ticket_created"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_ticket_created"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_ticket_created.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_ticket_created", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_macro_applied": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_macro_applied", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_macro_applied.sql", "original_file_path": "models/segment_support_ios/support_i_os_macro_applied.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_macro_applied", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_macro_applied"], "alias": "support_i_os_macro_applied", "checksum": {"name": "sha256", "checksum": "44bb91d069027505d048aa8d705eeeffa71e06cb40839e7438959a74f1cfff9c"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.9507403, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_macro_applied", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_macro_applied') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_macro_applied"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_macro_applied"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_macro_applied.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_macro_applied", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_ongoing_chat_conversation": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_ongoing_chat_conversation", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_ongoing_chat_conversation.sql", "original_file_path": "models/segment_support_ios/support_i_os_ongoing_chat_conversation.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_ongoing_chat_conversation", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_ongoing_chat_conversation"], "alias": "support_i_os_ongoing_chat_conversation", "checksum": {"name": "sha256", "checksum": "18d61e66369d941255e840d5d7d7a92a3b355c27f274dda8ffa8edea6cbdabd0"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.9561365, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_ongoing_chat_conversation", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_ongoing_chat_conversation') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_ongoing_chat_conversation"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_ongoing_chat_conversation"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_ongoing_chat_conversation.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_ongoing_chat_conversation", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_comment_sort_order_changed": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_comment_sort_order_changed", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_comment_sort_order_changed.sql", "original_file_path": "models/segment_support_ios/support_i_os_comment_sort_order_changed.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_comment_sort_order_changed", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_comment_sort_order_changed"], "alias": "support_i_os_comment_sort_order_changed", "checksum": {"name": "sha256", "checksum": "107887af4e1f8db68bc4151b744a0a386f127195e5215c380f3f1cce36ef02da"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.9615963, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_comment_sort_order_changed", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_comment_sort_order_changed') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_comment_sort_order_changed"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_comment_sort_order_changed"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_comment_sort_order_changed.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_comment_sort_order_changed", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_accessed_user_profile_via_avatar": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_accessed_user_profile_via_avatar", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_accessed_user_profile_via_avatar.sql", "original_file_path": "models/segment_support_ios/support_i_os_accessed_user_profile_via_avatar.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_accessed_user_profile_via_avatar", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_accessed_user_profile_via_avatar"], "alias": "support_i_os_accessed_user_profile_via_avatar", "checksum": {"name": "sha256", "checksum": "ec2467751dc00747e34649fba0f0732920f59c2ec910a7c87d22cbeb957699a9"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.9667659, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_accessed_user_profile_via_avatar", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_accessed_user_profile_via_avatar') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_accessed_user_profile_via_avatar"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_accessed_user_profile_via_avatar"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_accessed_user_profile_via_avatar.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_accessed_user_profile_via_avatar", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_merge_opened": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_merge_opened", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_merge_opened.sql", "original_file_path": "models/segment_support_ios/support_i_os_merge_opened.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_merge_opened", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_merge_opened"], "alias": "support_i_os_merge_opened", "checksum": {"name": "sha256", "checksum": "33b897952dd29447c9730e6b8ebfea0f5d9ae4f5374b480e693b25293d28b730"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.9719913, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_merge_opened", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_merge_opened') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_merge_opened"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_merge_opened"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_merge_opened.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_merge_opened", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_merge_submitted": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_merge_submitted", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_merge_submitted.sql", "original_file_path": "models/segment_support_ios/support_i_os_merge_submitted.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_merge_submitted", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_merge_submitted"], "alias": "support_i_os_merge_submitted", "checksum": {"name": "sha256", "checksum": "bf02267bc9c836a111d5de6df30b9ab453d8ce6fb7f6f56181b52e041d95945e"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.978506, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_merge_submitted", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_merge_submitted') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_merge_submitted"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_merge_submitted"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_merge_submitted.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_merge_submitted", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_talk_status_opened": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_talk_status_opened", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_talk_status_opened.sql", "original_file_path": "models/segment_support_ios/support_i_os_talk_status_opened.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_talk_status_opened", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_talk_status_opened"], "alias": "support_i_os_talk_status_opened", "checksum": {"name": "sha256", "checksum": "c8d5c4045775c0b12e1957fa439d8449a78bb777dd7e279322cf9256fbb19075"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.983828, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_talk_status_opened", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_talk_status_opened') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_talk_status_opened"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_talk_status_opened"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_talk_status_opened.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_talk_status_opened", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_shortcut_menu_action": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_shortcut_menu_action", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_shortcut_menu_action.sql", "original_file_path": "models/segment_support_ios/support_i_os_shortcut_menu_action.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_shortcut_menu_action", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_shortcut_menu_action"], "alias": "support_i_os_shortcut_menu_action", "checksum": {"name": "sha256", "checksum": "a53aa39e94b98cf185915d19b1a05f3942591a662c9b0700effe597ddd81da9e"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.9891503, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_shortcut_menu_action", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_shortcut_menu_action') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_shortcut_menu_action"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_shortcut_menu_action"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_shortcut_menu_action.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_shortcut_menu_action", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_search_opened": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_search_opened", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_search_opened.sql", "original_file_path": "models/segment_support_ios/support_i_os_search_opened.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_search_opened", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_search_opened"], "alias": "support_i_os_search_opened", "checksum": {"name": "sha256", "checksum": "e0da173d3824c2e88b03e5f08bd8a0566072f6627ee9cc6dc5df82680e55e6ba"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.994302, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_search_opened", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_search_opened') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_search_opened"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_search_opened"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_search_opened.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_search_opened", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_push_notification_received": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_push_notification_received", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_push_notification_received.sql", "original_file_path": "models/segment_support_ios/support_i_os_push_notification_received.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_push_notification_received", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_push_notification_received"], "alias": "support_i_os_push_notification_received", "checksum": {"name": "sha256", "checksum": "b9244a519592f4f79ef5ef28bb947fc2e5e038de0b256f8dbc70ac55f0a993f2"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557617.9995883, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_push_notification_received", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_push_notification_received') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_push_notification_received"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_push_notification_received"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_push_notification_received.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_push_notification_received", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_talk_status_changed": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_talk_status_changed", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_talk_status_changed.sql", "original_file_path": "models/segment_support_ios/support_i_os_talk_status_changed.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_talk_status_changed", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_talk_status_changed"], "alias": "support_i_os_talk_status_changed", "checksum": {"name": "sha256", "checksum": "a6c223d7aa8a656568ec80ec4263440e148aa785ea314b8552bdf42f9f59da23"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.0049915, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_talk_status_changed", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_talk_status_changed') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_talk_status_changed"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_talk_status_changed"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_talk_status_changed.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_talk_status_changed", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_properties_changed": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_properties_changed", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_properties_changed.sql", "original_file_path": "models/segment_support_ios/support_i_os_properties_changed.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_properties_changed", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_properties_changed"], "alias": "support_i_os_properties_changed", "checksum": {"name": "sha256", "checksum": "078bad988689159dd8b266498819bde5ab50fefde2b407c89c03f0ad3c1bb266"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.0104349, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_properties_changed", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_properties_changed') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_properties_changed"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_properties_changed"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_properties_changed.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_properties_changed", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_form_opened": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_form_opened", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_form_opened.sql", "original_file_path": "models/segment_support_ios/support_i_os_form_opened.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_form_opened", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_form_opened"], "alias": "support_i_os_form_opened", "checksum": {"name": "sha256", "checksum": "2fc991950548d89e4a3907d831411a47116be906a4a03e7934636db4f839af49"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.017684, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_form_opened", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_form_opened') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_form_opened"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_form_opened"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_form_opened.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_form_opened", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_quick_merge_not_permitted": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_quick_merge_not_permitted", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_quick_merge_not_permitted.sql", "original_file_path": "models/segment_support_ios/support_i_os_quick_merge_not_permitted.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_quick_merge_not_permitted", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_quick_merge_not_permitted"], "alias": "support_i_os_quick_merge_not_permitted", "checksum": {"name": "sha256", "checksum": "bddbf5bedf1f1e77dc75dcf9bf4e009b2d1b2652e4660ffc336f1963683c93eb"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.0228865, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_quick_merge_not_permitted", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_quick_merge_not_permitted') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_quick_merge_not_permitted"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_quick_merge_not_permitted"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_quick_merge_not_permitted.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_quick_merge_not_permitted", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_user_profile_created": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_user_profile_created", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_user_profile_created.sql", "original_file_path": "models/segment_support_ios/support_i_os_user_profile_created.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_user_profile_created", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_user_profile_created"], "alias": "support_i_os_user_profile_created", "checksum": {"name": "sha256", "checksum": "9fea95d3abab29eb7e1d5af8ad4f835860171891a14b9d963b9cd44d8d01880b"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.0283163, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_user_profile_created", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_user_profile_created') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_user_profile_created"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_user_profile_created"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_user_profile_created.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_user_profile_created", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.support_i_os_search_ticket_opened": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "support_i_os_search_ticket_opened", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support_ios/support_i_os_search_ticket_opened.sql", "original_file_path": "models/segment_support_ios/support_i_os_search_ticket_opened.sql", "unique_id": "model.cleansed_bq_archive.support_i_os_search_ticket_opened", "fqn": ["cleansed_bq_archive", "segment_support_ios", "support_i_os_search_ticket_opened"], "alias": "support_i_os_search_ticket_opened", "checksum": {"name": "sha256", "checksum": "c8a7e4fc95dbb19fa94c1963f74292c733893066f0ea749fb6af5463707e3111"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.0336654, "relation_name": "cleansed.BQ_ARCHIVE.support_i_os_search_ticket_opened", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'support_i_os_search_ticket_opened') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "support_i_os_search_ticket_opened"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_search_ticket_opened"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support_ios/support_i_os_search_ticket_opened.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.support_i_os_search_ticket_opened", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.zendesk_marketingweb_ga_sessions": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "zendesk_marketingweb_ga_sessions", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_google_analytics/zendesk_marketingweb_ga_sessions.sql", "original_file_path": "models/eda_google_analytics/zendesk_marketingweb_ga_sessions.sql", "unique_id": "model.cleansed_bq_archive.zendesk_marketingweb_ga_sessions", "fqn": ["cleansed_bq_archive", "eda_google_analytics", "zendesk_marketingweb_ga_sessions"], "alias": "zendesk_marketingweb_ga_sessions", "checksum": {"name": "sha256", "checksum": "7c43cc132bbcd6dc4e33d0c631bd02e36838e45ea908b5d9c6ea2398fca225b4"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.0389721, "relation_name": "cleansed.BQ_ARCHIVE.zendesk_marketingweb_ga_sessions", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'zendesk_marketingweb_ga_sessions_2022_01_01') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "zendesk_marketingweb_ga_sessions_2022_01_01"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.zendesk_marketingweb_ga_sessions_2022_01_01"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_google_analytics/zendesk_marketingweb_ga_sessions.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.zendesk_marketingweb_ga_sessions_2022_01_01", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_google_analytics__pages_v2": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "eda_google_analytics__pages_v2", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_google_analytics/eda_google_analytics__pages_v2.sql", "original_file_path": "models/eda_google_analytics/eda_google_analytics__pages_v2.sql", "unique_id": "model.cleansed_bq_archive.eda_google_analytics__pages_v2", "fqn": ["cleansed_bq_archive", "eda_google_analytics", "eda_google_analytics__pages_v2"], "alias": "eda_google_analytics__pages_v2", "checksum": {"name": "sha256", "checksum": "872f38f7e2cc7be4796625896ea0cc94f379dd1042feb6819f31d1622f3888a4"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.0443072, "relation_name": "cleansed.BQ_ARCHIVE.eda_google_analytics__pages_v2", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_google_analytics__pages_v2_2022_01_01') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_google_analytics__pages_v2_2022_01_01"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_google_analytics__pages_v2_2022_01_01"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_google_analytics/eda_google_analytics__pages_v2.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_google_analytics__pages_v2_2022_01_01", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.zendesk_marketingweb_ga_pages": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "zendesk_marketingweb_ga_pages", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_google_analytics/zendesk_marketingweb_ga_pages.sql", "original_file_path": "models/eda_google_analytics/zendesk_marketingweb_ga_pages.sql", "unique_id": "model.cleansed_bq_archive.zendesk_marketingweb_ga_pages", "fqn": ["cleansed_bq_archive", "eda_google_analytics", "zendesk_marketingweb_ga_pages"], "alias": "zendesk_marketingweb_ga_pages", "checksum": {"name": "sha256", "checksum": "9002fc036d8a859ff4929cfdb0b44e84226e758a343e5f8ecf7106d0df5806ee"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.0494142, "relation_name": "cleansed.BQ_ARCHIVE.zendesk_marketingweb_ga_pages", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'zendesk_marketingweb_ga_pages_2022_01_01') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "zendesk_marketingweb_ga_pages_2022_01_01"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.zendesk_marketingweb_ga_pages_2022_01_01"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_google_analytics/zendesk_marketingweb_ga_pages.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.zendesk_marketingweb_ga_pages_2022_01_01", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_google_analytics__sessions_v2": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "eda_google_analytics__sessions_v2", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_google_analytics/eda_google_analytics__sessions_v2.sql", "original_file_path": "models/eda_google_analytics/eda_google_analytics__sessions_v2.sql", "unique_id": "model.cleansed_bq_archive.eda_google_analytics__sessions_v2", "fqn": ["cleansed_bq_archive", "eda_google_analytics", "eda_google_analytics__sessions_v2"], "alias": "eda_google_analytics__sessions_v2", "checksum": {"name": "sha256", "checksum": "1d6f163396c184bed434a0f6b66134bb7329aafce424ae2afc851273f46c4be6"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.056056, "relation_name": "cleansed.BQ_ARCHIVE.eda_google_analytics__sessions_v2", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_google_analytics__sessions_v2_2022_01_01') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_google_analytics__sessions_v2_2022_01_01"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_google_analytics__sessions_v2_2022_01_01"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_google_analytics/eda_google_analytics__sessions_v2.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_google_analytics__sessions_v2_2022_01_01", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.google_analytics_curated": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "google_analytics_curated", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_google_analytics/google_analytics_curated.sql", "original_file_path": "models/eda_google_analytics/google_analytics_curated.sql", "unique_id": "model.cleansed_bq_archive.google_analytics_curated", "fqn": ["cleansed_bq_archive", "eda_google_analytics", "google_analytics_curated"], "alias": "google_analytics_curated", "checksum": {"name": "sha256", "checksum": "88bfc31e483c36eabdf3f91db4765b9d38cd695b6058656ff9efc2563dd10f64"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.0614824, "relation_name": "cleansed.BQ_ARCHIVE.google_analytics_curated", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'google_analytics_curated_2022_01_01') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "google_analytics_curated_2022_01_01"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.google_analytics_curated_2022_01_01"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_google_analytics/google_analytics_curated.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.google_analytics_curated_2022_01_01", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sa_pipeline_movement": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "sa_pipeline_movement", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "gtm_operations_analyst_general_emea/sa_pipeline_movement.sql", "original_file_path": "models/gtm_operations_analyst_general_emea/sa_pipeline_movement.sql", "unique_id": "model.cleansed_bq_archive.sa_pipeline_movement", "fqn": ["cleansed_bq_archive", "gtm_operations_analyst_general_emea", "sa_pipeline_movement"], "alias": "sa_pipeline_movement", "checksum": {"name": "sha256", "checksum": "0d4b31deebccbb93137bfbc01d2fa74debf7ea012329bb0a6df4a8c3096b6eea"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.0667667, "relation_name": "cleansed.BQ_ARCHIVE.sa_pipeline_movement", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sa_pipeline_movement') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sa_pipeline_movement"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sa_pipeline_movement"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/gtm_operations_analyst_general_emea/sa_pipeline_movement.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sa_pipeline_movement", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sa_recurring_revenue": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "sa_recurring_revenue", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "gtm_operations_analyst_general_emea/sa_recurring_revenue.sql", "original_file_path": "models/gtm_operations_analyst_general_emea/sa_recurring_revenue.sql", "unique_id": "model.cleansed_bq_archive.sa_recurring_revenue", "fqn": ["cleansed_bq_archive", "gtm_operations_analyst_general_emea", "sa_recurring_revenue"], "alias": "sa_recurring_revenue", "checksum": {"name": "sha256", "checksum": "cb1277962e0105fdf6119dd5df18c9e86aa24e82743baaf25b7e2738783b2219"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.0720286, "relation_name": "cleansed.BQ_ARCHIVE.sa_recurring_revenue", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sa_recurring_revenue') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sa_recurring_revenue"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sa_recurring_revenue"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/gtm_operations_analyst_general_emea/sa_recurring_revenue.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sa_recurring_revenue", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sa_opps_dash": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "sa_opps_dash", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "gtm_operations_analyst_general_emea/sa_opps_dash.sql", "original_file_path": "models/gtm_operations_analyst_general_emea/sa_opps_dash.sql", "unique_id": "model.cleansed_bq_archive.sa_opps_dash", "fqn": ["cleansed_bq_archive", "gtm_operations_analyst_general_emea", "sa_opps_dash"], "alias": "sa_opps_dash", "checksum": {"name": "sha256", "checksum": "350acb38c01339b7c8715b972466f8c7dfc3cb462895411f9ca7e0488cef419c"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.077157, "relation_name": "cleansed.BQ_ARCHIVE.sa_opps_dash", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sa_opps_dash') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sa_opps_dash"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sa_opps_dash"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/gtm_operations_analyst_general_emea/sa_opps_dash.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sa_opps_dash", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sa_ops_dash_pipegen": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "sa_ops_dash_pipegen", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "gtm_operations_analyst_general_emea/sa_ops_dash_pipegen.sql", "original_file_path": "models/gtm_operations_analyst_general_emea/sa_ops_dash_pipegen.sql", "unique_id": "model.cleansed_bq_archive.sa_ops_dash_pipegen", "fqn": ["cleansed_bq_archive", "gtm_operations_analyst_general_emea", "sa_ops_dash_pipegen"], "alias": "sa_ops_dash_pipegen", "checksum": {"name": "sha256", "checksum": "aefcdefa99840e587dedc65b461eee926d61e0c51f69f2e731c68e63306c5f12"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.0823486, "relation_name": "cleansed.BQ_ARCHIVE.sa_ops_dash_pipegen", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sa_ops_dash_pipegen') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sa_ops_dash_pipegen"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sa_ops_dash_pipegen"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/gtm_operations_analyst_general_emea/sa_ops_dash_pipegen.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sa_ops_dash_pipegen", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.int_tickets_raw": {"database": "cleansed", "schema": "bq_product_archive", "name": "int_tickets_raw", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "eda_ds__feature_store/int_tickets_raw.sql", "original_file_path": "models/eda_ds__feature_store/int_tickets_raw.sql", "unique_id": "model.cleansed_bq_archive.int_tickets_raw", "fqn": ["cleansed_bq_archive", "eda_ds__feature_store", "int_tickets_raw"], "alias": "int_tickets_raw", "checksum": {"name": "sha256", "checksum": "902e5458c503e90a451de4a064f568e9fff19f2f256f4f86675f1de485205593"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557618.0890481, "relation_name": "cleansed.bq_product_archive.int_tickets_raw", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'int_tickets_raw') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "int_tickets_raw"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.int_tickets_raw"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/eda_ds__feature_store/int_tickets_raw.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.int_tickets_raw", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.billing_boost_start_trial_clicked": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "billing_boost_start_trial_clicked", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_billing/billing_boost_start_trial_clicked.sql", "original_file_path": "models/segment_billing/billing_boost_start_trial_clicked.sql", "unique_id": "model.cleansed_bq_archive.billing_boost_start_trial_clicked", "fqn": ["cleansed_bq_archive", "segment_billing", "billing_boost_start_trial_clicked"], "alias": "billing_boost_start_trial_clicked", "checksum": {"name": "sha256", "checksum": "003540d9ff0695f37d0e132211da73696ff1f5125596f4dd757061cd50859506"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.0942998, "relation_name": "cleansed.BQ_ARCHIVE.billing_boost_start_trial_clicked", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'billing_boost_start_trial_clicked') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "billing_boost_start_trial_clicked"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.billing_boost_start_trial_clicked"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_billing/billing_boost_start_trial_clicked.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.billing_boost_start_trial_clicked", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.billing_cart_loaded": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "billing_cart_loaded", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_billing/billing_cart_loaded.sql", "original_file_path": "models/segment_billing/billing_cart_loaded.sql", "unique_id": "model.cleansed_bq_archive.billing_cart_loaded", "fqn": ["cleansed_bq_archive", "segment_billing", "billing_cart_loaded"], "alias": "billing_cart_loaded", "checksum": {"name": "sha256", "checksum": "1aa4b2a309fa37af4a7af69edf471c4c8f4184a2b48968320747197ea330f049"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": "cleansed_bq_archive", "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "public", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": "cleansed_bq_archive", "docs": {"show": true, "node_color": null}, "patch_path": "cleansed_bq_archive://models/bq_archive_models.yml", "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "group": "cleansed_bq_archive", "access": "public"}, "created_at": 1746557619.7597415, "relation_name": "cleansed.BQ_ARCHIVE.billing_cart_loaded", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'billing_cart_loaded') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "billing_cart_loaded"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.billing_cart_loaded"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_billing/billing_cart_loaded.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.billing_cart_loaded", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "public", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.billing_payment_loaded": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "billing_payment_loaded", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_billing/billing_payment_loaded.sql", "original_file_path": "models/segment_billing/billing_payment_loaded.sql", "unique_id": "model.cleansed_bq_archive.billing_payment_loaded", "fqn": ["cleansed_bq_archive", "segment_billing", "billing_payment_loaded"], "alias": "billing_payment_loaded", "checksum": {"name": "sha256", "checksum": "b9dbe36ae219c57e3a9fd9ce5798f08fa1b2e93eccb504f015cdc7302afbcbc8"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": "cleansed_bq_archive", "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "public", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": "cleansed_bq_archive", "docs": {"show": true, "node_color": null}, "patch_path": "cleansed_bq_archive://models/bq_archive_models.yml", "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "group": "cleansed_bq_archive", "access": "public"}, "created_at": 1746557619.763232, "relation_name": "cleansed.BQ_ARCHIVE.billing_payment_loaded", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'billing_payment_loaded') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "billing_payment_loaded"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.billing_payment_loaded"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_billing/billing_payment_loaded.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.billing_payment_loaded", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "public", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.billing_promocode_submit": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "billing_promocode_submit", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_billing/billing_promocode_submit.sql", "original_file_path": "models/segment_billing/billing_promocode_submit.sql", "unique_id": "model.cleansed_bq_archive.billing_promocode_submit", "fqn": ["cleansed_bq_archive", "segment_billing", "billing_promocode_submit"], "alias": "billing_promocode_submit", "checksum": {"name": "sha256", "checksum": "a8fd6a8eb7ed193bf11d59b7cb49e4e8d04a923cacba50dbc832ea1d4eebf498"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.109864, "relation_name": "cleansed.BQ_ARCHIVE.billing_promocode_submit", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'billing_promocode_submit') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "billing_promocode_submit"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.billing_promocode_submit"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_billing/billing_promocode_submit.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.billing_promocode_submit", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.billing_update_submit": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "billing_update_submit", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_billing/billing_update_submit.sql", "original_file_path": "models/segment_billing/billing_update_submit.sql", "unique_id": "model.cleansed_bq_archive.billing_update_submit", "fqn": ["cleansed_bq_archive", "segment_billing", "billing_update_submit"], "alias": "billing_update_submit", "checksum": {"name": "sha256", "checksum": "a4713c8a449737dd666b3746797d287d4a4c9b5c6ef1691d1a1c9cb50988d740"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": "cleansed_bq_archive", "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "public", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": "cleansed_bq_archive", "docs": {"show": true, "node_color": null}, "patch_path": "cleansed_bq_archive://models/bq_archive_models.yml", "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "group": "cleansed_bq_archive", "access": "public"}, "created_at": 1746557619.7682543, "relation_name": "cleansed.BQ_ARCHIVE.billing_update_submit", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'billing_update_submit') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "billing_update_submit"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.billing_update_submit"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_billing/billing_update_submit.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.billing_update_submit", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "public", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.billing_quiz_started": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "billing_quiz_started", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_billing/billing_quiz_started.sql", "original_file_path": "models/segment_billing/billing_quiz_started.sql", "unique_id": "model.cleansed_bq_archive.billing_quiz_started", "fqn": ["cleansed_bq_archive", "segment_billing", "billing_quiz_started"], "alias": "billing_quiz_started", "checksum": {"name": "sha256", "checksum": "3404b8d81d27835a9af10c9daa465b6d361ae72ed5154cef6db768b56071c228"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.120503, "relation_name": "cleansed.BQ_ARCHIVE.billing_quiz_started", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'billing_quiz_started') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "billing_quiz_started"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.billing_quiz_started"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_billing/billing_quiz_started.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.billing_quiz_started", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.billing_web_widget_loaded": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "billing_web_widget_loaded", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_billing/billing_web_widget_loaded.sql", "original_file_path": "models/segment_billing/billing_web_widget_loaded.sql", "unique_id": "model.cleansed_bq_archive.billing_web_widget_loaded", "fqn": ["cleansed_bq_archive", "segment_billing", "billing_web_widget_loaded"], "alias": "billing_web_widget_loaded", "checksum": {"name": "sha256", "checksum": "6d66ea53e428523b6f07f5d5ec7f1ddab78d33bdb106047243457ac4fcaed020"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.1275089, "relation_name": "cleansed.BQ_ARCHIVE.billing_web_widget_loaded", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'billing_web_widget_loaded') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "billing_web_widget_loaded"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.billing_web_widget_loaded"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_billing/billing_web_widget_loaded.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.billing_web_widget_loaded", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.billing_cancellation_viewed": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "billing_cancellation_viewed", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_billing/billing_cancellation_viewed.sql", "original_file_path": "models/segment_billing/billing_cancellation_viewed.sql", "unique_id": "model.cleansed_bq_archive.billing_cancellation_viewed", "fqn": ["cleansed_bq_archive", "segment_billing", "billing_cancellation_viewed"], "alias": "billing_cancellation_viewed", "checksum": {"name": "sha256", "checksum": "05dd73651b49001307a640977e07ddb2a04b8c7c09fe0a80e00fbb9f5765069e"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.132605, "relation_name": "cleansed.BQ_ARCHIVE.billing_cancellation_viewed", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'billing_cancellation_viewed') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "billing_cancellation_viewed"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.billing_cancellation_viewed"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_billing/billing_cancellation_viewed.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.billing_cancellation_viewed", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.billing_pause_subscription_confirmed": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "billing_pause_subscription_confirmed", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_billing/billing_pause_subscription_confirmed.sql", "original_file_path": "models/segment_billing/billing_pause_subscription_confirmed.sql", "unique_id": "model.cleansed_bq_archive.billing_pause_subscription_confirmed", "fqn": ["cleansed_bq_archive", "segment_billing", "billing_pause_subscription_confirmed"], "alias": "billing_pause_subscription_confirmed", "checksum": {"name": "sha256", "checksum": "4cc1c5cff5ad4e424ef1d150fa22f77fa57ac86cf1037bc09fd7c2927e2585ce"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.1378942, "relation_name": "cleansed.BQ_ARCHIVE.billing_pause_subscription_confirmed", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'billing_pause_subscription_confirmed') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "billing_pause_subscription_confirmed"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.billing_pause_subscription_confirmed"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_billing/billing_pause_subscription_confirmed.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.billing_pause_subscription_confirmed", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.billing_subscription_viewed": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "billing_subscription_viewed", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_billing/billing_subscription_viewed.sql", "original_file_path": "models/segment_billing/billing_subscription_viewed.sql", "unique_id": "model.cleansed_bq_archive.billing_subscription_viewed", "fqn": ["cleansed_bq_archive", "segment_billing", "billing_subscription_viewed"], "alias": "billing_subscription_viewed", "checksum": {"name": "sha256", "checksum": "53c3228ca3c8f17d407e6b2d562146c0eb048904f05ab48a966b4f2fc560c92d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.1432, "relation_name": "cleansed.BQ_ARCHIVE.billing_subscription_viewed", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'billing_subscription_viewed') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "billing_subscription_viewed"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.billing_subscription_viewed"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_billing/billing_subscription_viewed.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.billing_subscription_viewed", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.billing_boost_upgrade_clicked": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "billing_boost_upgrade_clicked", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_billing/billing_boost_upgrade_clicked.sql", "original_file_path": "models/segment_billing/billing_boost_upgrade_clicked.sql", "unique_id": "model.cleansed_bq_archive.billing_boost_upgrade_clicked", "fqn": ["cleansed_bq_archive", "segment_billing", "billing_boost_upgrade_clicked"], "alias": "billing_boost_upgrade_clicked", "checksum": {"name": "sha256", "checksum": "5dad8cd980056ee628c2afb07d8781101b2e049f6c1826b4b1969f5d5e31fe29"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.1484754, "relation_name": "cleansed.BQ_ARCHIVE.billing_boost_upgrade_clicked", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'billing_boost_upgrade_clicked') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "billing_boost_upgrade_clicked"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.billing_boost_upgrade_clicked"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_billing/billing_boost_upgrade_clicked.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.billing_boost_upgrade_clicked", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.billing_boost_banner_clicked": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "billing_boost_banner_clicked", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_billing/billing_boost_banner_clicked.sql", "original_file_path": "models/segment_billing/billing_boost_banner_clicked.sql", "unique_id": "model.cleansed_bq_archive.billing_boost_banner_clicked", "fqn": ["cleansed_bq_archive", "segment_billing", "billing_boost_banner_clicked"], "alias": "billing_boost_banner_clicked", "checksum": {"name": "sha256", "checksum": "361e75025025b785044c68a050ffac0f78d1fb64b8c8c0f34bcdd00d3e51c0c7"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.1537461, "relation_name": "cleansed.BQ_ARCHIVE.billing_boost_banner_clicked", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'billing_boost_banner_clicked') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "billing_boost_banner_clicked"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.billing_boost_banner_clicked"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_billing/billing_boost_banner_clicked.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.billing_boost_banner_clicked", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.billing_boost_banner_eligible": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "billing_boost_banner_eligible", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_billing/billing_boost_banner_eligible.sql", "original_file_path": "models/segment_billing/billing_boost_banner_eligible.sql", "unique_id": "model.cleansed_bq_archive.billing_boost_banner_eligible", "fqn": ["cleansed_bq_archive", "segment_billing", "billing_boost_banner_eligible"], "alias": "billing_boost_banner_eligible", "checksum": {"name": "sha256", "checksum": "f66c4227eae09ef8590b743c175b6b6e080a6f13a7d2bed23c118d78d72fec81"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.15882, "relation_name": "cleansed.BQ_ARCHIVE.billing_boost_banner_eligible", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'billing_boost_banner_eligible') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "billing_boost_banner_eligible"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.billing_boost_banner_eligible"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_billing/billing_boost_banner_eligible.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.billing_boost_banner_eligible", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.billing_pause_subscription_clicked": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "billing_pause_subscription_clicked", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_billing/billing_pause_subscription_clicked.sql", "original_file_path": "models/segment_billing/billing_pause_subscription_clicked.sql", "unique_id": "model.cleansed_bq_archive.billing_pause_subscription_clicked", "fqn": ["cleansed_bq_archive", "segment_billing", "billing_pause_subscription_clicked"], "alias": "billing_pause_subscription_clicked", "checksum": {"name": "sha256", "checksum": "9111b1c5bde116c7b5ee0dab0eea3fcf905c668a56b80775ae99043061d788be"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.1655388, "relation_name": "cleansed.BQ_ARCHIVE.billing_pause_subscription_clicked", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'billing_pause_subscription_clicked') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "billing_pause_subscription_clicked"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.billing_pause_subscription_clicked"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_billing/billing_pause_subscription_clicked.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.billing_pause_subscription_clicked", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.billing_quiz_answer_submitted": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "billing_quiz_answer_submitted", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_billing/billing_quiz_answer_submitted.sql", "original_file_path": "models/segment_billing/billing_quiz_answer_submitted.sql", "unique_id": "model.cleansed_bq_archive.billing_quiz_answer_submitted", "fqn": ["cleansed_bq_archive", "segment_billing", "billing_quiz_answer_submitted"], "alias": "billing_quiz_answer_submitted", "checksum": {"name": "sha256", "checksum": "9c2fe7acbac910e6d0e6855fa61987f2982cac3f6aaa145e0e5898c584896fc8"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.1708782, "relation_name": "cleansed.BQ_ARCHIVE.billing_quiz_answer_submitted", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'billing_quiz_answer_submitted') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "billing_quiz_answer_submitted"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.billing_quiz_answer_submitted"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_billing/billing_quiz_answer_submitted.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.billing_quiz_answer_submitted", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.billing_customize_subscription": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "billing_customize_subscription", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_billing/billing_customize_subscription.sql", "original_file_path": "models/segment_billing/billing_customize_subscription.sql", "unique_id": "model.cleansed_bq_archive.billing_customize_subscription", "fqn": ["cleansed_bq_archive", "segment_billing", "billing_customize_subscription"], "alias": "billing_customize_subscription", "checksum": {"name": "sha256", "checksum": "2366da946bca77bbd9583d15187987aaea388261927f6838c9e4293cd76a940b"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.1762018, "relation_name": "cleansed.BQ_ARCHIVE.billing_customize_subscription", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'billing_customize_subscription') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "billing_customize_subscription"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.billing_customize_subscription"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_billing/billing_customize_subscription.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.billing_customize_subscription", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.billing_update_response": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "billing_update_response", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_billing/billing_update_response.sql", "original_file_path": "models/segment_billing/billing_update_response.sql", "unique_id": "model.cleansed_bq_archive.billing_update_response", "fqn": ["cleansed_bq_archive", "segment_billing", "billing_update_response"], "alias": "billing_update_response", "checksum": {"name": "sha256", "checksum": "a0e35a2bc65d49e1b1d9e9355b6a7c22390af159b66ce5a7e66eb68a7b2476c2"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.18157, "relation_name": "cleansed.BQ_ARCHIVE.billing_update_response", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'billing_update_response') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "billing_update_response"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.billing_update_response"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_billing/billing_update_response.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.billing_update_response", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.billing_cancellation_account_submit": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "billing_cancellation_account_submit", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_billing/billing_cancellation_account_submit.sql", "original_file_path": "models/segment_billing/billing_cancellation_account_submit.sql", "unique_id": "model.cleansed_bq_archive.billing_cancellation_account_submit", "fqn": ["cleansed_bq_archive", "segment_billing", "billing_cancellation_account_submit"], "alias": "billing_cancellation_account_submit", "checksum": {"name": "sha256", "checksum": "eff0a32194b1832e0fcea3f74b59edf484eb61e148095ac83f4b96817ef557bc"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.186696, "relation_name": "cleansed.BQ_ARCHIVE.billing_cancellation_account_submit", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'billing_cancellation_account_submit') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "billing_cancellation_account_submit"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.billing_cancellation_account_submit"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_billing/billing_cancellation_account_submit.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.billing_cancellation_account_submit", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.billing_cancel_account_clicked": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "billing_cancel_account_clicked", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_billing/billing_cancel_account_clicked.sql", "original_file_path": "models/segment_billing/billing_cancel_account_clicked.sql", "unique_id": "model.cleansed_bq_archive.billing_cancel_account_clicked", "fqn": ["cleansed_bq_archive", "segment_billing", "billing_cancel_account_clicked"], "alias": "billing_cancel_account_clicked", "checksum": {"name": "sha256", "checksum": "76feec19bb60d1478b27a9d3cbd9e57926cf91242eb9c66fccffba7a9ee5b1ab"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.1919477, "relation_name": "cleansed.BQ_ARCHIVE.billing_cancel_account_clicked", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'billing_cancel_account_clicked') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "billing_cancel_account_clicked"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.billing_cancel_account_clicked"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_billing/billing_cancel_account_clicked.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.billing_cancel_account_clicked", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.billing_boost_start_trial_confirmed": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "billing_boost_start_trial_confirmed", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_billing/billing_boost_start_trial_confirmed.sql", "original_file_path": "models/segment_billing/billing_boost_start_trial_confirmed.sql", "unique_id": "model.cleansed_bq_archive.billing_boost_start_trial_confirmed", "fqn": ["cleansed_bq_archive", "segment_billing", "billing_boost_start_trial_confirmed"], "alias": "billing_boost_start_trial_confirmed", "checksum": {"name": "sha256", "checksum": "186c5e569b51e6aaa12960fc709b3db18d32e17837c289a2f135a38decce217c"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.1988134, "relation_name": "cleansed.BQ_ARCHIVE.billing_boost_start_trial_confirmed", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'billing_boost_start_trial_confirmed') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "billing_boost_start_trial_confirmed"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.billing_boost_start_trial_confirmed"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_billing/billing_boost_start_trial_confirmed.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.billing_boost_start_trial_confirmed", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfdc_opp_scd2": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "sfdc_opp_scd2", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/sfdc_opp_scd2.sql", "original_file_path": "models/salesops/sfdc_opp_scd2.sql", "unique_id": "model.cleansed_bq_archive.sfdc_opp_scd2", "fqn": ["cleansed_bq_archive", "salesops", "sfdc_opp_scd2"], "alias": "sfdc_opp_scd2", "checksum": {"name": "sha256", "checksum": "122de4f32883a917506264834c65def48c93ebf1530147eb979e72c10a330f7e"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": "cleansed_bq_archive", "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "public", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": "cleansed_bq_archive", "docs": {"show": true, "node_color": null}, "patch_path": "cleansed_bq_archive://models/bq_archive_models.yml", "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "group": "cleansed_bq_archive", "access": "public"}, "created_at": 1746557619.7364426, "relation_name": "cleansed.BQ_ARCHIVE.sfdc_opp_scd2", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfdc_opp_scd2') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfdc_opp_scd2"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfdc_opp_scd2"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/sfdc_opp_scd2.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfdc_opp_scd2", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "public", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.dashboard_global_pipeline_eoq_snapshot": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "dashboard_global_pipeline_eoq_snapshot", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/dashboard_global_pipeline_eoq_snapshot.sql", "original_file_path": "models/salesops/dashboard_global_pipeline_eoq_snapshot.sql", "unique_id": "model.cleansed_bq_archive.dashboard_global_pipeline_eoq_snapshot", "fqn": ["cleansed_bq_archive", "salesops", "dashboard_global_pipeline_eoq_snapshot"], "alias": "dashboard_global_pipeline_eoq_snapshot", "checksum": {"name": "sha256", "checksum": "01d7c909bee8c1fd9559afe9c1e6f227437e40f6c6a62dac7a62b43cebf23828"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.2096503, "relation_name": "cleansed.BQ_ARCHIVE.dashboard_global_pipeline_eoq_snapshot", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'dashboard_global_pipeline_eoq_snapshot_may_to_mar') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "dashboard_global_pipeline_eoq_snapshot_may_to_mar"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_eoq_snapshot_may_to_mar"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/dashboard_global_pipeline_eoq_snapshot.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.dashboard_global_pipeline_eoq_snapshot_may_to_mar", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.markov_pipeline_attribution_model_results_channel_offer": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "markov_pipeline_attribution_model_results_channel_offer", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/markov_pipeline_attribution_model_results_channel_offer.sql", "original_file_path": "models/salesops/markov_pipeline_attribution_model_results_channel_offer.sql", "unique_id": "model.cleansed_bq_archive.markov_pipeline_attribution_model_results_channel_offer", "fqn": ["cleansed_bq_archive", "salesops", "markov_pipeline_attribution_model_results_channel_offer"], "alias": "markov_pipeline_attribution_model_results_channel_offer", "checksum": {"name": "sha256", "checksum": "d94494acca2a671a8357f8c3e935d429a96b963f8a38c3937e43b3f2a8c53be2"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": "cleansed_bq_archive", "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "public", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": "cleansed_bq_archive", "docs": {"show": true, "node_color": null}, "patch_path": "cleansed_bq_archive://models/bq_archive_models.yml", "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "group": "cleansed_bq_archive", "access": "public"}, "created_at": 1746557619.7563198, "relation_name": "cleansed.BQ_ARCHIVE.markov_pipeline_attribution_model_results_channel_offer", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'updated_markov_pipeline_attribution_model_results_channel_offer') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "updated_markov_pipeline_attribution_model_results_channel_offer"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.updated_markov_pipeline_attribution_model_results_channel_offer"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/markov_pipeline_attribution_model_results_channel_offer.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.updated_markov_pipeline_attribution_model_results_channel_offer", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "public", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.markov_opps_base_channel_offer": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "markov_opps_base_channel_offer", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/markov_opps_base_channel_offer.sql", "original_file_path": "models/salesops/markov_opps_base_channel_offer.sql", "unique_id": "model.cleansed_bq_archive.markov_opps_base_channel_offer", "fqn": ["cleansed_bq_archive", "salesops", "markov_opps_base_channel_offer"], "alias": "markov_opps_base_channel_offer", "checksum": {"name": "sha256", "checksum": "0fe8e29f9cd9891e8ee8fdaabd92b772ae20af39821246b38ab39c91176aa971"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": "cleansed_bq_archive", "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "public", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": "cleansed_bq_archive", "docs": {"show": true, "node_color": null}, "patch_path": "cleansed_bq_archive://models/bq_archive_models.yml", "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "group": "cleansed_bq_archive", "access": "public"}, "created_at": 1746557619.726088, "relation_name": "cleansed.BQ_ARCHIVE.markov_opps_base_channel_offer", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'markov_opps_base_channel_offer') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "markov_opps_base_channel_offer"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.markov_opps_base_channel_offer"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/markov_opps_base_channel_offer.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.markov_opps_base_channel_offer", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "public", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.attribution_user_touchpoint": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "attribution_user_touchpoint", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/attribution_user_touchpoint.sql", "original_file_path": "models/salesops/attribution_user_touchpoint.sql", "unique_id": "model.cleansed_bq_archive.attribution_user_touchpoint", "fqn": ["cleansed_bq_archive", "salesops", "attribution_user_touchpoint"], "alias": "attribution_user_touchpoint", "checksum": {"name": "sha256", "checksum": "8d6ba5fbc3cad4aea445637380c36847707cde48e907c2090d451602bec93843"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": "cleansed_bq_archive", "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "public", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": "cleansed_bq_archive", "docs": {"show": true, "node_color": null}, "patch_path": "cleansed_bq_archive://models/bq_archive_models.yml", "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "group": "cleansed_bq_archive", "access": "public"}, "created_at": 1746557619.7030506, "relation_name": "cleansed.BQ_ARCHIVE.attribution_user_touchpoint", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'attribution_user_touchpoint_jan_mar') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "attribution_user_touchpoint_jan_mar"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.attribution_user_touchpoint_jan_mar"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/attribution_user_touchpoint.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.attribution_user_touchpoint_jan_mar", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "public", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.bz_cost": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "bz_cost", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/bz_cost.sql", "original_file_path": "models/salesops/bz_cost.sql", "unique_id": "model.cleansed_bq_archive.bz_cost", "fqn": ["cleansed_bq_archive", "salesops", "bz_cost"], "alias": "bz_cost", "checksum": {"name": "sha256", "checksum": "6381fc0cf8248535d5bdbb4d3125e57faf6e6f0ec45dd144ea55340103c0c3fa"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": "cleansed_bq_archive", "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "public", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": "cleansed_bq_archive", "docs": {"show": true, "node_color": null}, "patch_path": "cleansed_bq_archive://models/bq_archive_models.yml", "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "group": "cleansed_bq_archive", "access": "public"}, "created_at": 1746557619.7070215, "relation_name": "cleansed.BQ_ARCHIVE.bz_cost", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'bz_cost_jan_20_fw') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "bz_cost_jan_20_fw"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.bz_cost_jan_20_fw"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/bz_cost.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.bz_cost_jan_20_fw", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "public", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.ss_markov_leads_base_table": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "ss_markov_leads_base_table", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/ss_markov_leads_base_table.sql", "original_file_path": "models/salesops/ss_markov_leads_base_table.sql", "unique_id": "model.cleansed_bq_archive.ss_markov_leads_base_table", "fqn": ["cleansed_bq_archive", "salesops", "ss_markov_leads_base_table"], "alias": "ss_markov_leads_base_table", "checksum": {"name": "sha256", "checksum": "35dc874ceb197761f85f951aa57724fd50499fb62c4137ab7ca82c80b9da8c99"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": "cleansed_bq_archive", "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "public", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": "cleansed_bq_archive", "docs": {"show": true, "node_color": null}, "patch_path": "cleansed_bq_archive://models/bq_archive_models.yml", "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "group": "cleansed_bq_archive", "access": "public"}, "created_at": 1746557619.7484703, "relation_name": "cleansed.BQ_ARCHIVE.ss_markov_leads_base_table", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'ss_markov_leads_base_table') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "ss_markov_leads_base_table"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.ss_markov_leads_base_table"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/ss_markov_leads_base_table.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.ss_markov_leads_base_table", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "public", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.dashboard_global_pipeline_productline_eoq_snapshot_v2": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "dashboard_global_pipeline_productline_eoq_snapshot_v2", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/dashboard_global_pipeline_productline_eoq_snapshot_v2.sql", "original_file_path": "models/salesops/dashboard_global_pipeline_productline_eoq_snapshot_v2.sql", "unique_id": "model.cleansed_bq_archive.dashboard_global_pipeline_productline_eoq_snapshot_v2", "fqn": ["cleansed_bq_archive", "salesops", "dashboard_global_pipeline_productline_eoq_snapshot_v2"], "alias": "dashboard_global_pipeline_productline_eoq_snapshot_v2", "checksum": {"name": "sha256", "checksum": "93c513877927701e8b5448ed123d1b0421eefcc9fb12d2565b5f37b67d0ecbc5"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.2428308, "relation_name": "cleansed.BQ_ARCHIVE.dashboard_global_pipeline_productline_eoq_snapshot_v2", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'dashboard_global_pipeline_productline_eoq_snapshot_v2_may_to_mar') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "dashboard_global_pipeline_productline_eoq_snapshot_v2_may_to_mar"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_productline_eoq_snapshot_v2_may_to_mar"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/dashboard_global_pipeline_productline_eoq_snapshot_v2.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.dashboard_global_pipeline_productline_eoq_snapshot_v2_may_to_mar", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.gpd_pipeline_age": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "gpd_pipeline_age", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/gpd_pipeline_age.sql", "original_file_path": "models/salesops/gpd_pipeline_age.sql", "unique_id": "model.cleansed_bq_archive.gpd_pipeline_age", "fqn": ["cleansed_bq_archive", "salesops", "gpd_pipeline_age"], "alias": "gpd_pipeline_age", "checksum": {"name": "sha256", "checksum": "c68153fb1896b5d99083f704d5a1d68fca11e1101a691bd30167ff54f0bc5f7a"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.248052, "relation_name": "cleansed.BQ_ARCHIVE.gpd_pipeline_age", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'gpd_pipeline_age_may_to_mar') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "gpd_pipeline_age_may_to_mar"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.gpd_pipeline_age_may_to_mar"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/gpd_pipeline_age.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.gpd_pipeline_age_may_to_mar", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfdc_opportunities": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "sfdc_opportunities", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/sfdc_opportunities.sql", "original_file_path": "models/salesops/sfdc_opportunities.sql", "unique_id": "model.cleansed_bq_archive.sfdc_opportunities", "fqn": ["cleansed_bq_archive", "salesops", "sfdc_opportunities"], "alias": "sfdc_opportunities", "checksum": {"name": "sha256", "checksum": "0e177841b7dad4a0ce5493bba058fd43fd540fb2b6b02ce4eda55e079f416691"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": "cleansed_bq_archive", "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "public", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": "cleansed_bq_archive", "docs": {"show": true, "node_color": null}, "patch_path": "cleansed_bq_archive://models/bq_archive_models.yml", "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "group": "cleansed_bq_archive", "access": "public"}, "created_at": 1746557619.74492, "relation_name": "cleansed.BQ_ARCHIVE.sfdc_opportunities", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfdc_opportunities') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfdc_opportunities"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfdc_opportunities"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/sfdc_opportunities.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfdc_opportunities", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "public", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.marketing_non_api_raw_cost_regional_APAC": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "marketing_non_api_raw_cost_regional_APAC", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/marketing_non_api_raw_cost_regional_APAC.sql", "original_file_path": "models/salesops/marketing_non_api_raw_cost_regional_APAC.sql", "unique_id": "model.cleansed_bq_archive.marketing_non_api_raw_cost_regional_APAC", "fqn": ["cleansed_bq_archive", "salesops", "marketing_non_api_raw_cost_regional_APAC"], "alias": "marketing_non_api_raw_cost_regional_APAC", "checksum": {"name": "sha256", "checksum": "0e51ee1ccf7f91b7f87d104718affab2e935f6133248823bf26858bdcbd3614c"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.2586284, "relation_name": "cleansed.BQ_ARCHIVE.marketing_non_api_raw_cost_regional_APAC", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'marketing_non_api_raw_cost_regional_apac') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "marketing_non_api_raw_cost_regional_apac"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.marketing_non_api_raw_cost_regional_apac"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/marketing_non_api_raw_cost_regional_APAC.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.marketing_non_api_raw_cost_regional_apac", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.gpd_weekly_target_snapshot": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "gpd_weekly_target_snapshot", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/gpd_weekly_target_snapshot.sql", "original_file_path": "models/salesops/gpd_weekly_target_snapshot.sql", "unique_id": "model.cleansed_bq_archive.gpd_weekly_target_snapshot", "fqn": ["cleansed_bq_archive", "salesops", "gpd_weekly_target_snapshot"], "alias": "gpd_weekly_target_snapshot", "checksum": {"name": "sha256", "checksum": "3b403ed6d65596d5dbb75c4134355d0019bcfe6164c7bcd0ca52c7e60797ef1d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.263861, "relation_name": "cleansed.BQ_ARCHIVE.gpd_weekly_target_snapshot", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'gpd_weekly_target_snapshot_may_to_mar') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "gpd_weekly_target_snapshot_may_to_mar"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.gpd_weekly_target_snapshot_may_to_mar"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/gpd_weekly_target_snapshot.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.gpd_weekly_target_snapshot_may_to_mar", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfdc_leads_touchpoint": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "sfdc_leads_touchpoint", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/sfdc_leads_touchpoint.sql", "original_file_path": "models/salesops/sfdc_leads_touchpoint.sql", "unique_id": "model.cleansed_bq_archive.sfdc_leads_touchpoint", "fqn": ["cleansed_bq_archive", "salesops", "sfdc_leads_touchpoint"], "alias": "sfdc_leads_touchpoint", "checksum": {"name": "sha256", "checksum": "035c417f2cb01c723ec110d087b94f3793098be24eaf298ed9cddf853f017c43"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": "cleansed_bq_archive", "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "public", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": "cleansed_bq_archive", "docs": {"show": true, "node_color": null}, "patch_path": "cleansed_bq_archive://models/bq_archive_models.yml", "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "group": "cleansed_bq_archive", "access": "public"}, "created_at": 1746557619.7330585, "relation_name": "cleansed.BQ_ARCHIVE.sfdc_leads_touchpoint", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfdc_leads_touchpoint') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfdc_leads_touchpoint"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfdc_leads_touchpoint"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/sfdc_leads_touchpoint.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfdc_leads_touchpoint", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "public", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.markov_attribution_leads_touchpoint": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "markov_attribution_leads_touchpoint", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/markov_attribution_leads_touchpoint.sql", "original_file_path": "models/salesops/markov_attribution_leads_touchpoint.sql", "unique_id": "model.cleansed_bq_archive.markov_attribution_leads_touchpoint", "fqn": ["cleansed_bq_archive", "salesops", "markov_attribution_leads_touchpoint"], "alias": "markov_attribution_leads_touchpoint", "checksum": {"name": "sha256", "checksum": "625e08f5e6760137ca03e075af70e583df233fcc87d310e36c908ea8b23ea219"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": "cleansed_bq_archive", "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "public", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": "cleansed_bq_archive", "docs": {"show": true, "node_color": null}, "patch_path": "cleansed_bq_archive://models/bq_archive_models.yml", "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "group": "cleansed_bq_archive", "access": "public"}, "created_at": 1746557619.7191222, "relation_name": "cleansed.BQ_ARCHIVE.markov_attribution_leads_touchpoint", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'markov_attribution_leads_touchpoint') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "markov_attribution_leads_touchpoint"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.markov_attribution_leads_touchpoint"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/markov_attribution_leads_touchpoint.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.markov_attribution_leads_touchpoint", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "public", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.marketing_non_api_raw_cost": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "marketing_non_api_raw_cost", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/marketing_non_api_raw_cost.sql", "original_file_path": "models/salesops/marketing_non_api_raw_cost.sql", "unique_id": "model.cleansed_bq_archive.marketing_non_api_raw_cost", "fqn": ["cleansed_bq_archive", "salesops", "marketing_non_api_raw_cost"], "alias": "marketing_non_api_raw_cost", "checksum": {"name": "sha256", "checksum": "1e483453f1b527f2797b7e568685fca19a15e5de0d1afde06ac76d7a74b7d687"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": "cleansed_bq_archive", "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "public", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": "cleansed_bq_archive", "docs": {"show": true, "node_color": null}, "patch_path": "cleansed_bq_archive://models/bq_archive_models.yml", "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "group": "cleansed_bq_archive", "access": "public"}, "created_at": 1746557619.7156088, "relation_name": "cleansed.BQ_ARCHIVE.marketing_non_api_raw_cost", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'marketing_non_api_raw_cost') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "marketing_non_api_raw_cost"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.marketing_non_api_raw_cost"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/marketing_non_api_raw_cost.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.marketing_non_api_raw_cost", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "public", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.markov_opps_touchpoint_opps": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "markov_opps_touchpoint_opps", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/markov_opps_touchpoint_opps.sql", "original_file_path": "models/salesops/markov_opps_touchpoint_opps.sql", "unique_id": "model.cleansed_bq_archive.markov_opps_touchpoint_opps", "fqn": ["cleansed_bq_archive", "salesops", "markov_opps_touchpoint_opps"], "alias": "markov_opps_touchpoint_opps", "checksum": {"name": "sha256", "checksum": "1b469bd188dc05ac953f4e275e561dcfc1c1596c8513e232944694dd53ddf0a0"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": "cleansed_bq_archive", "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "public", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": "cleansed_bq_archive", "docs": {"show": true, "node_color": null}, "patch_path": "cleansed_bq_archive://models/bq_archive_models.yml", "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "group": "cleansed_bq_archive", "access": "public"}, "created_at": 1746557619.729558, "relation_name": "cleansed.BQ_ARCHIVE.markov_opps_touchpoint_opps", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'markov_opps_touchpoint_opps') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "markov_opps_touchpoint_opps"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.markov_opps_touchpoint_opps"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/markov_opps_touchpoint_opps.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.markov_opps_touchpoint_opps", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "public", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.dashboard_global_pipeline_coverage_trends_eoq_snapshot": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "dashboard_global_pipeline_coverage_trends_eoq_snapshot", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/dashboard_global_pipeline_coverage_trends_eoq_snapshot.sql", "original_file_path": "models/salesops/dashboard_global_pipeline_coverage_trends_eoq_snapshot.sql", "unique_id": "model.cleansed_bq_archive.dashboard_global_pipeline_coverage_trends_eoq_snapshot", "fqn": ["cleansed_bq_archive", "salesops", "dashboard_global_pipeline_coverage_trends_eoq_snapshot"], "alias": "dashboard_global_pipeline_coverage_trends_eoq_snapshot", "checksum": {"name": "sha256", "checksum": "5e25c9b0e7233955120670f267461c15f7dcbd863e125da13e2dd1a3ae5447e0"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.2916083, "relation_name": "cleansed.BQ_ARCHIVE.dashboard_global_pipeline_coverage_trends_eoq_snapshot", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'dashboard_global_pipeline_coverage_trends_eoq_snapshot_may_mar') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "dashboard_global_pipeline_coverage_trends_eoq_snapshot_may_mar"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_coverage_trends_eoq_snapshot_may_mar"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/dashboard_global_pipeline_coverage_trends_eoq_snapshot.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.dashboard_global_pipeline_coverage_trends_eoq_snapshot_may_mar", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.pipeline_coverage_targets_daily_snapshot": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "pipeline_coverage_targets_daily_snapshot", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/pipeline_coverage_targets_daily_snapshot.sql", "original_file_path": "models/salesops/pipeline_coverage_targets_daily_snapshot.sql", "unique_id": "model.cleansed_bq_archive.pipeline_coverage_targets_daily_snapshot", "fqn": ["cleansed_bq_archive", "salesops", "pipeline_coverage_targets_daily_snapshot"], "alias": "pipeline_coverage_targets_daily_snapshot", "checksum": {"name": "sha256", "checksum": "600b7e5e9ebc50701b5f5c36433758c4174e3b22d875893c7890223b7307b02f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.2966907, "relation_name": "cleansed.BQ_ARCHIVE.pipeline_coverage_targets_daily_snapshot", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'pipeline_coverage_targets_daily_snapshot_may_to_mar') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "pipeline_coverage_targets_daily_snapshot_may_to_mar"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.pipeline_coverage_targets_daily_snapshot_may_to_mar"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/pipeline_coverage_targets_daily_snapshot.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.pipeline_coverage_targets_daily_snapshot_may_to_mar", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.dgp_productline_week_close_dates_eoq_snapshot_v2": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "dgp_productline_week_close_dates_eoq_snapshot_v2", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/dgp_productline_week_close_dates_eoq_snapshot_v2.sql", "original_file_path": "models/salesops/dgp_productline_week_close_dates_eoq_snapshot_v2.sql", "unique_id": "model.cleansed_bq_archive.dgp_productline_week_close_dates_eoq_snapshot_v2", "fqn": ["cleansed_bq_archive", "salesops", "dgp_productline_week_close_dates_eoq_snapshot_v2"], "alias": "dgp_productline_week_close_dates_eoq_snapshot_v2", "checksum": {"name": "sha256", "checksum": "20a1ad275c941fe43fc5bd55ba3ab078f967e6ed19d9975ba9af6e25ccfe0d0f"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.3019392, "relation_name": "cleansed.BQ_ARCHIVE.dgp_productline_week_close_dates_eoq_snapshot_v2", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'dgp_productline_week_close_dates_eoq_snapshot_v2_may_to_mar') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "dgp_productline_week_close_dates_eoq_snapshot_v2_may_to_mar"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.dgp_productline_week_close_dates_eoq_snapshot_v2_may_to_mar"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/dgp_productline_week_close_dates_eoq_snapshot_v2.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.dgp_productline_week_close_dates_eoq_snapshot_v2_may_to_mar", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3.sql", "original_file_path": "models/salesops/dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3.sql", "unique_id": "model.cleansed_bq_archive.dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3", "fqn": ["cleansed_bq_archive", "salesops", "dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3"], "alias": "dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3", "checksum": {"name": "sha256", "checksum": "a71da955405b037498ea7e2eb7a6a5250ffa5e206c85739807f4fafc5218eebb"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.3088665, "relation_name": "cleansed.BQ_ARCHIVE.dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3_may_mar') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3_may_mar"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3_may_mar"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3_may_mar", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.dashboard_pipeline_quality_snapshot": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "dashboard_pipeline_quality_snapshot", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/dashboard_pipeline_quality_snapshot.sql", "original_file_path": "models/salesops/dashboard_pipeline_quality_snapshot.sql", "unique_id": "model.cleansed_bq_archive.dashboard_pipeline_quality_snapshot", "fqn": ["cleansed_bq_archive", "salesops", "dashboard_pipeline_quality_snapshot"], "alias": "dashboard_pipeline_quality_snapshot", "checksum": {"name": "sha256", "checksum": "8bc1b4e2aab819f8d1707fa2e5a71ea2ad061e36d7a453176bad267c9979b215"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.3143303, "relation_name": "cleansed.BQ_ARCHIVE.dashboard_pipeline_quality_snapshot", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'dashboard_pipeline_quality_snapshot_2022_01_01') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "dashboard_pipeline_quality_snapshot_2022_01_01"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.dashboard_pipeline_quality_snapshot_2022_01_01"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/dashboard_pipeline_quality_snapshot.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.dashboard_pipeline_quality_snapshot_2022_01_01", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.gpd_weekly_product_pipeline_age_snapshot_v2": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "gpd_weekly_product_pipeline_age_snapshot_v2", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/gpd_weekly_product_pipeline_age_snapshot_v2.sql", "original_file_path": "models/salesops/gpd_weekly_product_pipeline_age_snapshot_v2.sql", "unique_id": "model.cleansed_bq_archive.gpd_weekly_product_pipeline_age_snapshot_v2", "fqn": ["cleansed_bq_archive", "salesops", "gpd_weekly_product_pipeline_age_snapshot_v2"], "alias": "gpd_weekly_product_pipeline_age_snapshot_v2", "checksum": {"name": "sha256", "checksum": "c2e7af743a9817230392aa5c4ac372fc7f18dc6146c0d04fec49a7485ef644d5"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.319662, "relation_name": "cleansed.BQ_ARCHIVE.gpd_weekly_product_pipeline_age_snapshot_v2", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'gpd_weekly_product_pipeline_age_snapshot_v2_may_to_mar') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "gpd_weekly_product_pipeline_age_snapshot_v2_may_to_mar"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.gpd_weekly_product_pipeline_age_snapshot_v2_may_to_mar"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/gpd_weekly_product_pipeline_age_snapshot_v2.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.gpd_weekly_product_pipeline_age_snapshot_v2_may_to_mar", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.markov_attribution_opportunities_touchpoint": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "markov_attribution_opportunities_touchpoint", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/markov_attribution_opportunities_touchpoint.sql", "original_file_path": "models/salesops/markov_attribution_opportunities_touchpoint.sql", "unique_id": "model.cleansed_bq_archive.markov_attribution_opportunities_touchpoint", "fqn": ["cleansed_bq_archive", "salesops", "markov_attribution_opportunities_touchpoint"], "alias": "markov_attribution_opportunities_touchpoint", "checksum": {"name": "sha256", "checksum": "419001dfe3314a160c3144d4a277a9ed2560f141857a77c63a62902c78995ff4"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": "cleansed_bq_archive", "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "public", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": "cleansed_bq_archive", "docs": {"show": true, "node_color": null}, "patch_path": "cleansed_bq_archive://models/bq_archive_models.yml", "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "group": "cleansed_bq_archive", "access": "public"}, "created_at": 1746557619.7226875, "relation_name": "cleansed.BQ_ARCHIVE.markov_attribution_opportunities_touchpoint", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'markov_attribution_opportunities_touchpoint') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "markov_attribution_opportunities_touchpoint"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.markov_attribution_opportunities_touchpoint"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/markov_attribution_opportunities_touchpoint.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.markov_attribution_opportunities_touchpoint", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "public", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfdc_opportunities_touchpoint": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "sfdc_opportunities_touchpoint", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/sfdc_opportunities_touchpoint.sql", "original_file_path": "models/salesops/sfdc_opportunities_touchpoint.sql", "unique_id": "model.cleansed_bq_archive.sfdc_opportunities_touchpoint", "fqn": ["cleansed_bq_archive", "salesops", "sfdc_opportunities_touchpoint"], "alias": "sfdc_opportunities_touchpoint", "checksum": {"name": "sha256", "checksum": "5cc900cc4fcaaf8e5cf429ab9b2a3287d23a2629780c22ee885d5b166ba48073"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": "cleansed_bq_archive", "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "public", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": "cleansed_bq_archive", "docs": {"show": true, "node_color": null}, "patch_path": "cleansed_bq_archive://models/bq_archive_models.yml", "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "group": "cleansed_bq_archive", "access": "public"}, "created_at": 1746557619.7414136, "relation_name": "cleansed.BQ_ARCHIVE.sfdc_opportunities_touchpoint", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfdc_opportunities_touchpoint') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfdc_opportunities_touchpoint"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfdc_opportunities_touchpoint"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/sfdc_opportunities_touchpoint.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfdc_opportunities_touchpoint", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "public", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.attribution_events": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "attribution_events", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/attribution_events.sql", "original_file_path": "models/salesops/attribution_events.sql", "unique_id": "model.cleansed_bq_archive.attribution_events", "fqn": ["cleansed_bq_archive", "salesops", "attribution_events"], "alias": "attribution_events", "checksum": {"name": "sha256", "checksum": "c2e19ea962fd5e4de1f7933c28a4948da67876c65f98c20ea7a394b6792e39da"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": "cleansed_bq_archive", "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "public", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": "cleansed_bq_archive", "docs": {"show": true, "node_color": null}, "patch_path": "cleansed_bq_archive://models/bq_archive_models.yml", "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "group": "cleansed_bq_archive", "access": "public"}, "created_at": 1746557619.699108, "relation_name": "cleansed.BQ_ARCHIVE.attribution_events", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'attribution_events') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "attribution_events"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.attribution_events"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/attribution_events.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.attribution_events", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "public", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.pipeline_coverage_targets_product_daily_snapshot": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "pipeline_coverage_targets_product_daily_snapshot", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/pipeline_coverage_targets_product_daily_snapshot.sql", "original_file_path": "models/salesops/pipeline_coverage_targets_product_daily_snapshot.sql", "unique_id": "model.cleansed_bq_archive.pipeline_coverage_targets_product_daily_snapshot", "fqn": ["cleansed_bq_archive", "salesops", "pipeline_coverage_targets_product_daily_snapshot"], "alias": "pipeline_coverage_targets_product_daily_snapshot", "checksum": {"name": "sha256", "checksum": "be858fe5a22a43619e674dc6a45bed0be8f91e3d255098d2da5b657031aec016"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.3402724, "relation_name": "cleansed.BQ_ARCHIVE.pipeline_coverage_targets_product_daily_snapshot", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'pipeline_coverage_targets_product_daily_snapshot_may_to_mar') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "pipeline_coverage_targets_product_daily_snapshot_may_to_mar"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.pipeline_coverage_targets_product_daily_snapshot_may_to_mar"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/pipeline_coverage_targets_product_daily_snapshot.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.pipeline_coverage_targets_product_daily_snapshot_may_to_mar", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.marketing_non_api_raw_cost_historicals": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "marketing_non_api_raw_cost_historicals", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/marketing_non_api_raw_cost_historicals.sql", "original_file_path": "models/salesops/marketing_non_api_raw_cost_historicals.sql", "unique_id": "model.cleansed_bq_archive.marketing_non_api_raw_cost_historicals", "fqn": ["cleansed_bq_archive", "salesops", "marketing_non_api_raw_cost_historicals"], "alias": "marketing_non_api_raw_cost_historicals", "checksum": {"name": "sha256", "checksum": "4edb66eae8c98629a79ae614aecc7221c026d7bad006f31ca0d3315632b3ac56"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": "cleansed_bq_archive", "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "public", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": "cleansed_bq_archive", "docs": {"show": true, "node_color": null}, "patch_path": "cleansed_bq_archive://models/bq_archive_models.yml", "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "group": "cleansed_bq_archive", "access": "public"}, "created_at": 1746557619.7106075, "relation_name": "cleansed.BQ_ARCHIVE.marketing_non_api_raw_cost_historicals", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'marketing_non_api_raw_cost_historicals') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "marketing_non_api_raw_cost_historicals"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.marketing_non_api_raw_cost_historicals"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/marketing_non_api_raw_cost_historicals.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.marketing_non_api_raw_cost_historicals", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "public", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.dgp_productline_week_dates_eoq_snapshot_v2": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "dgp_productline_week_dates_eoq_snapshot_v2", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "salesops/dgp_productline_week_dates_eoq_snapshot_v2.sql", "original_file_path": "models/salesops/dgp_productline_week_dates_eoq_snapshot_v2.sql", "unique_id": "model.cleansed_bq_archive.dgp_productline_week_dates_eoq_snapshot_v2", "fqn": ["cleansed_bq_archive", "salesops", "dgp_productline_week_dates_eoq_snapshot_v2"], "alias": "dgp_productline_week_dates_eoq_snapshot_v2", "checksum": {"name": "sha256", "checksum": "5ca0d362d02a1e9846286d2f4b01667893252f84b300d7d7d676ece5ecc4f166"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.3520803, "relation_name": "cleansed.BQ_ARCHIVE.dgp_productline_week_dates_eoq_snapshot_v2", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'dgp_productline_week_dates_eoq_snapshot_v2_may_to_mar') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "dgp_productline_week_dates_eoq_snapshot_v2_may_to_mar"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.dgp_productline_week_dates_eoq_snapshot_v2_may_to_mar"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/salesops/dgp_productline_week_dates_eoq_snapshot_v2.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.dgp_productline_week_dates_eoq_snapshot_v2_may_to_mar", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.dashboard_pipeline_quality": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "dashboard_pipeline_quality", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "marketing_curated/dashboard_pipeline_quality.sql", "original_file_path": "models/marketing_curated/dashboard_pipeline_quality.sql", "unique_id": "model.cleansed_bq_archive.dashboard_pipeline_quality", "fqn": ["cleansed_bq_archive", "marketing_curated", "dashboard_pipeline_quality"], "alias": "dashboard_pipeline_quality", "checksum": {"name": "sha256", "checksum": "f8c2d78b2d2a8024cbd7376e29c0f07ee84ff6dfe85b6945e305e21c1d5fbd82"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.3573487, "relation_name": "cleansed.BQ_ARCHIVE.dashboard_pipeline_quality", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'dashboard_pipeline_quality') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "dashboard_pipeline_quality"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.dashboard_pipeline_quality"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/marketing_curated/dashboard_pipeline_quality.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.dashboard_pipeline_quality", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.segment_support_onboarding_panel_task_completion": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "segment_support_onboarding_panel_task_completion", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support/segment_support_onboarding_panel_task_completion.sql", "original_file_path": "models/segment_support/segment_support_onboarding_panel_task_completion.sql", "unique_id": "model.cleansed_bq_archive.segment_support_onboarding_panel_task_completion", "fqn": ["cleansed_bq_archive", "segment_support", "segment_support_onboarding_panel_task_completion"], "alias": "segment_support_onboarding_panel_task_completion", "checksum": {"name": "sha256", "checksum": "bcc668fd443ae8c8c839664158239c42a76338763093bccbfea59bf25181f333"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.3626134, "relation_name": "cleansed.BQ_ARCHIVE.segment_support_onboarding_panel_task_completion", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'segment_support_onboarding_panel_task_completion') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "segment_support_onboarding_panel_task_completion"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.segment_support_onboarding_panel_task_completion"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support/segment_support_onboarding_panel_task_completion.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.segment_support_onboarding_panel_task_completion", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.segment_support_groups": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "segment_support_groups", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support/segment_support_groups.sql", "original_file_path": "models/segment_support/segment_support_groups.sql", "unique_id": "model.cleansed_bq_archive.segment_support_groups", "fqn": ["cleansed_bq_archive", "segment_support", "segment_support_groups"], "alias": "segment_support_groups", "checksum": {"name": "sha256", "checksum": "9ca78d872ccbf3da57486bbd0233a58cd8d7e96d4ff84fab69d6828931ce96ef"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.367858, "relation_name": "cleansed.BQ_ARCHIVE.segment_support_groups", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'segment_support_groups') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "segment_support_groups"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.segment_support_groups"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support/segment_support_groups.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.segment_support_groups", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.views_expansion_banner_find_out_more_click": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "views_expansion_banner_find_out_more_click", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support/views_expansion_banner_find_out_more_click.sql", "original_file_path": "models/segment_support/views_expansion_banner_find_out_more_click.sql", "unique_id": "model.cleansed_bq_archive.views_expansion_banner_find_out_more_click", "fqn": ["cleansed_bq_archive", "segment_support", "views_expansion_banner_find_out_more_click"], "alias": "views_expansion_banner_find_out_more_click", "checksum": {"name": "sha256", "checksum": "4dbcf38bfabcf14a9d8c606dc4f26a3d8119b3a23125e4f89efcc1c454872ea3"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.373127, "relation_name": "cleansed.BQ_ARCHIVE.views_expansion_banner_find_out_more_click", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'views_expansion_banner_find_out_more_click') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "views_expansion_banner_find_out_more_click"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.views_expansion_banner_find_out_more_click"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support/views_expansion_banner_find_out_more_click.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.views_expansion_banner_find_out_more_click", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.views_expansion_banner_try_it_for_free_click": {"database": "cleansed", "schema": "BQ_ARCHIVE", "name": "views_expansion_banner_try_it_for_free_click", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "segment_support/views_expansion_banner_try_it_for_free_click.sql", "original_file_path": "models/segment_support/views_expansion_banner_try_it_for_free_click.sql", "unique_id": "model.cleansed_bq_archive.views_expansion_banner_try_it_for_free_click", "fqn": ["cleansed_bq_archive", "segment_support", "views_expansion_banner_try_it_for_free_click"], "alias": "views_expansion_banner_try_it_for_free_click", "checksum": {"name": "sha256", "checksum": "9a8a31d40ca07d4789f472d30adc74160334c14349f159f9395f97647b14e1f1"}, "config": {"enabled": true, "alias": null, "schema": null, "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs"}, "created_at": 1746557618.3783002, "relation_name": "cleansed.BQ_ARCHIVE.views_expansion_banner_try_it_for_free_click", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'views_expansion_banner_try_it_for_free_click') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "views_expansion_banner_try_it_for_free_click"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.views_expansion_banner_try_it_for_free_click"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/segment_support/views_expansion_banner_try_it_for_free_click.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.views_expansion_banner_try_it_for_free_click", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_02_03": {"database": "cleansed", "schema": "bq_archive", "name": "adjusted_change_sub_type_usd_2025_02_03", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/adjusted_change_sub_type_usd_2025_02_03.sql", "original_file_path": "models/hob/adjusted_change_sub_type_usd_2025_02_03.sql", "unique_id": "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_02_03", "fqn": ["cleansed_bq_archive", "hob", "adjusted_change_sub_type_usd_2025_02_03"], "alias": "adjusted_change_sub_type_usd_2025_02_03", "checksum": {"name": "sha256", "checksum": "34122bbc4ee3734a53d1643b824adeb4cfa1276c7d7aa5fc92c06ac904b90181"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.385149, "relation_name": "cleansed.bq_archive.adjusted_change_sub_type_usd_2025_02_03", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'adjusted_change_sub_type_usd_2025_02_03') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "adjusted_change_sub_type_usd_2025_02_03"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_02_03"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/adjusted_change_sub_type_usd_2025_02_03.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.adjusted_change_sub_type_usd_2025_02_03", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.overview_customer_arr": {"database": "cleansed", "schema": "bq_archive", "name": "overview_customer_arr", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/overview_customer_arr.sql", "original_file_path": "models/hob/overview_customer_arr.sql", "unique_id": "model.cleansed_bq_archive.overview_customer_arr", "fqn": ["cleansed_bq_archive", "hob", "overview_customer_arr"], "alias": "overview_customer_arr", "checksum": {"name": "sha256", "checksum": "0b857bdd5f5ae707b3dcab0fa1820564a560ed389d4c985cc21d21f53b46cde4"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.3905385, "relation_name": "cleansed.bq_archive.overview_customer_arr", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'overview_customer_arr') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "overview_customer_arr"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.overview_customer_arr"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/overview_customer_arr.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.overview_customer_arr", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_01_01": {"database": "cleansed", "schema": "bq_archive", "name": "adjusted_change_sub_type_usd_2025_01_01", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/adjusted_change_sub_type_usd_2025_01_01.sql", "original_file_path": "models/hob/adjusted_change_sub_type_usd_2025_01_01.sql", "unique_id": "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_01_01", "fqn": ["cleansed_bq_archive", "hob", "adjusted_change_sub_type_usd_2025_01_01"], "alias": "adjusted_change_sub_type_usd_2025_01_01", "checksum": {"name": "sha256", "checksum": "ff66688d5ebd898a6abdaf274bbfa39efa492dcbfe95cefe005deda7e1cc47cb"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.3958757, "relation_name": "cleansed.bq_archive.adjusted_change_sub_type_usd_2025_01_01", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'adjusted_change_sub_type_usd_2025_01_01') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "adjusted_change_sub_type_usd_2025_01_01"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_01_01"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/adjusted_change_sub_type_usd_2025_01_01.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.adjusted_change_sub_type_usd_2025_01_01", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sell_payments_products": {"database": "cleansed", "schema": "bq_archive", "name": "sell_payments_products", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sell_payments_products.sql", "original_file_path": "models/hob/sell_payments_products.sql", "unique_id": "model.cleansed_bq_archive.sell_payments_products", "fqn": ["cleansed_bq_archive", "hob", "sell_payments_products"], "alias": "sell_payments_products", "checksum": {"name": "sha256", "checksum": "f397e06287b5e7e329f00c4868febc8b91ad3d5e79a3ff01d865bef2316fa964"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.4012766, "relation_name": "cleansed.bq_archive.sell_payments_products", "raw_code": "select * \nfrom {{ source('bq_archive_objects', 'sell_payments_products') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sell_payments_products"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sell_payments_products"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sell_payments_products.sql", "compiled": true, "compiled_code": "select * \nfrom raw.bq_archive.sell_payments_products", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_hob__subpo_bundled_task_1": {"database": "cleansed", "schema": "bq_archive", "name": "eda_hob__subpo_bundled_task_1", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_hob__subpo_bundled_task_1.sql", "original_file_path": "models/hob/eda_hob__subpo_bundled_task_1.sql", "unique_id": "model.cleansed_bq_archive.eda_hob__subpo_bundled_task_1", "fqn": ["cleansed_bq_archive", "hob", "eda_hob__subpo_bundled_task_1"], "alias": "eda_hob__subpo_bundled_task_1", "checksum": {"name": "sha256", "checksum": "f84e6ab2c72690a996aa355330e3f661dc4f76f88f31b3ff7dc4fdc72788baa0"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.406437, "relation_name": "cleansed.bq_archive.eda_hob__subpo_bundled_task_1", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_hob__subpo_bundled_task_1') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_hob__subpo_bundled_task_1"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__subpo_bundled_task_1"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_hob__subpo_bundled_task_1.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_hob__subpo_bundled_task_1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_hob__qtd_renewals_product_finance_adjusted_bundled": {"database": "cleansed", "schema": "bq_archive", "name": "eda_hob__qtd_renewals_product_finance_adjusted_bundled", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_hob__qtd_renewals_product_finance_adjusted_bundled.sql", "original_file_path": "models/hob/eda_hob__qtd_renewals_product_finance_adjusted_bundled.sql", "unique_id": "model.cleansed_bq_archive.eda_hob__qtd_renewals_product_finance_adjusted_bundled", "fqn": ["cleansed_bq_archive", "hob", "eda_hob__qtd_renewals_product_finance_adjusted_bundled"], "alias": "eda_hob__qtd_renewals_product_finance_adjusted_bundled", "checksum": {"name": "sha256", "checksum": "ad795cb1937136f7c99786084da6ee2e95e667d6bc5c3d4a9dd05da5809ac24c"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.411761, "relation_name": "cleansed.bq_archive.eda_hob__qtd_renewals_product_finance_adjusted_bundled", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_hob__qtd_renewals_product_finance_adjusted_bundled') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_hob__qtd_renewals_product_finance_adjusted_bundled"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_renewals_product_finance_adjusted_bundled"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_hob__qtd_renewals_product_finance_adjusted_bundled.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_hob__qtd_renewals_product_finance_adjusted_bundled", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_04": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_bookings_reporting_2025_01_04", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_bookings_reporting_2025_01_04.sql", "original_file_path": "models/hob/sfa_bookings_reporting_2025_01_04.sql", "unique_id": "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_04", "fqn": ["cleansed_bq_archive", "hob", "sfa_bookings_reporting_2025_01_04"], "alias": "sfa_bookings_reporting_2025_01_04", "checksum": {"name": "sha256", "checksum": "598f81eba559e0fb1276ce093f658d3d991a9100688787335b7d7338a125fd16"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.4186516, "relation_name": "cleansed.bq_archive.sfa_bookings_reporting_2025_01_04", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_bookings_reporting_2025_01_04') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_bookings_reporting_2025_01_04"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_04"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_bookings_reporting_2025_01_04.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_bookings_reporting_2025_01_04", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_02": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_bookings_reporting_2025_01_02", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_bookings_reporting_2025_01_02.sql", "original_file_path": "models/hob/sfa_bookings_reporting_2025_01_02.sql", "unique_id": "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_02", "fqn": ["cleansed_bq_archive", "hob", "sfa_bookings_reporting_2025_01_02"], "alias": "sfa_bookings_reporting_2025_01_02", "checksum": {"name": "sha256", "checksum": "0324e7408109ed5a2d9e173e49976e5b046fb2167b6289ffcc1a855079ce029d"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.4240172, "relation_name": "cleansed.bq_archive.sfa_bookings_reporting_2025_01_02", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_bookings_reporting_2025_01_02') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_bookings_reporting_2025_01_02"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_02"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_bookings_reporting_2025_01_02.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_bookings_reporting_2025_01_02", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag": {"database": "cleansed", "schema": "bq_archive", "name": "eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag.sql", "original_file_path": "models/hob/eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag.sql", "unique_id": "model.cleansed_bq_archive.eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag", "fqn": ["cleansed_bq_archive", "hob", "eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag"], "alias": "eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag", "checksum": {"name": "sha256", "checksum": "790551b385be093a2fc9cd028beb7301fb4a2a5560c761ecde8e6f1ddb71a475"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.429404, "relation_name": "cleansed.bq_archive.eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2024_10_03": {"database": "cleansed", "schema": "bq_archive", "name": "adjusted_change_sub_type_usd_2024_10_03", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/adjusted_change_sub_type_usd_2024_10_03.sql", "original_file_path": "models/hob/adjusted_change_sub_type_usd_2024_10_03.sql", "unique_id": "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2024_10_03", "fqn": ["cleansed_bq_archive", "hob", "adjusted_change_sub_type_usd_2024_10_03"], "alias": "adjusted_change_sub_type_usd_2024_10_03", "checksum": {"name": "sha256", "checksum": "0de4c8b9fed8d9cdd8f209f1f846d2d88610a988c437cdb79989bf2ba4cef626"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.4345162, "relation_name": "cleansed.bq_archive.adjusted_change_sub_type_usd_2024_10_03", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'adjusted_change_sub_type_usd_2024_10_03') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "adjusted_change_sub_type_usd_2024_10_03"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_10_03"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/adjusted_change_sub_type_usd_2024_10_03.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.adjusted_change_sub_type_usd_2024_10_03", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.adjusted_change_sub_type_automated_list": {"database": "cleansed", "schema": "bq_archive", "name": "adjusted_change_sub_type_automated_list", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/adjusted_change_sub_type_automated_list.sql", "original_file_path": "models/hob/adjusted_change_sub_type_automated_list.sql", "unique_id": "model.cleansed_bq_archive.adjusted_change_sub_type_automated_list", "fqn": ["cleansed_bq_archive", "hob", "adjusted_change_sub_type_automated_list"], "alias": "adjusted_change_sub_type_automated_list", "checksum": {"name": "sha256", "checksum": "1b6dbcfa079f33604e8bda07c8f7f9948949e63d78b09ad3224a7858ef28367e"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.4397774, "relation_name": "cleansed.bq_archive.adjusted_change_sub_type_automated_list", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'adjusted_change_sub_type_automated_list') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "adjusted_change_sub_type_automated_list"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_automated_list"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/adjusted_change_sub_type_automated_list.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.adjusted_change_sub_type_automated_list", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.adjusted_change_sub_type_usd_20231004": {"database": "cleansed", "schema": "bq_archive", "name": "adjusted_change_sub_type_usd_20231004", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/adjusted_change_sub_type_usd_20231004.sql", "original_file_path": "models/hob/adjusted_change_sub_type_usd_20231004.sql", "unique_id": "model.cleansed_bq_archive.adjusted_change_sub_type_usd_20231004", "fqn": ["cleansed_bq_archive", "hob", "adjusted_change_sub_type_usd_20231004"], "alias": "adjusted_change_sub_type_usd_20231004", "checksum": {"name": "sha256", "checksum": "863db72cc545d18b3e091fb49cbb310f5e3892c95046029140ed55350acb0d50"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.4450984, "relation_name": "cleansed.bq_archive.adjusted_change_sub_type_usd_20231004", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'adjusted_change_sub_type_usd_20231004') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "adjusted_change_sub_type_usd_20231004"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_20231004"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/adjusted_change_sub_type_usd_20231004.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.adjusted_change_sub_type_usd_20231004", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sku_modernization_zuora_amendments": {"database": "cleansed", "schema": "bq_archive", "name": "sku_modernization_zuora_amendments", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sku_modernization_zuora_amendments.sql", "original_file_path": "models/hob/sku_modernization_zuora_amendments.sql", "unique_id": "model.cleansed_bq_archive.sku_modernization_zuora_amendments", "fqn": ["cleansed_bq_archive", "hob", "sku_modernization_zuora_amendments"], "alias": "sku_modernization_zuora_amendments", "checksum": {"name": "sha256", "checksum": "fc09c351980d04c3b0a8162145d2ba633f4b32cf7de96a55e15ce1afb156b111"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.450486, "relation_name": "cleansed.bq_archive.sku_modernization_zuora_amendments", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sku_modernization_zuora_amendments') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sku_modernization_zuora_amendments"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sku_modernization_zuora_amendments"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sku_modernization_zuora_amendments.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sku_modernization_zuora_amendments", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup": {"database": "cleansed", "schema": "bq_archive", "name": "eda_pricing_comm_zuora_202304_backup", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_pricing_comm_zuora_202304_backup.sql", "original_file_path": "models/hob/eda_pricing_comm_zuora_202304_backup.sql", "unique_id": "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup", "fqn": ["cleansed_bq_archive", "hob", "eda_pricing_comm_zuora_202304_backup"], "alias": "eda_pricing_comm_zuora_202304_backup", "checksum": {"name": "sha256", "checksum": "76ea95e04b6677b22fec02d4f6fa9485da64b9b24dc81f5e2803b2ea211987b8"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.457491, "relation_name": "cleansed.bq_archive.eda_pricing_comm_zuora_202304_backup", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_pricing_comm_zuora_202304_backup') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_pricing_comm_zuora_202304_backup"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_pricing_comm_zuora_202304_backup.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_pricing_comm_zuora_202304_backup", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.agent_months_report_table": {"database": "cleansed", "schema": "bq_archive", "name": "agent_months_report_table", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/agent_months_report_table.sql", "original_file_path": "models/hob/agent_months_report_table.sql", "unique_id": "model.cleansed_bq_archive.agent_months_report_table", "fqn": ["cleansed_bq_archive", "hob", "agent_months_report_table"], "alias": "agent_months_report_table", "checksum": {"name": "sha256", "checksum": "1c18a6480851d47416092bf3e30475cae15bf922cfbc7a74e2434508079d509b"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.4626942, "relation_name": "cleansed.bq_archive.agent_months_report_table", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'agent_months_report_table') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "agent_months_report_table"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.agent_months_report_table"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/agent_months_report_table.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.agent_months_report_table", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_bookings_reporting_2024_07_02": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_bookings_reporting_2024_07_02", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_bookings_reporting_2024_07_02.sql", "original_file_path": "models/hob/sfa_bookings_reporting_2024_07_02.sql", "unique_id": "model.cleansed_bq_archive.sfa_bookings_reporting_2024_07_02", "fqn": ["cleansed_bq_archive", "hob", "sfa_bookings_reporting_2024_07_02"], "alias": "sfa_bookings_reporting_2024_07_02", "checksum": {"name": "sha256", "checksum": "95e0e2c83c2e885c626ac66d04637b2054b3a4f7c60c085e371ba5de86dc0840"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.4680593, "relation_name": "cleansed.bq_archive.sfa_bookings_reporting_2024_07_02", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_bookings_reporting_2024_07_02') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_bookings_reporting_2024_07_02"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_07_02"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_bookings_reporting_2024_07_02.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_bookings_reporting_2024_07_02", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_bookings_reporting_2023_10_04": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_bookings_reporting_2023_10_04", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_bookings_reporting_2023_10_04.sql", "original_file_path": "models/hob/sfa_bookings_reporting_2023_10_04.sql", "unique_id": "model.cleansed_bq_archive.sfa_bookings_reporting_2023_10_04", "fqn": ["cleansed_bq_archive", "hob", "sfa_bookings_reporting_2023_10_04"], "alias": "sfa_bookings_reporting_2023_10_04", "checksum": {"name": "sha256", "checksum": "14c2337421c5e797a6d9e07dfd6fdb647fc0ae0c205d9a7d998e3f27f9c7c537"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.4734497, "relation_name": "cleansed.bq_archive.sfa_bookings_reporting_2023_10_04", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_bookings_reporting_2023_10_04') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_bookings_reporting_2023_10_04"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2023_10_04"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_bookings_reporting_2023_10_04.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_bookings_reporting_2023_10_04", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup_14sep": {"database": "cleansed", "schema": "bq_archive", "name": "eda_pricing_comm_zuora_202304_backup_14sep", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_pricing_comm_zuora_202304_backup_14sep.sql", "original_file_path": "models/hob/eda_pricing_comm_zuora_202304_backup_14sep.sql", "unique_id": "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup_14sep", "fqn": ["cleansed_bq_archive", "hob", "eda_pricing_comm_zuora_202304_backup_14sep"], "alias": "eda_pricing_comm_zuora_202304_backup_14sep", "checksum": {"name": "sha256", "checksum": "515b489019f0af4c3c49e971a924fdd1c1950168275a5019d5b3b45b6f892425"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.478757, "relation_name": "cleansed.bq_archive.eda_pricing_comm_zuora_202304_backup_14sep", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_pricing_comm_zuora_202304_backup_14sep') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_pricing_comm_zuora_202304_backup_14sep"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_14sep"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_pricing_comm_zuora_202304_backup_14sep.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_pricing_comm_zuora_202304_backup_14sep", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_hob__mtd_recurring_revenue_bundled": {"database": "cleansed", "schema": "bq_archive", "name": "eda_hob__mtd_recurring_revenue_bundled", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_hob__mtd_recurring_revenue_bundled.sql", "original_file_path": "models/hob/eda_hob__mtd_recurring_revenue_bundled.sql", "unique_id": "model.cleansed_bq_archive.eda_hob__mtd_recurring_revenue_bundled", "fqn": ["cleansed_bq_archive", "hob", "eda_hob__mtd_recurring_revenue_bundled"], "alias": "eda_hob__mtd_recurring_revenue_bundled", "checksum": {"name": "sha256", "checksum": "a1aae3b8f7b87dc2623b2a7a5a62c64ef07f5d0bfec7043f3baa56e325523039"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.4840844, "relation_name": "cleansed.bq_archive.eda_hob__mtd_recurring_revenue_bundled", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_hob__mtd_recurring_revenue_bundled') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_hob__mtd_recurring_revenue_bundled"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__mtd_recurring_revenue_bundled"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_hob__mtd_recurring_revenue_bundled.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_hob__mtd_recurring_revenue_bundled", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sell_payments_subscription_products": {"database": "cleansed", "schema": "bq_archive", "name": "sell_payments_subscription_products", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sell_payments_subscription_products.sql", "original_file_path": "models/hob/sell_payments_subscription_products.sql", "unique_id": "model.cleansed_bq_archive.sell_payments_subscription_products", "fqn": ["cleansed_bq_archive", "hob", "sell_payments_subscription_products"], "alias": "sell_payments_subscription_products", "checksum": {"name": "sha256", "checksum": "07a483897a44d263aef927649dc8e5b4edd34548a8bed792f6497b4e9fd66d08"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.4890852, "relation_name": "cleansed.bq_archive.sell_payments_subscription_products", "raw_code": "select * \nfrom {{ source('bq_archive_objects', 'sell_payments_subscription_products') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sell_payments_subscription_products"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sell_payments_subscription_products"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sell_payments_subscription_products.sql", "compiled": true, "compiled_code": "select * \nfrom raw.bq_archive.sell_payments_subscription_products", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_hob__dod_recurring_revenue_bundled": {"database": "cleansed", "schema": "bq_archive", "name": "eda_hob__dod_recurring_revenue_bundled", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_hob__dod_recurring_revenue_bundled.sql", "original_file_path": "models/hob/eda_hob__dod_recurring_revenue_bundled.sql", "unique_id": "model.cleansed_bq_archive.eda_hob__dod_recurring_revenue_bundled", "fqn": ["cleansed_bq_archive", "hob", "eda_hob__dod_recurring_revenue_bundled"], "alias": "eda_hob__dod_recurring_revenue_bundled", "checksum": {"name": "sha256", "checksum": "d6e71079be8f70cfb0aeae797f070774d5af4202b6db22f9acc1c346cab1f784"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.4959345, "relation_name": "cleansed.bq_archive.eda_hob__dod_recurring_revenue_bundled", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_hob__dod_recurring_revenue_bundled') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_hob__dod_recurring_revenue_bundled"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__dod_recurring_revenue_bundled"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_hob__dod_recurring_revenue_bundled.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_hob__dod_recurring_revenue_bundled", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_01_05": {"database": "cleansed", "schema": "bq_archive", "name": "adjusted_change_sub_type_usd_2025_01_05", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/adjusted_change_sub_type_usd_2025_01_05.sql", "original_file_path": "models/hob/adjusted_change_sub_type_usd_2025_01_05.sql", "unique_id": "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_01_05", "fqn": ["cleansed_bq_archive", "hob", "adjusted_change_sub_type_usd_2025_01_05"], "alias": "adjusted_change_sub_type_usd_2025_01_05", "checksum": {"name": "sha256", "checksum": "3b74456e8938c043bb822cf5809b403c99886e3e66254c3f077bc63224ef5555"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.5013945, "relation_name": "cleansed.bq_archive.adjusted_change_sub_type_usd_2025_01_05", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'adjusted_change_sub_type_usd_2025_01_05') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "adjusted_change_sub_type_usd_2025_01_05"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_01_05"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/adjusted_change_sub_type_usd_2025_01_05.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.adjusted_change_sub_type_usd_2025_01_05", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2024_01_04": {"database": "cleansed", "schema": "bq_archive", "name": "adjusted_change_sub_type_usd_2024_01_04", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/adjusted_change_sub_type_usd_2024_01_04.sql", "original_file_path": "models/hob/adjusted_change_sub_type_usd_2024_01_04.sql", "unique_id": "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2024_01_04", "fqn": ["cleansed_bq_archive", "hob", "adjusted_change_sub_type_usd_2024_01_04"], "alias": "adjusted_change_sub_type_usd_2024_01_04", "checksum": {"name": "sha256", "checksum": "fec3cf44d075ec83e339ce7df369496ef7015cc8269d765e57680ad898bb98d0"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.5068283, "relation_name": "cleansed.bq_archive.adjusted_change_sub_type_usd_2024_01_04", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'adjusted_change_sub_type_usd_2024_01_04') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "adjusted_change_sub_type_usd_2024_01_04"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_01_04"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/adjusted_change_sub_type_usd_2024_01_04.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.adjusted_change_sub_type_usd_2024_01_04", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_bookings_reporting_2025_02_03": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_bookings_reporting_2025_02_03", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_bookings_reporting_2025_02_03.sql", "original_file_path": "models/hob/sfa_bookings_reporting_2025_02_03.sql", "unique_id": "model.cleansed_bq_archive.sfa_bookings_reporting_2025_02_03", "fqn": ["cleansed_bq_archive", "hob", "sfa_bookings_reporting_2025_02_03"], "alias": "sfa_bookings_reporting_2025_02_03", "checksum": {"name": "sha256", "checksum": "2242f7ae5aa0f29f835134f0cc4ca41fbfb9c58ce3d29b4d8a14e052dbe1aaf6"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.5122538, "relation_name": "cleansed.bq_archive.sfa_bookings_reporting_2025_02_03", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_bookings_reporting_2025_02_03') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_bookings_reporting_2025_02_03"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_02_03"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_bookings_reporting_2025_02_03.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_bookings_reporting_2025_02_03", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_05": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_bookings_reporting_2025_01_05", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_bookings_reporting_2025_01_05.sql", "original_file_path": "models/hob/sfa_bookings_reporting_2025_01_05.sql", "unique_id": "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_05", "fqn": ["cleansed_bq_archive", "hob", "sfa_bookings_reporting_2025_01_05"], "alias": "sfa_bookings_reporting_2025_01_05", "checksum": {"name": "sha256", "checksum": "63af2bbe2d2b023765882e3aba26f4e6ebf55fed388677b8f6f2769c753de488"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.517448, "relation_name": "cleansed.bq_archive.sfa_bookings_reporting_2025_01_05", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_bookings_reporting_2025_01_05') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_bookings_reporting_2025_01_05"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_05"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_bookings_reporting_2025_01_05.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_bookings_reporting_2025_01_05", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.ab_test_stratifiedsamples": {"database": "cleansed", "schema": "bq_archive", "name": "ab_test_stratifiedsamples", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/ab_test_stratifiedsamples.sql", "original_file_path": "models/hob/ab_test_stratifiedsamples.sql", "unique_id": "model.cleansed_bq_archive.ab_test_stratifiedsamples", "fqn": ["cleansed_bq_archive", "hob", "ab_test_stratifiedsamples"], "alias": "ab_test_stratifiedsamples", "checksum": {"name": "sha256", "checksum": "657570d8ddc5b401f76767e5abb5aca88a577d079de897e14bcf332d5d276741"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.5231986, "relation_name": "cleansed.bq_archive.ab_test_stratifiedsamples", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'ab_test_stratifiedsamples') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "ab_test_stratifiedsamples"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.ab_test_stratifiedsamples"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/ab_test_stratifiedsamples.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.ab_test_stratifiedsamples", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_bookings_reporting_2024_10_01": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_bookings_reporting_2024_10_01", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_bookings_reporting_2024_10_01.sql", "original_file_path": "models/hob/sfa_bookings_reporting_2024_10_01.sql", "unique_id": "model.cleansed_bq_archive.sfa_bookings_reporting_2024_10_01", "fqn": ["cleansed_bq_archive", "hob", "sfa_bookings_reporting_2024_10_01"], "alias": "sfa_bookings_reporting_2024_10_01", "checksum": {"name": "sha256", "checksum": "e4c2893047ec0e7f738343b3ddffa094a22f9c5bc248bcc0bf2bc126202eaba4"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.5301352, "relation_name": "cleansed.bq_archive.sfa_bookings_reporting_2024_10_01", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_bookings_reporting_2024_10_01') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_bookings_reporting_2024_10_01"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_10_01"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_bookings_reporting_2024_10_01.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_bookings_reporting_2024_10_01", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_03_03": {"database": "cleansed", "schema": "bq_archive", "name": "adjusted_change_sub_type_usd_2025_03_03", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/adjusted_change_sub_type_usd_2025_03_03.sql", "original_file_path": "models/hob/adjusted_change_sub_type_usd_2025_03_03.sql", "unique_id": "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_03_03", "fqn": ["cleansed_bq_archive", "hob", "adjusted_change_sub_type_usd_2025_03_03"], "alias": "adjusted_change_sub_type_usd_2025_03_03", "checksum": {"name": "sha256", "checksum": "0601c5108b8a3eee99d9ed8daafba5eeb0a0e0044ee5a81dcb77c536460a785c"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.535444, "relation_name": "cleansed.bq_archive.adjusted_change_sub_type_usd_2025_03_03", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'adjusted_change_sub_type_usd_2025_03_03') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "adjusted_change_sub_type_usd_2025_03_03"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_03_03"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/adjusted_change_sub_type_usd_2025_03_03.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.adjusted_change_sub_type_usd_2025_03_03", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.curated_opportunities": {"database": "cleansed", "schema": "bq_archive", "name": "curated_opportunities", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/curated_opportunities.sql", "original_file_path": "models/hob/curated_opportunities.sql", "unique_id": "model.cleansed_bq_archive.curated_opportunities", "fqn": ["cleansed_bq_archive", "hob", "curated_opportunities"], "alias": "curated_opportunities", "checksum": {"name": "sha256", "checksum": "03d4156d133e51850150bf918b376399e0aa8bd09ceb9addc512e71efe586b8e"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.540726, "relation_name": "cleansed.bq_archive.curated_opportunities", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'curated_opportunities') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "curated_opportunities"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.curated_opportunities"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/curated_opportunities.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.curated_opportunities", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup.sql", "original_file_path": "models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup.sql", "unique_id": "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup", "fqn": ["cleansed_bq_archive", "hob", "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup"], "alias": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup", "checksum": {"name": "sha256", "checksum": "f1776dc518e4462da71d695eabb8c1cfe2ed96fcc681ca49d21d9867fd8be733"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.5458376, "relation_name": "cleansed.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_hob__subpo_bundled": {"database": "cleansed", "schema": "bq_archive", "name": "eda_hob__subpo_bundled", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_hob__subpo_bundled.sql", "original_file_path": "models/hob/eda_hob__subpo_bundled.sql", "unique_id": "model.cleansed_bq_archive.eda_hob__subpo_bundled", "fqn": ["cleansed_bq_archive", "hob", "eda_hob__subpo_bundled"], "alias": "eda_hob__subpo_bundled", "checksum": {"name": "sha256", "checksum": "40ec52cf29e73e46cf3665a5915e43c399b19398c89329b70db0a72f85022f3a"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.5512133, "relation_name": "cleansed.bq_archive.eda_hob__subpo_bundled", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_hob__subpo_bundled') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_hob__subpo_bundled"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__subpo_bundled"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_hob__subpo_bundled.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_hob__subpo_bundled", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.change_sub_type_usd_2024_01_04": {"database": "cleansed", "schema": "bq_archive", "name": "change_sub_type_usd_2024_01_04", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/change_sub_type_usd_2024_01_04.sql", "original_file_path": "models/hob/change_sub_type_usd_2024_01_04.sql", "unique_id": "model.cleansed_bq_archive.change_sub_type_usd_2024_01_04", "fqn": ["cleansed_bq_archive", "hob", "change_sub_type_usd_2024_01_04"], "alias": "change_sub_type_usd_2024_01_04", "checksum": {"name": "sha256", "checksum": "5b003a6639bdac13ff2f04122cefc6a74075ea95340cba24a32470d7d0e36908"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.5565553, "relation_name": "cleansed.bq_archive.change_sub_type_usd_2024_01_04", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'change_sub_type_usd_2024_01_04') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "change_sub_type_usd_2024_01_04"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.change_sub_type_usd_2024_01_04"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/change_sub_type_usd_2024_01_04.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.change_sub_type_usd_2024_01_04", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06.sql", "original_file_path": "models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06.sql", "unique_id": "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06", "fqn": ["cleansed_bq_archive", "hob", "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06"], "alias": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06", "checksum": {"name": "sha256", "checksum": "c9a5a956cbcc87f78e36a04d2f2c895b04769609649cf2f455fef6fde196f864"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.561787, "relation_name": "cleansed.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sell_payments_subscriptions": {"database": "cleansed", "schema": "bq_archive", "name": "sell_payments_subscriptions", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sell_payments_subscriptions.sql", "original_file_path": "models/hob/sell_payments_subscriptions.sql", "unique_id": "model.cleansed_bq_archive.sell_payments_subscriptions", "fqn": ["cleansed_bq_archive", "hob", "sell_payments_subscriptions"], "alias": "sell_payments_subscriptions", "checksum": {"name": "sha256", "checksum": "7f0b9ec6597d229482a17bef6e13f64167f52b4569f272d3d603bd6fcfd64c59"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.5685298, "relation_name": "cleansed.bq_archive.sell_payments_subscriptions", "raw_code": "select * \nfrom {{ source('bq_archive_objects', 'sell_payments_subscriptions') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sell_payments_subscriptions"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sell_payments_subscriptions"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sell_payments_subscriptions.sql", "compiled": true, "compiled_code": "select * \nfrom raw.bq_archive.sell_payments_subscriptions", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_bookings_reporting_2024_10_03": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_bookings_reporting_2024_10_03", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_bookings_reporting_2024_10_03.sql", "original_file_path": "models/hob/sfa_bookings_reporting_2024_10_03.sql", "unique_id": "model.cleansed_bq_archive.sfa_bookings_reporting_2024_10_03", "fqn": ["cleansed_bq_archive", "hob", "sfa_bookings_reporting_2024_10_03"], "alias": "sfa_bookings_reporting_2024_10_03", "checksum": {"name": "sha256", "checksum": "8a216391939b5b94b28d9d287b0fee65ddf625c2a3b5a88469fc7798e3fd4926"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.57373, "relation_name": "cleansed.bq_archive.sfa_bookings_reporting_2024_10_03", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_bookings_reporting_2024_10_03') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_bookings_reporting_2024_10_03"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_10_03"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_bookings_reporting_2024_10_03.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_bookings_reporting_2024_10_03", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05.sql", "original_file_path": "models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05.sql", "unique_id": "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05", "fqn": ["cleansed_bq_archive", "hob", "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05"], "alias": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05", "checksum": {"name": "sha256", "checksum": "7901d8095f777913690d2f0429854f6fdf53f53bd0cc1755c06d4d1caae486c1"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.5790093, "relation_name": "cleansed.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04.sql", "original_file_path": "models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04.sql", "unique_id": "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04", "fqn": ["cleansed_bq_archive", "hob", "sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04"], "alias": "sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04", "checksum": {"name": "sha256", "checksum": "5cd47efd892e5f3fc4cc596e6f93698af326016496b1012efaebbf66ac5e5e5b"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.5843759, "relation_name": "cleansed.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_hob__legacy_sell_01_account": {"database": "cleansed", "schema": "bq_archive", "name": "eda_hob__legacy_sell_01_account", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_hob__legacy_sell_01_account.sql", "original_file_path": "models/hob/eda_hob__legacy_sell_01_account.sql", "unique_id": "model.cleansed_bq_archive.eda_hob__legacy_sell_01_account", "fqn": ["cleansed_bq_archive", "hob", "eda_hob__legacy_sell_01_account"], "alias": "eda_hob__legacy_sell_01_account", "checksum": {"name": "sha256", "checksum": "fe231bdcfae9f1d8d71768fabbd7790fc74e3e30d9749666441a9deb13911977"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.589722, "relation_name": "cleansed.bq_archive.eda_hob__legacy_sell_01_account", "raw_code": "select * \nfrom {{ source('bq_archive_objects', 'eda_hob__legacy_sell_01_account') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_hob__legacy_sell_01_account"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__legacy_sell_01_account"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_hob__legacy_sell_01_account.sql", "compiled": true, "compiled_code": "select * \nfrom raw.bq_archive.eda_hob__legacy_sell_01_account", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_bookings_reporting_2025_03_03": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_bookings_reporting_2025_03_03", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_bookings_reporting_2025_03_03.sql", "original_file_path": "models/hob/sfa_bookings_reporting_2025_03_03.sql", "unique_id": "model.cleansed_bq_archive.sfa_bookings_reporting_2025_03_03", "fqn": ["cleansed_bq_archive", "hob", "sfa_bookings_reporting_2025_03_03"], "alias": "sfa_bookings_reporting_2025_03_03", "checksum": {"name": "sha256", "checksum": "ef709b0ef829bfd6da6c46e3c52382ae14f611d8383f918b3a5eccf0cd0f13b6"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.5949602, "relation_name": "cleansed.bq_archive.sfa_bookings_reporting_2025_03_03", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_bookings_reporting_2025_03_03') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_bookings_reporting_2025_03_03"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_03_03"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_bookings_reporting_2025_03_03.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_bookings_reporting_2025_03_03", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.smoochforce_plans_smooch__c_scd2": {"database": "cleansed", "schema": "bq_archive", "name": "smoochforce_plans_smooch__c_scd2", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/smoochforce_plans_smooch__c_scd2.sql", "original_file_path": "models/hob/smoochforce_plans_smooch__c_scd2.sql", "unique_id": "model.cleansed_bq_archive.smoochforce_plans_smooch__c_scd2", "fqn": ["cleansed_bq_archive", "hob", "smoochforce_plans_smooch__c_scd2"], "alias": "smoochforce_plans_smooch__c_scd2", "checksum": {"name": "sha256", "checksum": "952e920b547bf4f1f5e3f606502c3b775a3642cd54fcec6618c0f13630c79140"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.5999901, "relation_name": "cleansed.bq_archive.smoochforce_plans_smooch__c_scd2", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'smoochforce_plans_smooch__c_scd2') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "smoochforce_plans_smooch__c_scd2"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.smoochforce_plans_smooch__c_scd2"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/smoochforce_plans_smooch__c_scd2.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.smoochforce_plans_smooch__c_scd2", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.cohort_point_in_time_15_jan": {"database": "cleansed", "schema": "bq_archive", "name": "cohort_point_in_time_15_jan", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/cohort_point_in_time_15_jan.sql", "original_file_path": "models/hob/cohort_point_in_time_15_jan.sql", "unique_id": "model.cleansed_bq_archive.cohort_point_in_time_15_jan", "fqn": ["cleansed_bq_archive", "hob", "cohort_point_in_time_15_jan"], "alias": "cohort_point_in_time_15_jan", "checksum": {"name": "sha256", "checksum": "2bf863489392d9021edea73872a497d2e4abcfd5021abe49e68dafbb7ad95a39"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.606791, "relation_name": "cleansed.bq_archive.cohort_point_in_time_15_jan", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'cohort_point_in_time_15_jan') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "cohort_point_in_time_15_jan"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.cohort_point_in_time_15_jan"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/cohort_point_in_time_15_jan.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.cohort_point_in_time_15_jan", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.new_productrateplancharge": {"database": "cleansed", "schema": "bq_archive", "name": "new_productrateplancharge", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/new_productrateplancharge.sql", "original_file_path": "models/hob/new_productrateplancharge.sql", "unique_id": "model.cleansed_bq_archive.new_productrateplancharge", "fqn": ["cleansed_bq_archive", "hob", "new_productrateplancharge"], "alias": "new_productrateplancharge", "checksum": {"name": "sha256", "checksum": "69208c51d0ded5d1607c3bf630baa31df2389eae4d3c1e68228747fca3574a4f"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.612184, "relation_name": "cleansed.bq_archive.new_productrateplancharge", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'new_productrateplancharge') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "new_productrateplancharge"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.new_productrateplancharge"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/new_productrateplancharge.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.new_productrateplancharge", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_23": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_bookings_reporting_2025_01_23", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_bookings_reporting_2025_01_23.sql", "original_file_path": "models/hob/sfa_bookings_reporting_2025_01_23.sql", "unique_id": "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_23", "fqn": ["cleansed_bq_archive", "hob", "sfa_bookings_reporting_2025_01_23"], "alias": "sfa_bookings_reporting_2025_01_23", "checksum": {"name": "sha256", "checksum": "ea2141af60c63880d0ccc8d02dca0f925d25c54d72a1d84c14daa31d14468021"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.617557, "relation_name": "cleansed.bq_archive.sfa_bookings_reporting_2025_01_23", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_bookings_reporting_2025_01_23') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_bookings_reporting_2025_01_23"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_23"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_bookings_reporting_2025_01_23.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_bookings_reporting_2025_01_23", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.crm_dim_2025_market_segment": {"database": "cleansed", "schema": "bq_archive", "name": "crm_dim_2025_market_segment", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/crm_dim_2025_market_segment.sql", "original_file_path": "models/hob/crm_dim_2025_market_segment.sql", "unique_id": "model.cleansed_bq_archive.crm_dim_2025_market_segment", "fqn": ["cleansed_bq_archive", "hob", "crm_dim_2025_market_segment"], "alias": "crm_dim_2025_market_segment", "checksum": {"name": "sha256", "checksum": "2d365a940644030d0068249c18a5b2e79c33f6d2d1bc02fc577ca92f0fd2477b"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.622914, "relation_name": "cleansed.bq_archive.crm_dim_2025_market_segment", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'crm_dim_2025_market_segment') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "crm_dim_2025_market_segment"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.crm_dim_2025_market_segment"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/crm_dim_2025_market_segment.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.crm_dim_2025_market_segment", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sam_summary": {"database": "cleansed", "schema": "bq_archive", "name": "sam_summary", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sam_summary.sql", "original_file_path": "models/hob/sam_summary.sql", "unique_id": "model.cleansed_bq_archive.sam_summary", "fqn": ["cleansed_bq_archive", "hob", "sam_summary"], "alias": "sam_summary", "checksum": {"name": "sha256", "checksum": "20849dba5be2fa95a38f0248a279593579803a4cba53965d928991dba5a0e4e6"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.6281672, "relation_name": "cleansed.bq_archive.sam_summary", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sam_summary') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sam_summary"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sam_summary"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sam_summary.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sam_summary", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_bookings_reporting_2025_03_01": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_bookings_reporting_2025_03_01", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_bookings_reporting_2025_03_01.sql", "original_file_path": "models/hob/sfa_bookings_reporting_2025_03_01.sql", "unique_id": "model.cleansed_bq_archive.sfa_bookings_reporting_2025_03_01", "fqn": ["cleansed_bq_archive", "hob", "sfa_bookings_reporting_2025_03_01"], "alias": "sfa_bookings_reporting_2025_03_01", "checksum": {"name": "sha256", "checksum": "d2b0f81e97dce3a6b8c58496afdad94dfce3cc279a83a21b929bf53665527545"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.6335654, "relation_name": "cleansed.bq_archive.sfa_bookings_reporting_2025_03_01", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_bookings_reporting_2025_03_01') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_bookings_reporting_2025_03_01"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_03_01"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_bookings_reporting_2025_03_01.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_bookings_reporting_2025_03_01", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.ab_test_sample": {"database": "cleansed", "schema": "bq_archive", "name": "ab_test_sample", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/ab_test_sample.sql", "original_file_path": "models/hob/ab_test_sample.sql", "unique_id": "model.cleansed_bq_archive.ab_test_sample", "fqn": ["cleansed_bq_archive", "hob", "ab_test_sample"], "alias": "ab_test_sample", "checksum": {"name": "sha256", "checksum": "4145d4781bf9521e3d94b11211a8c06c52136485928f2369d184b0fe8c279ec9"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.640514, "relation_name": "cleansed.bq_archive.ab_test_sample", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'ab_test_sample') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "ab_test_sample"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.ab_test_sample"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/ab_test_sample.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.ab_test_sample", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.smoochforce_account_scd2": {"database": "cleansed", "schema": "bq_archive", "name": "smoochforce_account_scd2", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/smoochforce_account_scd2.sql", "original_file_path": "models/hob/smoochforce_account_scd2.sql", "unique_id": "model.cleansed_bq_archive.smoochforce_account_scd2", "fqn": ["cleansed_bq_archive", "hob", "smoochforce_account_scd2"], "alias": "smoochforce_account_scd2", "checksum": {"name": "sha256", "checksum": "975b926ee50f62596c01373bf4a7421bda6f2c284ea7425ff5f1ff19fff8d08b"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.645914, "relation_name": "cleansed.bq_archive.smoochforce_account_scd2", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'smoochforce_account_scd2') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "smoochforce_account_scd2"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.smoochforce_account_scd2"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/smoochforce_account_scd2.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.smoochforce_account_scd2", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_bookings_reporting_2024_07_01": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_bookings_reporting_2024_07_01", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_bookings_reporting_2024_07_01.sql", "original_file_path": "models/hob/sfa_bookings_reporting_2024_07_01.sql", "unique_id": "model.cleansed_bq_archive.sfa_bookings_reporting_2024_07_01", "fqn": ["cleansed_bq_archive", "hob", "sfa_bookings_reporting_2024_07_01"], "alias": "sfa_bookings_reporting_2024_07_01", "checksum": {"name": "sha256", "checksum": "57ce2d4f6fd5cf4d2ec42c88dbb7911ee34dac451079b2f21282d7f68338b984"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.6512847, "relation_name": "cleansed.bq_archive.sfa_bookings_reporting_2024_07_01", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_bookings_reporting_2024_07_01') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_bookings_reporting_2024_07_01"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_07_01"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_bookings_reporting_2024_07_01.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_bookings_reporting_2024_07_01", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03.sql", "original_file_path": "models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03.sql", "unique_id": "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03", "fqn": ["cleansed_bq_archive", "hob", "sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03"], "alias": "sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03", "checksum": {"name": "sha256", "checksum": "6c6250bf30b3153a17d6f9200480947764fea656a105696c3f8df56e617693cf"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.6563714, "relation_name": "cleansed.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.qtd_recurring_revenue_month_end_and_current_snapshot": {"database": "cleansed", "schema": "bq_archive", "name": "qtd_recurring_revenue_month_end_and_current_snapshot", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/qtd_recurring_revenue_month_end_and_current_snapshot.sql", "original_file_path": "models/hob/qtd_recurring_revenue_month_end_and_current_snapshot.sql", "unique_id": "model.cleansed_bq_archive.qtd_recurring_revenue_month_end_and_current_snapshot", "fqn": ["cleansed_bq_archive", "hob", "qtd_recurring_revenue_month_end_and_current_snapshot"], "alias": "qtd_recurring_revenue_month_end_and_current_snapshot", "checksum": {"name": "sha256", "checksum": "1c15d4c0ff342d1ebd614fb9e1e2f08122b821c9409c334e45c40a7484266a41"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.6616483, "relation_name": "cleansed.bq_archive.qtd_recurring_revenue_month_end_and_current_snapshot", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'qtd_recurring_revenue_month_end_and_current_snapshot') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "qtd_recurring_revenue_month_end_and_current_snapshot"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.qtd_recurring_revenue_month_end_and_current_snapshot"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/qtd_recurring_revenue_month_end_and_current_snapshot.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.qtd_recurring_revenue_month_end_and_current_snapshot", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03.sql", "original_file_path": "models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03.sql", "unique_id": "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03", "fqn": ["cleansed_bq_archive", "hob", "sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03"], "alias": "sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03", "checksum": {"name": "sha256", "checksum": "7e36be3f5cd5d025dc8726fcad869ed4e48a5723aadebc32cfbf22822bff77c6"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.667013, "relation_name": "cleansed.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_bookings_reporting_2024_04_03": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_bookings_reporting_2024_04_03", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_bookings_reporting_2024_04_03.sql", "original_file_path": "models/hob/sfa_bookings_reporting_2024_04_03.sql", "unique_id": "model.cleansed_bq_archive.sfa_bookings_reporting_2024_04_03", "fqn": ["cleansed_bq_archive", "hob", "sfa_bookings_reporting_2024_04_03"], "alias": "sfa_bookings_reporting_2024_04_03", "checksum": {"name": "sha256", "checksum": "fe696e8cba70c0fc8083e1fd418ecb550aaca6d5fea5736dc785931a258c129e"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.6724503, "relation_name": "cleansed.bq_archive.sfa_bookings_reporting_2024_04_03", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_bookings_reporting_2024_04_03') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_bookings_reporting_2024_04_03"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_04_03"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_bookings_reporting_2024_04_03.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_bookings_reporting_2024_04_03", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup_29april": {"database": "cleansed", "schema": "bq_archive", "name": "eda_pricing_comm_zuora_202304_backup_29april", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_pricing_comm_zuora_202304_backup_29april.sql", "original_file_path": "models/hob/eda_pricing_comm_zuora_202304_backup_29april.sql", "unique_id": "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup_29april", "fqn": ["cleansed_bq_archive", "hob", "eda_pricing_comm_zuora_202304_backup_29april"], "alias": "eda_pricing_comm_zuora_202304_backup_29april", "checksum": {"name": "sha256", "checksum": "01cafa5c6378824c1b09115a6b4506d3f7a8a08407062c77c1ca9cdc3c1f34f9"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.6793215, "relation_name": "cleansed.bq_archive.eda_pricing_comm_zuora_202304_backup_29april", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_pricing_comm_zuora_202304_backup_29april') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_pricing_comm_zuora_202304_backup_29april"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_29april"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_pricing_comm_zuora_202304_backup_29april.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_pricing_comm_zuora_202304_backup_29april", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2024_07_01": {"database": "cleansed", "schema": "bq_archive", "name": "adjusted_change_sub_type_usd_2024_07_01", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/adjusted_change_sub_type_usd_2024_07_01.sql", "original_file_path": "models/hob/adjusted_change_sub_type_usd_2024_07_01.sql", "unique_id": "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2024_07_01", "fqn": ["cleansed_bq_archive", "hob", "adjusted_change_sub_type_usd_2024_07_01"], "alias": "adjusted_change_sub_type_usd_2024_07_01", "checksum": {"name": "sha256", "checksum": "1d2b8638b1149d31059cd2bb17dcce7b805de834792fce2e1df70b3a21791c2a"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.6844976, "relation_name": "cleansed.bq_archive.adjusted_change_sub_type_usd_2024_07_01", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'adjusted_change_sub_type_usd_2024_07_01') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "adjusted_change_sub_type_usd_2024_07_01"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_07_01"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/adjusted_change_sub_type_usd_2024_07_01.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.adjusted_change_sub_type_usd_2024_07_01", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04.sql", "original_file_path": "models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04.sql", "unique_id": "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04", "fqn": ["cleansed_bq_archive", "hob", "sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04"], "alias": "sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04", "checksum": {"name": "sha256", "checksum": "d5d6d5b57d17f8c87cefee81ab025adcf8361b2f5dffccb571adca0d982154ce"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.6899009, "relation_name": "cleansed.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.dod_change_sub_type_po_level": {"database": "cleansed", "schema": "bq_archive", "name": "dod_change_sub_type_po_level", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/dod_change_sub_type_po_level.sql", "original_file_path": "models/hob/dod_change_sub_type_po_level.sql", "unique_id": "model.cleansed_bq_archive.dod_change_sub_type_po_level", "fqn": ["cleansed_bq_archive", "hob", "dod_change_sub_type_po_level"], "alias": "dod_change_sub_type_po_level", "checksum": {"name": "sha256", "checksum": "587aa927aeb0e862a52e5a5f8953c269d56671136e5433775ce675aeb8731145"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.6953027, "relation_name": "cleansed.bq_archive.dod_change_sub_type_po_level", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'dod_change_sub_type_po_level') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "dod_change_sub_type_po_level"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.dod_change_sub_type_po_level"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/dod_change_sub_type_po_level.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.dod_change_sub_type_po_level", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_01": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_bookings_reporting_2025_01_01", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_bookings_reporting_2025_01_01.sql", "original_file_path": "models/hob/sfa_bookings_reporting_2025_01_01.sql", "unique_id": "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_01", "fqn": ["cleansed_bq_archive", "hob", "sfa_bookings_reporting_2025_01_01"], "alias": "sfa_bookings_reporting_2025_01_01", "checksum": {"name": "sha256", "checksum": "f76699f6f11886af8ff46d0d8c13af9957deb546493168376f837d6b6d810fd8"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.7007527, "relation_name": "cleansed.bq_archive.sfa_bookings_reporting_2025_01_01", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_bookings_reporting_2025_01_01') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_bookings_reporting_2025_01_01"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_01"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_bookings_reporting_2025_01_01.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_bookings_reporting_2025_01_01", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.curated_bookings": {"database": "cleansed", "schema": "bq_archive", "name": "curated_bookings", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/curated_bookings.sql", "original_file_path": "models/hob/curated_bookings.sql", "unique_id": "model.cleansed_bq_archive.curated_bookings", "fqn": ["cleansed_bq_archive", "hob", "curated_bookings"], "alias": "curated_bookings", "checksum": {"name": "sha256", "checksum": "5c59045e3bb91dfd6bdbbdd3270c9d05f60d08f19a987df586c88ad81e50aa03"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.7061393, "relation_name": "cleansed.bq_archive.curated_bookings", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'curated_bookings') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "curated_bookings"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.curated_bookings"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/curated_bookings.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.curated_bookings", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_hob__legacy_sell_06_subpo": {"database": "cleansed", "schema": "bq_archive", "name": "eda_hob__legacy_sell_06_subpo", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_hob__legacy_sell_06_subpo.sql", "original_file_path": "models/hob/eda_hob__legacy_sell_06_subpo.sql", "unique_id": "model.cleansed_bq_archive.eda_hob__legacy_sell_06_subpo", "fqn": ["cleansed_bq_archive", "hob", "eda_hob__legacy_sell_06_subpo"], "alias": "eda_hob__legacy_sell_06_subpo", "checksum": {"name": "sha256", "checksum": "caad65c85128d6d6c740111dcc575a1187736dc9cd6b775f5c4b981c51a42614"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.7112887, "relation_name": "cleansed.bq_archive.eda_hob__legacy_sell_06_subpo", "raw_code": "select * \nfrom {{ source('bq_archive_objects', 'eda_hob__legacy_sell_06_subpo') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_hob__legacy_sell_06_subpo"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__legacy_sell_06_subpo"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_hob__legacy_sell_06_subpo.sql", "compiled": true, "compiled_code": "select * \nfrom raw.bq_archive.eda_hob__legacy_sell_06_subpo", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_bookings_reporting_2023_04_04": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_bookings_reporting_2023_04_04", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_bookings_reporting_2023_04_04.sql", "original_file_path": "models/hob/sfa_bookings_reporting_2023_04_04.sql", "unique_id": "model.cleansed_bq_archive.sfa_bookings_reporting_2023_04_04", "fqn": ["cleansed_bq_archive", "hob", "sfa_bookings_reporting_2023_04_04"], "alias": "sfa_bookings_reporting_2023_04_04", "checksum": {"name": "sha256", "checksum": "fd768a7eb51eb7b89b2980b03a40757c59aa094468f2e804c5cec97e8277999a"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.7181349, "relation_name": "cleansed.bq_archive.sfa_bookings_reporting_2023_04_04", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_bookings_reporting_2023_04_04') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_bookings_reporting_2023_04_04"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2023_04_04"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_bookings_reporting_2023_04_04.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_bookings_reporting_2023_04_04", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03.sql", "original_file_path": "models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03.sql", "unique_id": "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03", "fqn": ["cleansed_bq_archive", "hob", "sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03"], "alias": "sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03", "checksum": {"name": "sha256", "checksum": "658a4ee19a8b5421da0e0ad6e649ee329a4c88173194198f90b77231befda74b"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.723641, "relation_name": "cleansed.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_06": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_bookings_reporting_2025_01_06", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_bookings_reporting_2025_01_06.sql", "original_file_path": "models/hob/sfa_bookings_reporting_2025_01_06.sql", "unique_id": "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_06", "fqn": ["cleansed_bq_archive", "hob", "sfa_bookings_reporting_2025_01_06"], "alias": "sfa_bookings_reporting_2025_01_06", "checksum": {"name": "sha256", "checksum": "49262bb61ed1d5d994b1a39c38cf89771423a6e3b9c6d165d48819312e90683b"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.7290697, "relation_name": "cleansed.bq_archive.sfa_bookings_reporting_2025_01_06", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_bookings_reporting_2025_01_06') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_bookings_reporting_2025_01_06"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_06"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_bookings_reporting_2025_01_06.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_bookings_reporting_2025_01_06", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2024_04_03": {"database": "cleansed", "schema": "bq_archive", "name": "adjusted_change_sub_type_usd_2024_04_03", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/adjusted_change_sub_type_usd_2024_04_03.sql", "original_file_path": "models/hob/adjusted_change_sub_type_usd_2024_04_03.sql", "unique_id": "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2024_04_03", "fqn": ["cleansed_bq_archive", "hob", "adjusted_change_sub_type_usd_2024_04_03"], "alias": "adjusted_change_sub_type_usd_2024_04_03", "checksum": {"name": "sha256", "checksum": "7556568d7456809ac941d4ad49757a8dba27468918a1b81526c68517f51d5bdb"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.7345924, "relation_name": "cleansed.bq_archive.adjusted_change_sub_type_usd_2024_04_03", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'adjusted_change_sub_type_usd_2024_04_03') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "adjusted_change_sub_type_usd_2024_04_03"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_04_03"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/adjusted_change_sub_type_usd_2024_04_03.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.adjusted_change_sub_type_usd_2024_04_03", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_hob__yoy_recurring_revenue_bundled": {"database": "cleansed", "schema": "bq_archive", "name": "eda_hob__yoy_recurring_revenue_bundled", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_hob__yoy_recurring_revenue_bundled.sql", "original_file_path": "models/hob/eda_hob__yoy_recurring_revenue_bundled.sql", "unique_id": "model.cleansed_bq_archive.eda_hob__yoy_recurring_revenue_bundled", "fqn": ["cleansed_bq_archive", "hob", "eda_hob__yoy_recurring_revenue_bundled"], "alias": "eda_hob__yoy_recurring_revenue_bundled", "checksum": {"name": "sha256", "checksum": "bed47e03613794ec47764bdd89e8f96f4f6ee56c312f1a5fec5a868f2f756b7a"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.73976, "relation_name": "cleansed.bq_archive.eda_hob__yoy_recurring_revenue_bundled", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_hob__yoy_recurring_revenue_bundled') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_hob__yoy_recurring_revenue_bundled"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__yoy_recurring_revenue_bundled"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_hob__yoy_recurring_revenue_bundled.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_hob__yoy_recurring_revenue_bundled", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.customer_dim_scd2": {"database": "cleansed", "schema": "bq_archive", "name": "customer_dim_scd2", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/customer_dim_scd2.sql", "original_file_path": "models/hob/customer_dim_scd2.sql", "unique_id": "model.cleansed_bq_archive.customer_dim_scd2", "fqn": ["cleansed_bq_archive", "hob", "customer_dim_scd2"], "alias": "customer_dim_scd2", "checksum": {"name": "sha256", "checksum": "40f5600732a366b0b33fff925c16594331565548144b7a990efd7f68f0022e42"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.7450998, "relation_name": "cleansed.bq_archive.customer_dim_scd2", "raw_code": "select * \nfrom {{ source('bq_archive_objects', 'customer_dim_scd2') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "customer_dim_scd2"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.customer_dim_scd2"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/customer_dim_scd2.sql", "compiled": true, "compiled_code": "select * \nfrom raw.bq_archive.customer_dim_scd2", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.curated_bookings_snapshot": {"database": "cleansed", "schema": "bq_archive", "name": "curated_bookings_snapshot", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/curated_bookings_snapshot.sql", "original_file_path": "models/hob/curated_bookings_snapshot.sql", "unique_id": "model.cleansed_bq_archive.curated_bookings_snapshot", "fqn": ["cleansed_bq_archive", "hob", "curated_bookings_snapshot"], "alias": "curated_bookings_snapshot", "checksum": {"name": "sha256", "checksum": "c9292e68bf1332d1ecac5309885ae239f6d7740f7028812c6efe940b02794f37"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.75199, "relation_name": "cleansed.bq_archive.curated_bookings_snapshot", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'curated_bookings_snapshot') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "curated_bookings_snapshot"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.curated_bookings_snapshot"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/curated_bookings_snapshot.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.curated_bookings_snapshot", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01.sql", "original_file_path": "models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01.sql", "unique_id": "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01", "fqn": ["cleansed_bq_archive", "hob", "sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01"], "alias": "sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01", "checksum": {"name": "sha256", "checksum": "aa006d1d4da6457a948e296de1579042ca477d8e409ba064fe0f188f10692330"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.757383, "relation_name": "cleansed.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_03": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_bookings_reporting_2025_01_03", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_bookings_reporting_2025_01_03.sql", "original_file_path": "models/hob/sfa_bookings_reporting_2025_01_03.sql", "unique_id": "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_03", "fqn": ["cleansed_bq_archive", "hob", "sfa_bookings_reporting_2025_01_03"], "alias": "sfa_bookings_reporting_2025_01_03", "checksum": {"name": "sha256", "checksum": "2645ea4bd8543a23fe8ecb740f176203abc49937979f367f63e1d5a4924bd7a3"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.762754, "relation_name": "cleansed.bq_archive.sfa_bookings_reporting_2025_01_03", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_bookings_reporting_2025_01_03') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_bookings_reporting_2025_01_03"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_03"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_bookings_reporting_2025_01_03.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_bookings_reporting_2025_01_03", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_hob__price_ramp_adjustments_prep": {"database": "cleansed", "schema": "bq_archive", "name": "eda_hob__price_ramp_adjustments_prep", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_hob__price_ramp_adjustments_prep.sql", "original_file_path": "models/hob/eda_hob__price_ramp_adjustments_prep.sql", "unique_id": "model.cleansed_bq_archive.eda_hob__price_ramp_adjustments_prep", "fqn": ["cleansed_bq_archive", "hob", "eda_hob__price_ramp_adjustments_prep"], "alias": "eda_hob__price_ramp_adjustments_prep", "checksum": {"name": "sha256", "checksum": "dba11d2aecbb601185d0e9d816e111014fbc041ab906b28fa52a59af85fcd21e"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.768008, "relation_name": "cleansed.bq_archive.eda_hob__price_ramp_adjustments_prep", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_hob__price_ramp_adjustments_prep') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_hob__price_ramp_adjustments_prep"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__price_ramp_adjustments_prep"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_hob__price_ramp_adjustments_prep.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_hob__price_ramp_adjustments_prep", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.change_sub_type_usd_2024_07_03": {"database": "cleansed", "schema": "bq_archive", "name": "change_sub_type_usd_2024_07_03", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/change_sub_type_usd_2024_07_03.sql", "original_file_path": "models/hob/change_sub_type_usd_2024_07_03.sql", "unique_id": "model.cleansed_bq_archive.change_sub_type_usd_2024_07_03", "fqn": ["cleansed_bq_archive", "hob", "change_sub_type_usd_2024_07_03"], "alias": "change_sub_type_usd_2024_07_03", "checksum": {"name": "sha256", "checksum": "1892c3a2681cd7bfbffce2ff05992b51da6d09cc23c3c4a96749cffeaf7d691d"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.7734594, "relation_name": "cleansed.bq_archive.change_sub_type_usd_2024_07_03", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'change_sub_type_usd_2024_07_03') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "change_sub_type_usd_2024_07_03"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.change_sub_type_usd_2024_07_03"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/change_sub_type_usd_2024_07_03.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.change_sub_type_usd_2024_07_03", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_18april": {"database": "cleansed", "schema": "bq_archive", "name": "eda_pricing_comm_zuora_202304_18april", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_pricing_comm_zuora_202304_18april.sql", "original_file_path": "models/hob/eda_pricing_comm_zuora_202304_18april.sql", "unique_id": "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_18april", "fqn": ["cleansed_bq_archive", "hob", "eda_pricing_comm_zuora_202304_18april"], "alias": "eda_pricing_comm_zuora_202304_18april", "checksum": {"name": "sha256", "checksum": "f40d8a3a86e4ffd2d51c6705930668d1ffbd3185cb8e253e1c93d4f6467f1f6a"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.7788887, "relation_name": "cleansed.bq_archive.eda_pricing_comm_zuora_202304_18april", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_pricing_comm_zuora_202304_18april') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_pricing_comm_zuora_202304_18april"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_18april"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_pricing_comm_zuora_202304_18april.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_pricing_comm_zuora_202304_18april", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sell_payments_trials": {"database": "cleansed", "schema": "bq_archive", "name": "sell_payments_trials", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sell_payments_trials.sql", "original_file_path": "models/hob/sell_payments_trials.sql", "unique_id": "model.cleansed_bq_archive.sell_payments_trials", "fqn": ["cleansed_bq_archive", "hob", "sell_payments_trials"], "alias": "sell_payments_trials", "checksum": {"name": "sha256", "checksum": "fffe02099a984b954aaab3dc5fe67111e3367848805ae7af9f1ad3c5cac7bfde"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.7842312, "relation_name": "cleansed.bq_archive.sell_payments_trials", "raw_code": "select * \nfrom {{ source('bq_archive_objects', 'sell_payments_trials') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sell_payments_trials"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sell_payments_trials"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sell_payments_trials.sql", "compiled": true, "compiled_code": "select * \nfrom raw.bq_archive.sell_payments_trials", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sam_monthly_usage": {"database": "cleansed", "schema": "bq_archive", "name": "sam_monthly_usage", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sam_monthly_usage.sql", "original_file_path": "models/hob/sam_monthly_usage.sql", "unique_id": "model.cleansed_bq_archive.sam_monthly_usage", "fqn": ["cleansed_bq_archive", "hob", "sam_monthly_usage"], "alias": "sam_monthly_usage", "checksum": {"name": "sha256", "checksum": "303b2b0995a76a98c5994a044ca0ec4191b92d14fa37b428c256543e06694ee2"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.7911768, "relation_name": "cleansed.bq_archive.sam_monthly_usage", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sam_monthly_usage') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sam_monthly_usage"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sam_monthly_usage"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sam_monthly_usage.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sam_monthly_usage", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.p0_master_dashboard_backfill": {"database": "cleansed", "schema": "bq_archive", "name": "p0_master_dashboard_backfill", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/p0_master_dashboard_backfill.sql", "original_file_path": "models/hob/p0_master_dashboard_backfill.sql", "unique_id": "model.cleansed_bq_archive.p0_master_dashboard_backfill", "fqn": ["cleansed_bq_archive", "hob", "p0_master_dashboard_backfill"], "alias": "p0_master_dashboard_backfill", "checksum": {"name": "sha256", "checksum": "b37bbacc5b866088c32f6d7d3e5bcf97f472d90ba4a06d82bade30ca963b34fb"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.7964456, "relation_name": "cleansed.bq_archive.p0_master_dashboard_backfill", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'p0_master_dashboard_backfill') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "p0_master_dashboard_backfill"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.p0_master_dashboard_backfill"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/p0_master_dashboard_backfill.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.p0_master_dashboard_backfill", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.qtd_product_finance_adj_month_end_and_current_snapshot": {"database": "cleansed", "schema": "bq_archive", "name": "qtd_product_finance_adj_month_end_and_current_snapshot", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/qtd_product_finance_adj_month_end_and_current_snapshot.sql", "original_file_path": "models/hob/qtd_product_finance_adj_month_end_and_current_snapshot.sql", "unique_id": "model.cleansed_bq_archive.qtd_product_finance_adj_month_end_and_current_snapshot", "fqn": ["cleansed_bq_archive", "hob", "qtd_product_finance_adj_month_end_and_current_snapshot"], "alias": "qtd_product_finance_adj_month_end_and_current_snapshot", "checksum": {"name": "sha256", "checksum": "1d61d022f5e3cd0d45aa72126aad6814089761568beae376874bd4100dac59fd"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.8018517, "relation_name": "cleansed.bq_archive.qtd_product_finance_adj_month_end_and_current_snapshot", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'qtd_product_finance_adj_month_end_and_current_snapshot') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "qtd_product_finance_adj_month_end_and_current_snapshot"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.qtd_product_finance_adj_month_end_and_current_snapshot"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/qtd_product_finance_adj_month_end_and_current_snapshot.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.qtd_product_finance_adj_month_end_and_current_snapshot", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.agent_months_arr": {"database": "cleansed", "schema": "bq_archive", "name": "agent_months_arr", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/agent_months_arr.sql", "original_file_path": "models/hob/agent_months_arr.sql", "unique_id": "model.cleansed_bq_archive.agent_months_arr", "fqn": ["cleansed_bq_archive", "hob", "agent_months_arr"], "alias": "agent_months_arr", "checksum": {"name": "sha256", "checksum": "077eeeed735b2f636f84725dc5e8d7412a37e82541399bc78b85783f4b53b6f9"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.807252, "relation_name": "cleansed.bq_archive.agent_months_arr", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'agent_months_arr') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "agent_months_arr"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.agent_months_arr"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/agent_months_arr.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.agent_months_arr", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sam_usage_by_email_table": {"database": "cleansed", "schema": "bq_archive", "name": "sam_usage_by_email_table", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sam_usage_by_email_table.sql", "original_file_path": "models/hob/sam_usage_by_email_table.sql", "unique_id": "model.cleansed_bq_archive.sam_usage_by_email_table", "fqn": ["cleansed_bq_archive", "hob", "sam_usage_by_email_table"], "alias": "sam_usage_by_email_table", "checksum": {"name": "sha256", "checksum": "6b6194178b49f22774a8931c07dc872e89dd1925d7a080775722da31607e536b"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.8126493, "relation_name": "cleansed.bq_archive.sam_usage_by_email_table", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sam_usage_by_email_table') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sam_usage_by_email_table"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sam_usage_by_email_table"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sam_usage_by_email_table.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sam_usage_by_email_table", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_bookings_reporting_2024_07_03": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_bookings_reporting_2024_07_03", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_bookings_reporting_2024_07_03.sql", "original_file_path": "models/hob/sfa_bookings_reporting_2024_07_03.sql", "unique_id": "model.cleansed_bq_archive.sfa_bookings_reporting_2024_07_03", "fqn": ["cleansed_bq_archive", "hob", "sfa_bookings_reporting_2024_07_03"], "alias": "sfa_bookings_reporting_2024_07_03", "checksum": {"name": "sha256", "checksum": "955f22ea175fb8d0d30143f7abaef4d6fcc8b469ad01444407d83dfd42dd4865"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.818166, "relation_name": "cleansed.bq_archive.sfa_bookings_reporting_2024_07_03", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_bookings_reporting_2024_07_03') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_bookings_reporting_2024_07_03"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_07_03"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_bookings_reporting_2024_07_03.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_bookings_reporting_2024_07_03", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05.sql", "original_file_path": "models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05.sql", "unique_id": "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05", "fqn": ["cleansed_bq_archive", "hob", "sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05"], "alias": "sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05", "checksum": {"name": "sha256", "checksum": "bbf4839d22a2a8f1417d5195b0043caff8d0b7bdb33a8a7b758ec3dc51b63b80"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.823302, "relation_name": "cleansed.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.am_usage_by_instance_by_email_v2": {"database": "cleansed", "schema": "bq_archive", "name": "am_usage_by_instance_by_email_v2", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/am_usage_by_instance_by_email_v2.sql", "original_file_path": "models/hob/am_usage_by_instance_by_email_v2.sql", "unique_id": "model.cleansed_bq_archive.am_usage_by_instance_by_email_v2", "fqn": ["cleansed_bq_archive", "hob", "am_usage_by_instance_by_email_v2"], "alias": "am_usage_by_instance_by_email_v2", "checksum": {"name": "sha256", "checksum": "40e130fab70745abfb81f8d6da705dc2b185aa1d647cbe18d7d1cba7911d9bec"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.8300993, "relation_name": "cleansed.bq_archive.am_usage_by_instance_by_email_v2", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'am_usage_by_instance_by_email_v2') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "am_usage_by_instance_by_email_v2"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.am_usage_by_instance_by_email_v2"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/am_usage_by_instance_by_email_v2.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.am_usage_by_instance_by_email_v2", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03.sql", "original_file_path": "models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03.sql", "unique_id": "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03", "fqn": ["cleansed_bq_archive", "hob", "sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03"], "alias": "sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03", "checksum": {"name": "sha256", "checksum": "c3f4f88b6dbf48a466a74ae692f4587a3832e96be15e45b290d77d81142d6daa"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.8356, "relation_name": "cleansed.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.change_sub_type_yx_usd": {"database": "cleansed", "schema": "bq_archive", "name": "change_sub_type_yx_usd", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/change_sub_type_yx_usd.sql", "original_file_path": "models/hob/change_sub_type_yx_usd.sql", "unique_id": "model.cleansed_bq_archive.change_sub_type_yx_usd", "fqn": ["cleansed_bq_archive", "hob", "change_sub_type_yx_usd"], "alias": "change_sub_type_yx_usd", "checksum": {"name": "sha256", "checksum": "6dd899f53b5bf611549c55eb4ee59a45d3d7b2f02ca66065362a2b372b34b14e"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.8409922, "relation_name": "cleansed.bq_archive.change_sub_type_yx_usd", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'change_sub_type_yx_usd') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "change_sub_type_yx_usd"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.change_sub_type_yx_usd"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/change_sub_type_yx_usd.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.change_sub_type_yx_usd", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304": {"database": "cleansed", "schema": "bq_archive", "name": "eda_pricing_comm_zuora_202304", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_pricing_comm_zuora_202304.sql", "original_file_path": "models/hob/eda_pricing_comm_zuora_202304.sql", "unique_id": "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304", "fqn": ["cleansed_bq_archive", "hob", "eda_pricing_comm_zuora_202304"], "alias": "eda_pricing_comm_zuora_202304", "checksum": {"name": "sha256", "checksum": "0e300e526190100c52a7b3620d8c7f10dbda3c6dc8b555163035541d36f107db"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.8464012, "relation_name": "cleansed.bq_archive.eda_pricing_comm_zuora_202304", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_pricing_comm_zuora_202304') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_pricing_comm_zuora_202304"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_pricing_comm_zuora_202304.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_pricing_comm_zuora_202304", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.new_productrateplanchargetier": {"database": "cleansed", "schema": "bq_archive", "name": "new_productrateplanchargetier", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/new_productrateplanchargetier.sql", "original_file_path": "models/hob/new_productrateplanchargetier.sql", "unique_id": "model.cleansed_bq_archive.new_productrateplanchargetier", "fqn": ["cleansed_bq_archive", "hob", "new_productrateplanchargetier"], "alias": "new_productrateplanchargetier", "checksum": {"name": "sha256", "checksum": "57abdb987f6981eafab0cada43f5a98109003eb26ff2a22281f9b5bbbef2ab8b"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.8516805, "relation_name": "cleansed.bq_archive.new_productrateplanchargetier", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'new_productrateplanchargetier') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "new_productrateplanchargetier"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.new_productrateplanchargetier"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/new_productrateplanchargetier.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.new_productrateplanchargetier", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.adjusted_change_sub_type_usd": {"database": "cleansed", "schema": "bq_archive", "name": "adjusted_change_sub_type_usd", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/adjusted_change_sub_type_usd.sql", "original_file_path": "models/hob/adjusted_change_sub_type_usd.sql", "unique_id": "model.cleansed_bq_archive.adjusted_change_sub_type_usd", "fqn": ["cleansed_bq_archive", "hob", "adjusted_change_sub_type_usd"], "alias": "adjusted_change_sub_type_usd", "checksum": {"name": "sha256", "checksum": "0fd8d1b57917d7e7218a65b84a9e29b6ce3cb9d7418d3c3216860eb8b9cc735d"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.8570325, "relation_name": "cleansed.bq_archive.adjusted_change_sub_type_usd", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'adjusted_change_sub_type_usd') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "adjusted_change_sub_type_usd"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/adjusted_change_sub_type_usd.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.adjusted_change_sub_type_usd", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_bookings_reporting_2023_07_04": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_bookings_reporting_2023_07_04", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_bookings_reporting_2023_07_04.sql", "original_file_path": "models/hob/sfa_bookings_reporting_2023_07_04.sql", "unique_id": "model.cleansed_bq_archive.sfa_bookings_reporting_2023_07_04", "fqn": ["cleansed_bq_archive", "hob", "sfa_bookings_reporting_2023_07_04"], "alias": "sfa_bookings_reporting_2023_07_04", "checksum": {"name": "sha256", "checksum": "89210fd54878f8e1f45523c7c82b53dfff538c1020bea4321efdbc1bb40b560e"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.8639264, "relation_name": "cleansed.bq_archive.sfa_bookings_reporting_2023_07_04", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_bookings_reporting_2023_07_04') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_bookings_reporting_2023_07_04"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2023_07_04"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_bookings_reporting_2023_07_04.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_bookings_reporting_2023_07_04", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup_11June": {"database": "cleansed", "schema": "bq_archive", "name": "eda_pricing_comm_zuora_202304_backup_11June", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_pricing_comm_zuora_202304_backup_11June.sql", "original_file_path": "models/hob/eda_pricing_comm_zuora_202304_backup_11June.sql", "unique_id": "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup_11June", "fqn": ["cleansed_bq_archive", "hob", "eda_pricing_comm_zuora_202304_backup_11June"], "alias": "eda_pricing_comm_zuora_202304_backup_11June", "checksum": {"name": "sha256", "checksum": "29cf20dbef74f76cf4d1c0f730de088060c067ecd7219e2a4222f137fee24542"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.8695166, "relation_name": "cleansed.bq_archive.eda_pricing_comm_zuora_202304_backup_11June", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_pricing_comm_zuora_202304_backup_11June') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_pricing_comm_zuora_202304_backup_11June"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_11June"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_pricing_comm_zuora_202304_backup_11June.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_pricing_comm_zuora_202304_backup_11June", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_hob__yoy_renewals_crm_finance_adjusted_bundled": {"database": "cleansed", "schema": "bq_archive", "name": "eda_hob__yoy_renewals_crm_finance_adjusted_bundled", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_hob__yoy_renewals_crm_finance_adjusted_bundled.sql", "original_file_path": "models/hob/eda_hob__yoy_renewals_crm_finance_adjusted_bundled.sql", "unique_id": "model.cleansed_bq_archive.eda_hob__yoy_renewals_crm_finance_adjusted_bundled", "fqn": ["cleansed_bq_archive", "hob", "eda_hob__yoy_renewals_crm_finance_adjusted_bundled"], "alias": "eda_hob__yoy_renewals_crm_finance_adjusted_bundled", "checksum": {"name": "sha256", "checksum": "d0025429f7041e168a650a83110a0d8ef759c5099c2a1fcf3d9cf2fb94284a4f"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.8749087, "relation_name": "cleansed.bq_archive.eda_hob__yoy_renewals_crm_finance_adjusted_bundled", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_hob__yoy_renewals_crm_finance_adjusted_bundled') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_hob__yoy_renewals_crm_finance_adjusted_bundled"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__yoy_renewals_crm_finance_adjusted_bundled"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_hob__yoy_renewals_crm_finance_adjusted_bundled.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_hob__yoy_renewals_crm_finance_adjusted_bundled", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_hob__qtd_recurring_revenue_bundled": {"database": "cleansed", "schema": "bq_archive", "name": "eda_hob__qtd_recurring_revenue_bundled", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_hob__qtd_recurring_revenue_bundled.sql", "original_file_path": "models/hob/eda_hob__qtd_recurring_revenue_bundled.sql", "unique_id": "model.cleansed_bq_archive.eda_hob__qtd_recurring_revenue_bundled", "fqn": ["cleansed_bq_archive", "hob", "eda_hob__qtd_recurring_revenue_bundled"], "alias": "eda_hob__qtd_recurring_revenue_bundled", "checksum": {"name": "sha256", "checksum": "90e3dcac2bdf5a834a185cc534d0ae8a07484ab7a40a6e02b6973328f183587c"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.8802497, "relation_name": "cleansed.bq_archive.eda_hob__qtd_recurring_revenue_bundled", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_hob__qtd_recurring_revenue_bundled') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_hob__qtd_recurring_revenue_bundled"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_recurring_revenue_bundled"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_hob__qtd_recurring_revenue_bundled.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_hob__qtd_recurring_revenue_bundled", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_hob__never_paid_accounts": {"database": "cleansed", "schema": "bq_archive", "name": "eda_hob__never_paid_accounts", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_hob__never_paid_accounts.sql", "original_file_path": "models/hob/eda_hob__never_paid_accounts.sql", "unique_id": "model.cleansed_bq_archive.eda_hob__never_paid_accounts", "fqn": ["cleansed_bq_archive", "hob", "eda_hob__never_paid_accounts"], "alias": "eda_hob__never_paid_accounts", "checksum": {"name": "sha256", "checksum": "02edc0de19674aefc5ade27250c3a9680d6966649e77dfdc28e774610aa9a460"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.8857932, "relation_name": "cleansed.bq_archive.eda_hob__never_paid_accounts", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_hob__never_paid_accounts') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_hob__never_paid_accounts"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__never_paid_accounts"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_hob__never_paid_accounts.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_hob__never_paid_accounts", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.smoochforce_opportunityhistory_scd2": {"database": "cleansed", "schema": "bq_archive", "name": "smoochforce_opportunityhistory_scd2", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/smoochforce_opportunityhistory_scd2.sql", "original_file_path": "models/hob/smoochforce_opportunityhistory_scd2.sql", "unique_id": "model.cleansed_bq_archive.smoochforce_opportunityhistory_scd2", "fqn": ["cleansed_bq_archive", "hob", "smoochforce_opportunityhistory_scd2"], "alias": "smoochforce_opportunityhistory_scd2", "checksum": {"name": "sha256", "checksum": "56df46f6799f8cbc0ff1b221f2e78d7d9df912cee445fc391193f3dafee29ce9"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.8912125, "relation_name": "cleansed.bq_archive.smoochforce_opportunityhistory_scd2", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'smoochforce_opportunityhistory_scd2') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "smoochforce_opportunityhistory_scd2"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.smoochforce_opportunityhistory_scd2"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/smoochforce_opportunityhistory_scd2.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.smoochforce_opportunityhistory_scd2", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04.sql", "original_file_path": "models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04.sql", "unique_id": "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04", "fqn": ["cleansed_bq_archive", "hob", "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04"], "alias": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04", "checksum": {"name": "sha256", "checksum": "277b79305acff895ba9ed43e8e6c1025a716adce2d3e1346ad1a81681b4044d1"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.896635, "relation_name": "cleansed.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01.sql", "original_file_path": "models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01.sql", "unique_id": "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01", "fqn": ["cleansed_bq_archive", "hob", "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01"], "alias": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01", "checksum": {"name": "sha256", "checksum": "1d8c8a575a0c164d63139bed53edf20c51073e77dc7359f0f1c7ffe23fd71270"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.9034953, "relation_name": "cleansed.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03.sql", "original_file_path": "models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03.sql", "unique_id": "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03", "fqn": ["cleansed_bq_archive", "hob", "sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03"], "alias": "sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03", "checksum": {"name": "sha256", "checksum": "c3f93d669f464387d947b35e19663ff30854db92ffe5e6e0189317ea6dbe62f0"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.9089065, "relation_name": "cleansed.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.top10_geo_amsam": {"database": "cleansed", "schema": "bq_archive", "name": "top10_geo_amsam", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/top10_geo_amsam.sql", "original_file_path": "models/hob/top10_geo_amsam.sql", "unique_id": "model.cleansed_bq_archive.top10_geo_amsam", "fqn": ["cleansed_bq_archive", "hob", "top10_geo_amsam"], "alias": "top10_geo_amsam", "checksum": {"name": "sha256", "checksum": "1c0a3626f8a82a277f6b253048984a716b2c64e494848e8a75549fb93bee7d10"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.91427, "relation_name": "cleansed.bq_archive.top10_geo_amsam", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'top10_geo_amsam') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "top10_geo_amsam"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.top10_geo_amsam"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/top10_geo_amsam.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.top10_geo_amsam", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03.sql", "original_file_path": "models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03.sql", "unique_id": "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03", "fqn": ["cleansed_bq_archive", "hob", "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03"], "alias": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03", "checksum": {"name": "sha256", "checksum": "33a0d49219cf2d587f2e14e5a3f01926df3c04e7913dd93f9c20d7281403960f"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.9197006, "relation_name": "cleansed.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_bookings_reporting_2024_01_04": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_bookings_reporting_2024_01_04", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_bookings_reporting_2024_01_04.sql", "original_file_path": "models/hob/sfa_bookings_reporting_2024_01_04.sql", "unique_id": "model.cleansed_bq_archive.sfa_bookings_reporting_2024_01_04", "fqn": ["cleansed_bq_archive", "hob", "sfa_bookings_reporting_2024_01_04"], "alias": "sfa_bookings_reporting_2024_01_04", "checksum": {"name": "sha256", "checksum": "a2f2349091605f969bf3f82f503bf8938f1bbaf6e51adb1eb9845f46c70ce25a"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.925026, "relation_name": "cleansed.bq_archive.sfa_bookings_reporting_2024_01_04", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_bookings_reporting_2024_01_04') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_bookings_reporting_2024_01_04"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_01_04"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_bookings_reporting_2024_01_04.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_bookings_reporting_2024_01_04", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.cohort_point_in_time": {"database": "cleansed", "schema": "bq_archive", "name": "cohort_point_in_time", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/cohort_point_in_time.sql", "original_file_path": "models/hob/cohort_point_in_time.sql", "unique_id": "model.cleansed_bq_archive.cohort_point_in_time", "fqn": ["cleansed_bq_archive", "hob", "cohort_point_in_time"], "alias": "cohort_point_in_time", "checksum": {"name": "sha256", "checksum": "68cc66ba27048c4033c317472e41da9314df344b2164947675a2915256174468"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.9302864, "relation_name": "cleansed.bq_archive.cohort_point_in_time", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'cohort_point_in_time') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "cohort_point_in_time"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.cohort_point_in_time"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/cohort_point_in_time.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.cohort_point_in_time", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.smoochforce_opportunity_scd2": {"database": "cleansed", "schema": "bq_archive", "name": "smoochforce_opportunity_scd2", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/smoochforce_opportunity_scd2.sql", "original_file_path": "models/hob/smoochforce_opportunity_scd2.sql", "unique_id": "model.cleansed_bq_archive.smoochforce_opportunity_scd2", "fqn": ["cleansed_bq_archive", "hob", "smoochforce_opportunity_scd2"], "alias": "smoochforce_opportunity_scd2", "checksum": {"name": "sha256", "checksum": "b5c07286aa062a9c8fb6ced50c4e7894016fa5f455dc9b91eccf878c8a2f2c31"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.935454, "relation_name": "cleansed.bq_archive.smoochforce_opportunity_scd2", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'smoochforce_opportunity_scd2') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "smoochforce_opportunity_scd2"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.smoochforce_opportunity_scd2"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/smoochforce_opportunity_scd2.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.smoochforce_opportunity_scd2", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_hob__qtd_renewals_crm_finance_adjusted_bundled": {"database": "cleansed", "schema": "bq_archive", "name": "eda_hob__qtd_renewals_crm_finance_adjusted_bundled", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_hob__qtd_renewals_crm_finance_adjusted_bundled.sql", "original_file_path": "models/hob/eda_hob__qtd_renewals_crm_finance_adjusted_bundled.sql", "unique_id": "model.cleansed_bq_archive.eda_hob__qtd_renewals_crm_finance_adjusted_bundled", "fqn": ["cleansed_bq_archive", "hob", "eda_hob__qtd_renewals_crm_finance_adjusted_bundled"], "alias": "eda_hob__qtd_renewals_crm_finance_adjusted_bundled", "checksum": {"name": "sha256", "checksum": "7b3e1e2fe36e50563b991de499eb8d95553159c692aa341821642210cde71f2a"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.9423423, "relation_name": "cleansed.bq_archive.eda_hob__qtd_renewals_crm_finance_adjusted_bundled", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_hob__qtd_renewals_crm_finance_adjusted_bundled') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_hob__qtd_renewals_crm_finance_adjusted_bundled"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_renewals_crm_finance_adjusted_bundled"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_hob__qtd_renewals_crm_finance_adjusted_bundled.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_hob__qtd_renewals_crm_finance_adjusted_bundled", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02.sql", "original_file_path": "models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02.sql", "unique_id": "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02", "fqn": ["cleansed_bq_archive", "hob", "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02"], "alias": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02", "checksum": {"name": "sha256", "checksum": "f2477cdff0802119abcdd8bcb9a9ea59e2b98018f31709a633b3ac2d84b18cf5"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.947822, "relation_name": "cleansed.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_hob__crm_dim": {"database": "cleansed", "schema": "bq_archive", "name": "eda_hob__crm_dim", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_hob__crm_dim.sql", "original_file_path": "models/hob/eda_hob__crm_dim.sql", "unique_id": "model.cleansed_bq_archive.eda_hob__crm_dim", "fqn": ["cleansed_bq_archive", "hob", "eda_hob__crm_dim"], "alias": "eda_hob__crm_dim", "checksum": {"name": "sha256", "checksum": "20140060f94c457f7c5fedef5270bbcfa9b264b3646b9da5578bc152cb0c6edd"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.9532392, "relation_name": "cleansed.bq_archive.eda_hob__crm_dim", "raw_code": "select * \nfrom {{ source('bq_archive_objects', 'eda_hob__crm_dim') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_hob__crm_dim"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__crm_dim"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_hob__crm_dim.sql", "compiled": true, "compiled_code": "select * \nfrom raw.bq_archive.eda_hob__crm_dim", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.p0_master_dashboard_crm": {"database": "cleansed", "schema": "bq_archive", "name": "p0_master_dashboard_crm", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/p0_master_dashboard_crm.sql", "original_file_path": "models/hob/p0_master_dashboard_crm.sql", "unique_id": "model.cleansed_bq_archive.p0_master_dashboard_crm", "fqn": ["cleansed_bq_archive", "hob", "p0_master_dashboard_crm"], "alias": "p0_master_dashboard_crm", "checksum": {"name": "sha256", "checksum": "01849691f80dae4586f7c3641b73d7162cf06d5061c21c207a42f9669f973b6d"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.9585757, "relation_name": "cleansed.bq_archive.p0_master_dashboard_crm", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'p0_master_dashboard_crm') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "p0_master_dashboard_crm"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.p0_master_dashboard_crm"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/p0_master_dashboard_crm.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.p0_master_dashboard_crm", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_hob__crm_pro_forma_market_segment_previous_versions": {"database": "cleansed", "schema": "bq_archive", "name": "eda_hob__crm_pro_forma_market_segment_previous_versions", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_hob__crm_pro_forma_market_segment_previous_versions.sql", "original_file_path": "models/hob/eda_hob__crm_pro_forma_market_segment_previous_versions.sql", "unique_id": "model.cleansed_bq_archive.eda_hob__crm_pro_forma_market_segment_previous_versions", "fqn": ["cleansed_bq_archive", "hob", "eda_hob__crm_pro_forma_market_segment_previous_versions"], "alias": "eda_hob__crm_pro_forma_market_segment_previous_versions", "checksum": {"name": "sha256", "checksum": "204b50a7b825aa8fce36b4a1c316c53a5ce498aa6727a32204646efed0f8e54a"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.963665, "relation_name": "cleansed.bq_archive.eda_hob__crm_pro_forma_market_segment_previous_versions", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_hob__crm_pro_forma_market_segment_previous_versions') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_hob__crm_pro_forma_market_segment_previous_versions"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__crm_pro_forma_market_segment_previous_versions"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_hob__crm_pro_forma_market_segment_previous_versions.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_hob__crm_pro_forma_market_segment_previous_versions", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.p0_master_dashboard": {"database": "cleansed", "schema": "bq_archive", "name": "p0_master_dashboard", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/p0_master_dashboard.sql", "original_file_path": "models/hob/p0_master_dashboard.sql", "unique_id": "model.cleansed_bq_archive.p0_master_dashboard", "fqn": ["cleansed_bq_archive", "hob", "p0_master_dashboard"], "alias": "p0_master_dashboard", "checksum": {"name": "sha256", "checksum": "023534706f6119f096d685bf822e8c4c40cb7faf7ce14dbaede917978be3c9c4"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.9689183, "relation_name": "cleansed.bq_archive.p0_master_dashboard", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'p0_master_dashboard') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "p0_master_dashboard"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.p0_master_dashboard"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/p0_master_dashboard.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.p0_master_dashboard", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sam_daily_usage": {"database": "cleansed", "schema": "bq_archive", "name": "sam_daily_usage", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sam_daily_usage.sql", "original_file_path": "models/hob/sam_daily_usage.sql", "unique_id": "model.cleansed_bq_archive.sam_daily_usage", "fqn": ["cleansed_bq_archive", "hob", "sam_daily_usage"], "alias": "sam_daily_usage", "checksum": {"name": "sha256", "checksum": "67e6561b20e630adee24a24cd7f0320b2493b46b762179784accd5ca83edb741"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.9757402, "relation_name": "cleansed.bq_archive.sam_daily_usage", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sam_daily_usage') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sam_daily_usage"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sam_daily_usage"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sam_daily_usage.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sam_daily_usage", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_hob__curated_user": {"database": "cleansed", "schema": "bq_archive", "name": "eda_hob__curated_user", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_hob__curated_user.sql", "original_file_path": "models/hob/eda_hob__curated_user.sql", "unique_id": "model.cleansed_bq_archive.eda_hob__curated_user", "fqn": ["cleansed_bq_archive", "hob", "eda_hob__curated_user"], "alias": "eda_hob__curated_user", "checksum": {"name": "sha256", "checksum": "231e5d7d14a1f047f91f7c11b27690984b93a14e81660e26316398fc79519923"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.9810498, "relation_name": "cleansed.bq_archive.eda_hob__curated_user", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_hob__curated_user') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_hob__curated_user"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__curated_user"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_hob__curated_user.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_hob__curated_user", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup_31May": {"database": "cleansed", "schema": "bq_archive", "name": "eda_pricing_comm_zuora_202304_backup_31May", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_pricing_comm_zuora_202304_backup_31May.sql", "original_file_path": "models/hob/eda_pricing_comm_zuora_202304_backup_31May.sql", "unique_id": "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup_31May", "fqn": ["cleansed_bq_archive", "hob", "eda_pricing_comm_zuora_202304_backup_31May"], "alias": "eda_pricing_comm_zuora_202304_backup_31May", "checksum": {"name": "sha256", "checksum": "cb3eed6bb4af75b7168a112598392388625989df8c2b7f9cccf6568130409823"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.9863484, "relation_name": "cleansed.bq_archive.eda_pricing_comm_zuora_202304_backup_31May", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_pricing_comm_zuora_202304_backup_31May') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_pricing_comm_zuora_202304_backup_31May"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_31May"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_pricing_comm_zuora_202304_backup_31May.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_pricing_comm_zuora_202304_backup_31May", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_hob__yoy_renewals_product_finance_adjusted_bundled": {"database": "cleansed", "schema": "bq_archive", "name": "eda_hob__yoy_renewals_product_finance_adjusted_bundled", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_hob__yoy_renewals_product_finance_adjusted_bundled.sql", "original_file_path": "models/hob/eda_hob__yoy_renewals_product_finance_adjusted_bundled.sql", "unique_id": "model.cleansed_bq_archive.eda_hob__yoy_renewals_product_finance_adjusted_bundled", "fqn": ["cleansed_bq_archive", "hob", "eda_hob__yoy_renewals_product_finance_adjusted_bundled"], "alias": "eda_hob__yoy_renewals_product_finance_adjusted_bundled", "checksum": {"name": "sha256", "checksum": "d00bae00fc5f73216acf63c0db1c3b9ec9c0535e11258e79e1fe8e0f13232baa"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.9914868, "relation_name": "cleansed.bq_archive.eda_hob__yoy_renewals_product_finance_adjusted_bundled", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_hob__yoy_renewals_product_finance_adjusted_bundled') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_hob__yoy_renewals_product_finance_adjusted_bundled"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__yoy_renewals_product_finance_adjusted_bundled"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_hob__yoy_renewals_product_finance_adjusted_bundled.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_hob__yoy_renewals_product_finance_adjusted_bundled", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sell_core_accounts": {"database": "cleansed", "schema": "bq_archive", "name": "sell_core_accounts", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sell_core_accounts.sql", "original_file_path": "models/hob/sell_core_accounts.sql", "unique_id": "model.cleansed_bq_archive.sell_core_accounts", "fqn": ["cleansed_bq_archive", "hob", "sell_core_accounts"], "alias": "sell_core_accounts", "checksum": {"name": "sha256", "checksum": "3bf9d4c5639e29f3b39bc54662bf609377acacfd15659c12ac5a5fc560dae022"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557618.9968262, "relation_name": "cleansed.bq_archive.sell_core_accounts", "raw_code": "select * \nfrom {{ source('bq_archive_objects', 'sell_core_accounts') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sell_core_accounts"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sell_core_accounts"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sell_core_accounts.sql", "compiled": true, "compiled_code": "select * \nfrom raw.bq_archive.sell_core_accounts", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02": {"database": "cleansed", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02.sql", "original_file_path": "models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02.sql", "unique_id": "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02", "fqn": ["cleansed_bq_archive", "hob", "sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02"], "alias": "sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02", "checksum": {"name": "sha256", "checksum": "bb0953d8b7dd30975a4ad32a708d4154af6a5041c1a3d8ae5c5791b5568f6ae2"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557619.0021918, "relation_name": "cleansed.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_01_06": {"database": "cleansed", "schema": "bq_archive", "name": "adjusted_change_sub_type_usd_2025_01_06", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/adjusted_change_sub_type_usd_2025_01_06.sql", "original_file_path": "models/hob/adjusted_change_sub_type_usd_2025_01_06.sql", "unique_id": "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_01_06", "fqn": ["cleansed_bq_archive", "hob", "adjusted_change_sub_type_usd_2025_01_06"], "alias": "adjusted_change_sub_type_usd_2025_01_06", "checksum": {"name": "sha256", "checksum": "0322c9b73a9d74a9b87cc3bec1a74be74ae12f103acf2a3c1e604f5f258288a6"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557619.0075495, "relation_name": "cleansed.bq_archive.adjusted_change_sub_type_usd_2025_01_06", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'adjusted_change_sub_type_usd_2025_01_06') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "adjusted_change_sub_type_usd_2025_01_06"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_01_06"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/adjusted_change_sub_type_usd_2025_01_06.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.adjusted_change_sub_type_usd_2025_01_06", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.eda_hob__customer_age_bundled": {"database": "cleansed", "schema": "bq_archive", "name": "eda_hob__customer_age_bundled", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "hob/eda_hob__customer_age_bundled.sql", "original_file_path": "models/hob/eda_hob__customer_age_bundled.sql", "unique_id": "model.cleansed_bq_archive.eda_hob__customer_age_bundled", "fqn": ["cleansed_bq_archive", "hob", "eda_hob__customer_age_bundled"], "alias": "eda_hob__customer_age_bundled", "checksum": {"name": "sha256", "checksum": "51bbbb0e1fc347efb94c034b393a3b596b880f2640d48f1348ac4c71ad45da7d"}, "config": {"enabled": true, "alias": null, "schema": "bq_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_archive"}, "created_at": 1746557619.0144112, "relation_name": "cleansed.bq_archive.eda_hob__customer_age_bundled", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'eda_hob__customer_age_bundled') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "eda_hob__customer_age_bundled"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__customer_age_bundled"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/hob/eda_hob__customer_age_bundled.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.eda_hob__customer_age_bundled", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.GTM_top_10_omnichannel_routing_edw_copy": {"database": "cleansed", "schema": "bq_product_archive", "name": "GTM_top_10_omnichannel_routing_edw_copy", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/GTM_top_10_omnichannel_routing_edw_copy.sql", "original_file_path": "models/product/GTM_top_10_omnichannel_routing_edw_copy.sql", "unique_id": "model.cleansed_bq_archive.GTM_top_10_omnichannel_routing_edw_copy", "fqn": ["cleansed_bq_archive", "product", "GTM_top_10_omnichannel_routing_edw_copy"], "alias": "GTM_top_10_omnichannel_routing_edw_copy", "checksum": {"name": "sha256", "checksum": "71ca23bf910a5c3eab80a9bc2363c50cbe833749d656881ea8928754a493cfd2"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.0195765, "relation_name": "cleansed.bq_product_archive.GTM_top_10_omnichannel_routing_edw_copy", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'GTM_top_10_omnichannel_routing_edw_copy') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "GTM_top_10_omnichannel_routing_edw_copy"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.GTM_top_10_omnichannel_routing_edw_copy"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/GTM_top_10_omnichannel_routing_edw_copy.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.GTM_top_10_omnichannel_routing_edw_copy", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.product_data_ml_usage_frontend_events": {"database": "cleansed", "schema": "bq_product_archive", "name": "product_data_ml_usage_frontend_events", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/product_data_ml_usage_frontend_events.sql", "original_file_path": "models/product/product_data_ml_usage_frontend_events.sql", "unique_id": "model.cleansed_bq_archive.product_data_ml_usage_frontend_events", "fqn": ["cleansed_bq_archive", "product", "product_data_ml_usage_frontend_events"], "alias": "product_data_ml_usage_frontend_events", "checksum": {"name": "sha256", "checksum": "34dca0735a773d722063be9edee5deeb16ae04278b2e64389fcf86eaf6eb793d"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.024989, "relation_name": "cleansed.bq_product_archive.product_data_ml_usage_frontend_events", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'product_data_ml_usage_frontend_events') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "product_data_ml_usage_frontend_events"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.product_data_ml_usage_frontend_events"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/product_data_ml_usage_frontend_events.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.product_data_ml_usage_frontend_events", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.pendo__garden_reporting": {"database": "cleansed", "schema": "bq_product_archive", "name": "pendo__garden_reporting", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/pendo__garden_reporting.sql", "original_file_path": "models/product/pendo__garden_reporting.sql", "unique_id": "model.cleansed_bq_archive.pendo__garden_reporting", "fqn": ["cleansed_bq_archive", "product", "pendo__garden_reporting"], "alias": "pendo__garden_reporting", "checksum": {"name": "sha256", "checksum": "5298a1a1e2dec30d3971e51ea7330056625d1d9208d075dc738d4ff6a81b205a"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.030488, "relation_name": "cleansed.bq_product_archive.pendo__garden_reporting", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'pendo__garden_reporting_jan_22_fw') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "pendo__garden_reporting_jan_22_fw"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.pendo__garden_reporting_jan_22_fw"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/pendo__garden_reporting.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.pendo__garden_reporting_jan_22_fw", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.tfa_weighted_sunshine_conversations": {"database": "cleansed", "schema": "bq_product_archive", "name": "tfa_weighted_sunshine_conversations", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/tfa_weighted_sunshine_conversations.sql", "original_file_path": "models/product/tfa_weighted_sunshine_conversations.sql", "unique_id": "model.cleansed_bq_archive.tfa_weighted_sunshine_conversations", "fqn": ["cleansed_bq_archive", "product", "tfa_weighted_sunshine_conversations"], "alias": "tfa_weighted_sunshine_conversations", "checksum": {"name": "sha256", "checksum": "72f4f3c94f1600d2fbe6558a7f1e9bebbdac74e1b671255ac7067efca9b3a5ba"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.0358448, "relation_name": "cleansed.bq_product_archive.tfa_weighted_sunshine_conversations", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'tfa_weighted_sunshine_conversations') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "tfa_weighted_sunshine_conversations"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_sunshine_conversations"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/tfa_weighted_sunshine_conversations.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.tfa_weighted_sunshine_conversations", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.product_data_flow_director_conversations_activity": {"database": "cleansed", "schema": "bq_product_archive", "name": "product_data_flow_director_conversations_activity", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/product_data_flow_director_conversations_activity.sql", "original_file_path": "models/product/product_data_flow_director_conversations_activity.sql", "unique_id": "model.cleansed_bq_archive.product_data_flow_director_conversations_activity", "fqn": ["cleansed_bq_archive", "product", "product_data_flow_director_conversations_activity"], "alias": "product_data_flow_director_conversations_activity", "checksum": {"name": "sha256", "checksum": "7f5dc2f04ad8231f20b9e68d17068273fa908b4362f3975aca81f043c1a79110"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.041221, "relation_name": "cleansed.bq_product_archive.product_data_flow_director_conversations_activity", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'product_data_flow_director_conversations_activity') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "product_data_flow_director_conversations_activity"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.product_data_flow_director_conversations_activity"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/product_data_flow_director_conversations_activity.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.product_data_flow_director_conversations_activity", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.ex_usage_us_02_28_2025": {"database": "cleansed", "schema": "bq_product_archive", "name": "ex_usage_us_02_28_2025", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/ex_usage_us_02_28_2025.sql", "original_file_path": "models/product/ex_usage_us_02_28_2025.sql", "unique_id": "model.cleansed_bq_archive.ex_usage_us_02_28_2025", "fqn": ["cleansed_bq_archive", "product", "ex_usage_us_02_28_2025"], "alias": "ex_usage_us_02_28_2025", "checksum": {"name": "sha256", "checksum": "7808c372a74228daa4854438d87eb42095226bb1f58eddf8d7bb3a98312eebc9"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.0463448, "relation_name": "cleansed.bq_product_archive.ex_usage_us_02_28_2025", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'ex_usage_us_02_28_2025') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "ex_usage_us_02_28_2025"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.ex_usage_us_02_28_2025"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/ex_usage_us_02_28_2025.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.ex_usage_us_02_28_2025", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.product_data_generative_answers": {"database": "cleansed", "schema": "bq_product_archive", "name": "product_data_generative_answers", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/product_data_generative_answers.sql", "original_file_path": "models/product/product_data_generative_answers.sql", "unique_id": "model.cleansed_bq_archive.product_data_generative_answers", "fqn": ["cleansed_bq_archive", "product", "product_data_generative_answers"], "alias": "product_data_generative_answers", "checksum": {"name": "sha256", "checksum": "8fc38d944223e05b71d5c279e83378e2ef2a4516be9d0f605164e7c0b2ed3bb2"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.0536814, "relation_name": "cleansed.bq_product_archive.product_data_generative_answers", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'product_data_generative_answers') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "product_data_generative_answers"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.product_data_generative_answers"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/product_data_generative_answers.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.product_data_generative_answers", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.all_instance_provisioned_and_active_agents": {"database": "cleansed", "schema": "bq_product_archive", "name": "all_instance_provisioned_and_active_agents", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/all_instance_provisioned_and_active_agents.sql", "original_file_path": "models/product/all_instance_provisioned_and_active_agents.sql", "unique_id": "model.cleansed_bq_archive.all_instance_provisioned_and_active_agents", "fqn": ["cleansed_bq_archive", "product", "all_instance_provisioned_and_active_agents"], "alias": "all_instance_provisioned_and_active_agents", "checksum": {"name": "sha256", "checksum": "a1976c4311d065a7786343548e30bc8a5140452dcf13631554c44539bc5c4837"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.059266, "relation_name": "cleansed.bq_product_archive.all_instance_provisioned_and_active_agents", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'all_instance_provisioned_and_active_agents') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "all_instance_provisioned_and_active_agents"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.all_instance_provisioned_and_active_agents"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/all_instance_provisioned_and_active_agents.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.all_instance_provisioned_and_active_agents", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.dlc_ola_policies": {"database": "cleansed", "schema": "bq_product_archive", "name": "dlc_ola_policies", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/dlc_ola_policies.sql", "original_file_path": "models/product/dlc_ola_policies.sql", "unique_id": "model.cleansed_bq_archive.dlc_ola_policies", "fqn": ["cleansed_bq_archive", "product", "dlc_ola_policies"], "alias": "dlc_ola_policies", "checksum": {"name": "sha256", "checksum": "5702e177ebeb76e9e54523f4945195d9a7cf38dccc06eae91079f3c3a335b603"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.0647166, "relation_name": "cleansed.bq_product_archive.dlc_ola_policies", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'dlc_ola_policies') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "dlc_ola_policies"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.dlc_ola_policies"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/dlc_ola_policies.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.dlc_ola_policies", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.product_data_sla_ticket_policies": {"database": "cleansed", "schema": "bq_product_archive", "name": "product_data_sla_ticket_policies", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/product_data_sla_ticket_policies.sql", "original_file_path": "models/product/product_data_sla_ticket_policies.sql", "unique_id": "model.cleansed_bq_archive.product_data_sla_ticket_policies", "fqn": ["cleansed_bq_archive", "product", "product_data_sla_ticket_policies"], "alias": "product_data_sla_ticket_policies", "checksum": {"name": "sha256", "checksum": "d204ad50c1a197907f7c725a59e96e7ac8fe081bbf567e642a1c3496cb1e8868"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.0701973, "relation_name": "cleansed.bq_product_archive.product_data_sla_ticket_policies", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'product_data_sla_ticket_policies') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "product_data_sla_ticket_policies"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.product_data_sla_ticket_policies"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/product_data_sla_ticket_policies.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.product_data_sla_ticket_policies", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.product_data_machine_learning_triage_deflections": {"database": "cleansed", "schema": "bq_product_archive", "name": "product_data_machine_learning_triage_deflections", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/product_data_machine_learning_triage_deflections.sql", "original_file_path": "models/product/product_data_machine_learning_triage_deflections.sql", "unique_id": "model.cleansed_bq_archive.product_data_machine_learning_triage_deflections", "fqn": ["cleansed_bq_archive", "product", "product_data_machine_learning_triage_deflections"], "alias": "product_data_machine_learning_triage_deflections", "checksum": {"name": "sha256", "checksum": "fd7ef7a698cb4891bdddc42f36bdb77e8ff5233d60aa4fec6180018972c48488"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.0754726, "relation_name": "cleansed.bq_product_archive.product_data_machine_learning_triage_deflections", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'product_data_machine_learning_triage_deflections') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "product_data_machine_learning_triage_deflections"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.product_data_machine_learning_triage_deflections"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/product_data_machine_learning_triage_deflections.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.product_data_machine_learning_triage_deflections", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.rules": {"database": "cleansed", "schema": "bq_product_archive", "name": "rules", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/rules.sql", "original_file_path": "models/product/rules.sql", "unique_id": "model.cleansed_bq_archive.rules", "fqn": ["cleansed_bq_archive", "product", "rules"], "alias": "rules", "checksum": {"name": "sha256", "checksum": "e8d910bbbfc7adf8d7f689f06c286121718c530bdd0a6222faa9c2304eea0907"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.0809114, "relation_name": "cleansed.bq_product_archive.rules", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'rules') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "rules"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.rules"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/rules.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.rules", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.tfa_weighted_sell": {"database": "cleansed", "schema": "bq_product_archive", "name": "tfa_weighted_sell", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/tfa_weighted_sell.sql", "original_file_path": "models/product/tfa_weighted_sell.sql", "unique_id": "model.cleansed_bq_archive.tfa_weighted_sell", "fqn": ["cleansed_bq_archive", "product", "tfa_weighted_sell"], "alias": "tfa_weighted_sell", "checksum": {"name": "sha256", "checksum": "1434f92e79886d473b8f40e64a07edd28aeb9871987fe5d3f9235f13c194f297"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.0879362, "relation_name": "cleansed.bq_product_archive.tfa_weighted_sell", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'tfa_weighted_sell') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "tfa_weighted_sell"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_sell"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/tfa_weighted_sell.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.tfa_weighted_sell", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.layout_builder_service_layouts": {"database": "cleansed", "schema": "bq_product_archive", "name": "layout_builder_service_layouts", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/layout_builder_service_layouts.sql", "original_file_path": "models/product/layout_builder_service_layouts.sql", "unique_id": "model.cleansed_bq_archive.layout_builder_service_layouts", "fqn": ["cleansed_bq_archive", "product", "layout_builder_service_layouts"], "alias": "layout_builder_service_layouts", "checksum": {"name": "sha256", "checksum": "d4805f1d94fc149ad883e9165e992913a2182b9f44e9cbb036f4f2da0a654eca"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.0933878, "relation_name": "cleansed.bq_product_archive.layout_builder_service_layouts", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'layout_builder_service_layouts') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "layout_builder_service_layouts"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.layout_builder_service_layouts"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/layout_builder_service_layouts.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.layout_builder_service_layouts", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.accounts_settings": {"database": "cleansed", "schema": "bq_product_archive", "name": "accounts_settings", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/accounts_settings.sql", "original_file_path": "models/product/accounts_settings.sql", "unique_id": "model.cleansed_bq_archive.accounts_settings", "fqn": ["cleansed_bq_archive", "product", "accounts_settings"], "alias": "accounts_settings", "checksum": {"name": "sha256", "checksum": "1783159893473897999fec0305a5170f2037338598d42fbd089deb0657d4ed61"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.0989048, "relation_name": "cleansed.bq_product_archive.accounts_settings", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'accounts_settings') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "accounts_settings"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.accounts_settings"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/accounts_settings.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.accounts_settings", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.feature_tables_tickets_backfill": {"database": "cleansed", "schema": "bq_product_archive", "name": "feature_tables_tickets_backfill", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/feature_tables_tickets_backfill.sql", "original_file_path": "models/product/feature_tables_tickets_backfill.sql", "unique_id": "model.cleansed_bq_archive.feature_tables_tickets_backfill", "fqn": ["cleansed_bq_archive", "product", "feature_tables_tickets_backfill"], "alias": "feature_tables_tickets_backfill", "checksum": {"name": "sha256", "checksum": "921c0d9762068f9d1a2b0c9ddf541d9f9f4b8927575d329afcd3e09d30155426"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.1041832, "relation_name": "cleansed.bq_product_archive.feature_tables_tickets_backfill", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'feature_tables_tickets_backfill') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "feature_tables_tickets_backfill"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.feature_tables_tickets_backfill"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/feature_tables_tickets_backfill.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.feature_tables_tickets_backfill", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.dip_athena_data_lake_sunshine_conversations_pda_m_created": {"database": "cleansed", "schema": "bq_product_archive", "name": "dip_athena_data_lake_sunshine_conversations_pda_m_created", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/dip_athena_data_lake_sunshine_conversations_pda_m_created.sql", "original_file_path": "models/product/dip_athena_data_lake_sunshine_conversations_pda_m_created.sql", "unique_id": "model.cleansed_bq_archive.dip_athena_data_lake_sunshine_conversations_pda_m_created", "fqn": ["cleansed_bq_archive", "product", "dip_athena_data_lake_sunshine_conversations_pda_m_created"], "alias": "dip_athena_data_lake_sunshine_conversations_pda_m_created", "checksum": {"name": "sha256", "checksum": "544ba01b99bfaa0fef9456dd9cbcff7e2beef6c5d1243f810f10fa32ea20a2ab"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.109618, "relation_name": "cleansed.bq_product_archive.dip_athena_data_lake_sunshine_conversations_pda_m_created", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'dip_athena_data_lake_sunshine_conversations_pda_m_created') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "dip_athena_data_lake_sunshine_conversations_pda_m_created"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.dip_athena_data_lake_sunshine_conversations_pda_m_created"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/dip_athena_data_lake_sunshine_conversations_pda_m_created.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.dip_athena_data_lake_sunshine_conversations_pda_m_created", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.product_data_mcs_feedback": {"database": "cleansed", "schema": "bq_product_archive", "name": "product_data_mcs_feedback", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/product_data_mcs_feedback.sql", "original_file_path": "models/product/product_data_mcs_feedback.sql", "unique_id": "model.cleansed_bq_archive.product_data_mcs_feedback", "fqn": ["cleansed_bq_archive", "product", "product_data_mcs_feedback"], "alias": "product_data_mcs_feedback", "checksum": {"name": "sha256", "checksum": "ae6ba177fb412a1259f671a4f6c91e23d57228075c161391fad3fbdc01f5643b"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.115057, "relation_name": "cleansed.bq_product_archive.product_data_mcs_feedback", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'product_data_mcs_feedback') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "product_data_mcs_feedback"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.product_data_mcs_feedback"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/product_data_mcs_feedback.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.product_data_mcs_feedback", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.lynx_machine_learning_usage_llm_features": {"database": "cleansed", "schema": "bq_product_archive", "name": "lynx_machine_learning_usage_llm_features", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/lynx_machine_learning_usage_llm_features.sql", "original_file_path": "models/product/lynx_machine_learning_usage_llm_features.sql", "unique_id": "model.cleansed_bq_archive.lynx_machine_learning_usage_llm_features", "fqn": ["cleansed_bq_archive", "product", "lynx_machine_learning_usage_llm_features"], "alias": "lynx_machine_learning_usage_llm_features", "checksum": {"name": "sha256", "checksum": "bec51190d35b8407447b35497a1ad98496888540fc95ed7926b67e8e6e1f75b6"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.1205838, "relation_name": "cleansed.bq_product_archive.lynx_machine_learning_usage_llm_features", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'lynx_machine_learning_usage_llm_features') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "lynx_machine_learning_usage_llm_features"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.lynx_machine_learning_usage_llm_features"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/lynx_machine_learning_usage_llm_features.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.lynx_machine_learning_usage_llm_features", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.account_dashboard_master": {"database": "cleansed", "schema": "bq_product_archive", "name": "account_dashboard_master", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/account_dashboard_master.sql", "original_file_path": "models/product/account_dashboard_master.sql", "unique_id": "model.cleansed_bq_archive.account_dashboard_master", "fqn": ["cleansed_bq_archive", "product", "account_dashboard_master"], "alias": "account_dashboard_master", "checksum": {"name": "sha256", "checksum": "c3149f3cc97acda910966f2f8349d6f38216e346015a18df0bbd926967db82fe"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.1276538, "relation_name": "cleansed.bq_product_archive.account_dashboard_master", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'account_dashboard_master') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "account_dashboard_master"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.account_dashboard_master"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/account_dashboard_master.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.account_dashboard_master", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.dip_athena_product_data_flow_director_conversations_activity": {"database": "cleansed", "schema": "bq_product_archive", "name": "dip_athena_product_data_flow_director_conversations_activity", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/dip_athena_product_data_flow_director_conversations_activity.sql", "original_file_path": "models/product/dip_athena_product_data_flow_director_conversations_activity.sql", "unique_id": "model.cleansed_bq_archive.dip_athena_product_data_flow_director_conversations_activity", "fqn": ["cleansed_bq_archive", "product", "dip_athena_product_data_flow_director_conversations_activity"], "alias": "dip_athena_product_data_flow_director_conversations_activity", "checksum": {"name": "sha256", "checksum": "485556dcf6ed3e780eb21e16ebcde2a12a0e2cce0cada22c34077077d0f52c4a"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.1330688, "relation_name": "cleansed.bq_product_archive.dip_athena_product_data_flow_director_conversations_activity", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'dip_athena_product_data_flow_director_conversations_activity') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "dip_athena_product_data_flow_director_conversations_activity"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.dip_athena_product_data_flow_director_conversations_activity"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/dip_athena_product_data_flow_director_conversations_activity.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.dip_athena_product_data_flow_director_conversations_activity", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.ticket_deflections_events": {"database": "cleansed", "schema": "bq_product_archive", "name": "ticket_deflections_events", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/ticket_deflections_events.sql", "original_file_path": "models/product/ticket_deflections_events.sql", "unique_id": "model.cleansed_bq_archive.ticket_deflections_events", "fqn": ["cleansed_bq_archive", "product", "ticket_deflections_events"], "alias": "ticket_deflections_events", "checksum": {"name": "sha256", "checksum": "2c1de438a14b848a483bb275bf358bdc361144d06bf3683277598d5062f14b8d"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.1385362, "relation_name": "cleansed.bq_product_archive.ticket_deflections_events", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'ticket_deflections_events') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "ticket_deflections_events"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.ticket_deflections_events"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/ticket_deflections_events.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.ticket_deflections_events", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.data_lake_classic_webhooks": {"database": "cleansed", "schema": "bq_product_archive", "name": "data_lake_classic_webhooks", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/data_lake_classic_webhooks.sql", "original_file_path": "models/product/data_lake_classic_webhooks.sql", "unique_id": "model.cleansed_bq_archive.data_lake_classic_webhooks", "fqn": ["cleansed_bq_archive", "product", "data_lake_classic_webhooks"], "alias": "data_lake_classic_webhooks", "checksum": {"name": "sha256", "checksum": "438803178d0e00bfe71cfbac432427d844382346f9b60d631a70b9626a044d86"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.144056, "relation_name": "cleansed.bq_product_archive.data_lake_classic_webhooks", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'data_lake_classic_webhooks') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "data_lake_classic_webhooks"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.data_lake_classic_webhooks"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/data_lake_classic_webhooks.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.data_lake_classic_webhooks", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.dlc_custom_objects": {"database": "cleansed", "schema": "bq_product_archive", "name": "dlc_custom_objects", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/dlc_custom_objects.sql", "original_file_path": "models/product/dlc_custom_objects.sql", "unique_id": "model.cleansed_bq_archive.dlc_custom_objects", "fqn": ["cleansed_bq_archive", "product", "dlc_custom_objects"], "alias": "dlc_custom_objects", "checksum": {"name": "sha256", "checksum": "d323ae89e1ed3b65d09c1c98ed53d6f4b9ddd9f17a4d020ac95640d31189fa97"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.1495438, "relation_name": "cleansed.bq_product_archive.dlc_custom_objects", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'dlc_custom_objects') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "dlc_custom_objects"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.dlc_custom_objects"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/dlc_custom_objects.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.dlc_custom_objects", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.roles": {"database": "cleansed", "schema": "bq_product_archive", "name": "roles", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/roles.sql", "original_file_path": "models/product/roles.sql", "unique_id": "model.cleansed_bq_archive.roles", "fqn": ["cleansed_bq_archive", "product", "roles"], "alias": "roles", "checksum": {"name": "sha256", "checksum": "8f50c73dac02bdda66181b67a35e5cbe7ca8f214ec99ea26191e4803627ce696"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.1549516, "relation_name": "cleansed.bq_product_archive.roles", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'roles') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "roles"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.roles"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/roles.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.roles", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.ex_customer_base": {"database": "cleansed", "schema": "bq_product_archive", "name": "ex_customer_base", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/ex_customer_base.sql", "original_file_path": "models/product/ex_customer_base.sql", "unique_id": "model.cleansed_bq_archive.ex_customer_base", "fqn": ["cleansed_bq_archive", "product", "ex_customer_base"], "alias": "ex_customer_base", "checksum": {"name": "sha256", "checksum": "6d3da696cf7037e13e4f78ecef493607e6e9541ad10b1486a87fd717c69ca563"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.1601784, "relation_name": "cleansed.bq_product_archive.ex_customer_base", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'ex_customer_base') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "ex_customer_base"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.ex_customer_base"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/ex_customer_base.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.ex_customer_base", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.dip_athena_data_lake_sunshine_conversations_non_pda_m_created": {"database": "cleansed", "schema": "bq_product_archive", "name": "dip_athena_data_lake_sunshine_conversations_non_pda_m_created", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/dip_athena_data_lake_sunshine_conversations_non_pda_m_created.sql", "original_file_path": "models/product/dip_athena_data_lake_sunshine_conversations_non_pda_m_created.sql", "unique_id": "model.cleansed_bq_archive.dip_athena_data_lake_sunshine_conversations_non_pda_m_created", "fqn": ["cleansed_bq_archive", "product", "dip_athena_data_lake_sunshine_conversations_non_pda_m_created"], "alias": "dip_athena_data_lake_sunshine_conversations_non_pda_m_created", "checksum": {"name": "sha256", "checksum": "8df128b06a32520df82cbec8fc0c68fae41a3804fc5771d372a3622d66bd310e"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.167138, "relation_name": "cleansed.bq_product_archive.dip_athena_data_lake_sunshine_conversations_non_pda_m_created", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'dip_athena_data_lake_sunshine_conversations_non_pda_m_created') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "dip_athena_data_lake_sunshine_conversations_non_pda_m_created"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.dip_athena_data_lake_sunshine_conversations_non_pda_m_created"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/dip_athena_data_lake_sunshine_conversations_non_pda_m_created.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.dip_athena_data_lake_sunshine_conversations_non_pda_m_created", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.apps": {"database": "cleansed", "schema": "bq_product_archive", "name": "apps", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/apps.sql", "original_file_path": "models/product/apps.sql", "unique_id": "model.cleansed_bq_archive.apps", "fqn": ["cleansed_bq_archive", "product", "apps"], "alias": "apps", "checksum": {"name": "sha256", "checksum": "c6e6f96ed742f432764f9d166cf271875a0fc8501a874a0b98293723bcfec78d"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.1726727, "relation_name": "cleansed.bq_product_archive.apps", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'apps') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "apps"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.apps"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/apps.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.apps", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.tfa_weighted_guide": {"database": "cleansed", "schema": "bq_product_archive", "name": "tfa_weighted_guide", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/tfa_weighted_guide.sql", "original_file_path": "models/product/tfa_weighted_guide.sql", "unique_id": "model.cleansed_bq_archive.tfa_weighted_guide", "fqn": ["cleansed_bq_archive", "product", "tfa_weighted_guide"], "alias": "tfa_weighted_guide", "checksum": {"name": "sha256", "checksum": "6b13886dbe07abcaf25159c52b0d102f907183813056d3945432de2a546989e4"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.1780996, "relation_name": "cleansed.bq_product_archive.tfa_weighted_guide", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'tfa_weighted_guide') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "tfa_weighted_guide"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_guide"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/tfa_weighted_guide.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.tfa_weighted_guide", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.product_data_automated_triage_daily_summary": {"database": "cleansed", "schema": "bq_product_archive", "name": "product_data_automated_triage_daily_summary", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/product_data_automated_triage_daily_summary.sql", "original_file_path": "models/product/product_data_automated_triage_daily_summary.sql", "unique_id": "model.cleansed_bq_archive.product_data_automated_triage_daily_summary", "fqn": ["cleansed_bq_archive", "product", "product_data_automated_triage_daily_summary"], "alias": "product_data_automated_triage_daily_summary", "checksum": {"name": "sha256", "checksum": "3b5d81674b8972c1df5abe57d8fbc0b37b0e89a334913b29f95cee246154abd4"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.1836276, "relation_name": "cleansed.bq_product_archive.product_data_automated_triage_daily_summary", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'product_data_automated_triage_daily_summary') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "product_data_automated_triage_daily_summary"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.product_data_automated_triage_daily_summary"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/product_data_automated_triage_daily_summary.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.product_data_automated_triage_daily_summary", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.workspaces": {"database": "cleansed", "schema": "bq_product_archive", "name": "workspaces", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/workspaces.sql", "original_file_path": "models/product/workspaces.sql", "unique_id": "model.cleansed_bq_archive.workspaces", "fqn": ["cleansed_bq_archive", "product", "workspaces"], "alias": "workspaces", "checksum": {"name": "sha256", "checksum": "bd74a6a3fdce26f0fab923f84299dda3069b39e7399c6fc315e1688e4ab98c86"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.188992, "relation_name": "cleansed.bq_product_archive.workspaces", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'workspaces') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "workspaces"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.workspaces"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/workspaces.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.workspaces", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.tfa_weighted_talk": {"database": "cleansed", "schema": "bq_product_archive", "name": "tfa_weighted_talk", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/tfa_weighted_talk.sql", "original_file_path": "models/product/tfa_weighted_talk.sql", "unique_id": "model.cleansed_bq_archive.tfa_weighted_talk", "fqn": ["cleansed_bq_archive", "product", "tfa_weighted_talk"], "alias": "tfa_weighted_talk", "checksum": {"name": "sha256", "checksum": "a1be3f2ec3fb76a958ba976c6a7dba8774bb25230832ad9091779b07ccf91c99"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.194408, "relation_name": "cleansed.bq_product_archive.tfa_weighted_talk", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'tfa_weighted_talk') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "tfa_weighted_talk"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_talk"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/tfa_weighted_talk.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.tfa_weighted_talk", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.feature_tables_tickets_post_jan2022": {"database": "cleansed", "schema": "bq_product_archive", "name": "feature_tables_tickets_post_jan2022", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/feature_tables_tickets_post_jan2022.sql", "original_file_path": "models/product/feature_tables_tickets_post_jan2022.sql", "unique_id": "model.cleansed_bq_archive.feature_tables_tickets_post_jan2022", "fqn": ["cleansed_bq_archive", "product", "feature_tables_tickets_post_jan2022"], "alias": "feature_tables_tickets_post_jan2022", "checksum": {"name": "sha256", "checksum": "9e26ee9d34c81350fbe778b5a584f85968419426a4f5f888345ce7a16fee8d60"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": "cleansed_bq_product_archive", "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "public", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": "cleansed_bq_product_archive", "docs": {"show": true, "node_color": null}, "patch_path": "cleansed_bq_archive://models/bq_product_archive_models.yml", "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive", "group": "cleansed_bq_product_archive", "access": "public"}, "created_at": 1746557619.6866527, "relation_name": "cleansed.bq_product_archive.feature_tables_tickets_post_jan2022", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'feature_tables_tickets_post_jan2022') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "feature_tables_tickets_post_jan2022"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.feature_tables_tickets_post_jan2022"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/feature_tables_tickets_post_jan2022.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.feature_tables_tickets_post_jan2022", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "public", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.skus": {"database": "cleansed", "schema": "bq_product_archive", "name": "skus", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/skus.sql", "original_file_path": "models/product/skus.sql", "unique_id": "model.cleansed_bq_archive.skus", "fqn": ["cleansed_bq_archive", "product", "skus"], "alias": "skus", "checksum": {"name": "sha256", "checksum": "531c82720ed7dff2de9757f6ecb7eeaf7cbc60d1a28300051c05a2b35f5d4b33"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.2070158, "relation_name": "cleansed.bq_product_archive.skus", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'skus') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "skus"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.skus"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/skus.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.skus", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.app_installs": {"database": "cleansed", "schema": "bq_product_archive", "name": "app_installs", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/app_installs.sql", "original_file_path": "models/product/app_installs.sql", "unique_id": "model.cleansed_bq_archive.app_installs", "fqn": ["cleansed_bq_archive", "product", "app_installs"], "alias": "app_installs", "checksum": {"name": "sha256", "checksum": "20c0130053c3842ecee0fa894c7de276e29b73316af4d51770716351c033fc56"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.2125394, "relation_name": "cleansed.bq_product_archive.app_installs", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'app_installs') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "app_installs"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.app_installs"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/app_installs.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.app_installs", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.tfa_weighted_chat_lc": {"database": "cleansed", "schema": "bq_product_archive", "name": "tfa_weighted_chat_lc", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/tfa_weighted_chat_lc.sql", "original_file_path": "models/product/tfa_weighted_chat_lc.sql", "unique_id": "model.cleansed_bq_archive.tfa_weighted_chat_lc", "fqn": ["cleansed_bq_archive", "product", "tfa_weighted_chat_lc"], "alias": "tfa_weighted_chat_lc", "checksum": {"name": "sha256", "checksum": "fb3d33ff49920207a89fbf8abdab9bc94743e2a89969119ba756ea8c12ad8ae4"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.2178607, "relation_name": "cleansed.bq_product_archive.tfa_weighted_chat_lc", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'tfa_weighted_chat_lc') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "tfa_weighted_chat_lc"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_chat_lc"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/tfa_weighted_chat_lc.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.tfa_weighted_chat_lc", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.tfa_weighted_chat_voltron": {"database": "cleansed", "schema": "bq_product_archive", "name": "tfa_weighted_chat_voltron", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/tfa_weighted_chat_voltron.sql", "original_file_path": "models/product/tfa_weighted_chat_voltron.sql", "unique_id": "model.cleansed_bq_archive.tfa_weighted_chat_voltron", "fqn": ["cleansed_bq_archive", "product", "tfa_weighted_chat_voltron"], "alias": "tfa_weighted_chat_voltron", "checksum": {"name": "sha256", "checksum": "d6af1e8a195795ee18c2f8b7df963aeae4a4fc440c6587c660547422976c6d84"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.2232816, "relation_name": "cleansed.bq_product_archive.tfa_weighted_chat_voltron", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'tfa_weighted_chat_voltron') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "tfa_weighted_chat_voltron"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_chat_voltron"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/tfa_weighted_chat_voltron.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.tfa_weighted_chat_voltron", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.dhco_platform_custom_objects_records": {"database": "cleansed", "schema": "bq_product_archive", "name": "dhco_platform_custom_objects_records", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/dhco_platform_custom_objects_records.sql", "original_file_path": "models/product/dhco_platform_custom_objects_records.sql", "unique_id": "model.cleansed_bq_archive.dhco_platform_custom_objects_records", "fqn": ["cleansed_bq_archive", "product", "dhco_platform_custom_objects_records"], "alias": "dhco_platform_custom_objects_records", "checksum": {"name": "sha256", "checksum": "104cca1937477b3633635bf2c21e51fe00ab55b0b65f53cd8d47932e455bb571"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.228784, "relation_name": "cleansed.bq_product_archive.dhco_platform_custom_objects_records", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'dhco_platform_custom_objects_records') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "dhco_platform_custom_objects_records"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.dhco_platform_custom_objects_records"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/dhco_platform_custom_objects_records.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.dhco_platform_custom_objects_records", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.data_lake_classic_webhooks_backfill": {"database": "cleansed", "schema": "bq_product_archive", "name": "data_lake_classic_webhooks_backfill", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/data_lake_classic_webhooks_backfill.sql", "original_file_path": "models/product/data_lake_classic_webhooks_backfill.sql", "unique_id": "model.cleansed_bq_archive.data_lake_classic_webhooks_backfill", "fqn": ["cleansed_bq_archive", "product", "data_lake_classic_webhooks_backfill"], "alias": "data_lake_classic_webhooks_backfill", "checksum": {"name": "sha256", "checksum": "1ca22191ff8fc23e22d3ecbf1804d51dacf12ff10d4de826c508a8a0b79a484c"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.234268, "relation_name": "cleansed.bq_product_archive.data_lake_classic_webhooks_backfill", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'data_lake_classic_webhooks_backfill') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "data_lake_classic_webhooks_backfill"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.data_lake_classic_webhooks_backfill"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/data_lake_classic_webhooks_backfill.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.data_lake_classic_webhooks_backfill", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.user_dim_historic": {"database": "cleansed", "schema": "bq_product_archive", "name": "user_dim_historic", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/user_dim_historic.sql", "original_file_path": "models/product/user_dim_historic.sql", "unique_id": "model.cleansed_bq_archive.user_dim_historic", "fqn": ["cleansed_bq_archive", "product", "user_dim_historic"], "alias": "user_dim_historic", "checksum": {"name": "sha256", "checksum": "d3d763289c9895e658b53ea182037d76e88062f45fdf431ac23ee04b8980bce5"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.2412739, "relation_name": "cleansed.bq_product_archive.user_dim_historic", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'user_dim_historic') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "user_dim_historic"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.user_dim_historic"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/user_dim_historic.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.user_dim_historic", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.z2_raw_sla_policies": {"database": "cleansed", "schema": "bq_product_archive", "name": "z2_raw_sla_policies", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/z2_raw_sla_policies.sql", "original_file_path": "models/product/z2_raw_sla_policies.sql", "unique_id": "model.cleansed_bq_archive.z2_raw_sla_policies", "fqn": ["cleansed_bq_archive", "product", "z2_raw_sla_policies"], "alias": "z2_raw_sla_policies", "checksum": {"name": "sha256", "checksum": "33ab9cf16e892114eaf0ea85ab0e8ff2e772729a15d01646436886159a603638"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.2464857, "relation_name": "cleansed.bq_product_archive.z2_raw_sla_policies", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'z2_raw_sla_policies') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "z2_raw_sla_policies"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.z2_raw_sla_policies"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/z2_raw_sla_policies.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.z2_raw_sla_policies", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.tfa_weighted_support": {"database": "cleansed", "schema": "bq_product_archive", "name": "tfa_weighted_support", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/tfa_weighted_support.sql", "original_file_path": "models/product/tfa_weighted_support.sql", "unique_id": "model.cleansed_bq_archive.tfa_weighted_support", "fqn": ["cleansed_bq_archive", "product", "tfa_weighted_support"], "alias": "tfa_weighted_support", "checksum": {"name": "sha256", "checksum": "59a670362b001d11a73144bb113d3fd40b4027541153b6d5d8ec9def0434686b"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.251928, "relation_name": "cleansed.bq_product_archive.tfa_weighted_support", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'tfa_weighted_support') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "tfa_weighted_support"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_support"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/tfa_weighted_support.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.tfa_weighted_support", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.custom_statuses": {"database": "cleansed", "schema": "bq_product_archive", "name": "custom_statuses", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/custom_statuses.sql", "original_file_path": "models/product/custom_statuses.sql", "unique_id": "model.cleansed_bq_archive.custom_statuses", "fqn": ["cleansed_bq_archive", "product", "custom_statuses"], "alias": "custom_statuses", "checksum": {"name": "sha256", "checksum": "04a8cb9e75bae5001bd9e9598991b421ec127fbd94fa6d46e06b71c37003a0ee"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.2573903, "relation_name": "cleansed.bq_product_archive.custom_statuses", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'custom_statuses') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "custom_statuses"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.custom_statuses"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/custom_statuses.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.custom_statuses", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.rules_granular_daily_history": {"database": "cleansed", "schema": "bq_product_archive", "name": "rules_granular_daily_history", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/rules_granular_daily_history.sql", "original_file_path": "models/product/rules_granular_daily_history.sql", "unique_id": "model.cleansed_bq_archive.rules_granular_daily_history", "fqn": ["cleansed_bq_archive", "product", "rules_granular_daily_history"], "alias": "rules_granular_daily_history", "checksum": {"name": "sha256", "checksum": "d7918e377d26dd428a58a6d085af028c7d4ff283a78d5a8efa97f06b941677eb"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.2628167, "relation_name": "cleansed.bq_product_archive.rules_granular_daily_history", "raw_code": "select *\nfrom {{ source('bq_archive_objects', 'rules_granular_daily_history') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_archive_objects", "rules_granular_daily_history"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_archive_objects.rules_granular_daily_history"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/rules_granular_daily_history.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_archive.rules_granular_daily_history", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.classic_object_layouts": {"database": "cleansed", "schema": "bq_product_archive", "name": "classic_object_layouts", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/classic_object_layouts.sql", "original_file_path": "models/product/classic_object_layouts.sql", "unique_id": "model.cleansed_bq_archive.classic_object_layouts", "fqn": ["cleansed_bq_archive", "product", "classic_object_layouts"], "alias": "classic_object_layouts", "checksum": {"name": "sha256", "checksum": "44dae4667197e53adf524246c4e51ad7816eee539a282ea597c2bfb1ac14d0d3"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.2682204, "relation_name": "cleansed.bq_product_archive.classic_object_layouts", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'classic_object_layouts') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "classic_object_layouts"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.classic_object_layouts"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/classic_object_layouts.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.classic_object_layouts", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.agent_entitlements": {"database": "cleansed", "schema": "bq_product_archive", "name": "agent_entitlements", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/agent_entitlements.sql", "original_file_path": "models/product/agent_entitlements.sql", "unique_id": "model.cleansed_bq_archive.agent_entitlements", "fqn": ["cleansed_bq_archive", "product", "agent_entitlements"], "alias": "agent_entitlements", "checksum": {"name": "sha256", "checksum": "ab4ce39d9c89b1b9e4a8eb4e67128b2084b2d66ef7391b93b657ffa011c3c2b8"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.2735746, "relation_name": "cleansed.bq_product_archive.agent_entitlements", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'agent_entitlements') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "agent_entitlements"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.agent_entitlements"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/agent_entitlements.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.agent_entitlements", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.product_data_automatic_triage_adoption": {"database": "cleansed", "schema": "bq_product_archive", "name": "product_data_automatic_triage_adoption", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/product_data_automatic_triage_adoption.sql", "original_file_path": "models/product/product_data_automatic_triage_adoption.sql", "unique_id": "model.cleansed_bq_archive.product_data_automatic_triage_adoption", "fqn": ["cleansed_bq_archive", "product", "product_data_automatic_triage_adoption"], "alias": "product_data_automatic_triage_adoption", "checksum": {"name": "sha256", "checksum": "9e36d8a546f670fc9bce0378816a558632cf3a72ea1ce31370e8bcec4ca5f177"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.280499, "relation_name": "cleansed.bq_product_archive.product_data_automatic_triage_adoption", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'product_data_automatic_triage_adoption') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "product_data_automatic_triage_adoption"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.product_data_automatic_triage_adoption"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/product_data_automatic_triage_adoption.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.product_data_automatic_triage_adoption", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}, "model.cleansed_bq_archive.dlc_ola_ticket_policies": {"database": "cleansed", "schema": "bq_product_archive", "name": "dlc_ola_ticket_policies", "resource_type": "model", "package_name": "cleansed_bq_archive", "path": "product/dlc_ola_ticket_policies.sql", "original_file_path": "models/product/dlc_ola_ticket_policies.sql", "unique_id": "model.cleansed_bq_archive.dlc_ola_ticket_policies", "fqn": ["cleansed_bq_archive", "product", "dlc_ola_ticket_policies"], "alias": "dlc_ola_ticket_policies", "checksum": {"name": "sha256", "checksum": "90b08f8f746584009431d334377ba90895c135d58efce5ef583cb72866310229"}, "config": {"enabled": true, "alias": null, "schema": "bq_product_archive", "database": "cleansed", "tags": ["dbt:cleansed_bq_archive"], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true, "columns": true}, "post-hook": [], "pre-hook": [{"sql": "use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}", "transaction": true, "index": null}], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "copy_grants": true, "secure": true, "warehouse_size": "xs"}, "tags": ["dbt:cleansed_bq_archive"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"copy_grants": true, "persist_docs": {"relation": true, "columns": true}, "tags": ["dbt:cleansed_bq_archive"], "materialized": "view", "database": "cleansed", "secure": true, "pre-hook": ["use warehouse {{ zdp_dbt_utils.get_virtual_warehouse_name() }}"], "warehouse_size": "xs", "schema": "bq_product_archive"}, "created_at": 1746557619.2861085, "relation_name": "cleansed.bq_product_archive.dlc_ola_ticket_policies", "raw_code": "select *\nfrom {{ source('bq_product_archive', 'dlc_ola_ticket_policies') }}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["bq_product_archive", "dlc_ola_ticket_policies"]], "metrics": [], "depends_on": {"macros": ["macro.cleansed_bq_archive.source", "macro.zdp_dbt_utils.get_virtual_warehouse_name"], "nodes": ["source.cleansed_bq_archive.bq_product_archive.dlc_ola_ticket_policies"]}, "compiled_path": "target/compiled/cleansed_bq_archive/models/product/dlc_ola_ticket_policies.sql", "compiled": true, "compiled_code": "select *\nfrom raw.bq_product_archive.dlc_ola_ticket_policies", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null, "freshness": null}}, "sources": {"source.cleansed_bq_archive.bq_archive_objects.am_usage_by_instance_by_email_v2": {"database": "raw", "schema": "bq_archive", "name": "am_usage_by_instance_by_email_v2", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.am_usage_by_instance_by_email_v2", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "am_usage_by_instance_by_email_v2"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "am_usage_by_instance_by_email_v2", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "eda__agent_months_dashboard object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.am_usage_by_instance_by_email_v2", "created_at": 1746557619.8824651, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.agent_months_report_table": {"database": "raw", "schema": "bq_archive", "name": "agent_months_report_table", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.agent_months_report_table", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "agent_months_report_table"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "agent_months_report_table", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "eda__agent_months_dashboard object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.agent_months_report_table", "created_at": 1746557619.8836238, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sam_monthly_usage": {"database": "raw", "schema": "bq_archive", "name": "sam_monthly_usage", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sam_monthly_usage", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sam_monthly_usage"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sam_monthly_usage", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "eda__agent_months_dashboard object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sam_monthly_usage", "created_at": 1746557619.8837793, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sam_daily_usage": {"database": "raw", "schema": "bq_archive", "name": "sam_daily_usage", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sam_daily_usage", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sam_daily_usage"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sam_daily_usage", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "eda__agent_months_dashboard object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sam_daily_usage", "created_at": 1746557619.883912, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sam_summary": {"database": "raw", "schema": "bq_archive", "name": "sam_summary", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sam_summary", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sam_summary"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sam_summary", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "eda__agent_months_dashboard object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sam_summary", "created_at": 1746557619.8840318, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sam_usage_by_email_table": {"database": "raw", "schema": "bq_archive", "name": "sam_usage_by_email_table", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sam_usage_by_email_table", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sam_usage_by_email_table"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sam_usage_by_email_table", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "eda__agent_months_dashboard object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sam_usage_by_email_table", "created_at": 1746557619.8841445, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.agent_months_arr": {"database": "raw", "schema": "bq_archive", "name": "agent_months_arr", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.agent_months_arr", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "agent_months_arr"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "agent_months_arr", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "eda__agent_months_dashboard object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.agent_months_arr", "created_at": 1746557619.8842552, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.top10_geo_amsam": {"database": "raw", "schema": "bq_archive", "name": "top10_geo_amsam", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.top10_geo_amsam", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "top10_geo_amsam"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "top10_geo_amsam", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "eda__agent_months_dashboard object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.top10_geo_amsam", "created_at": 1746557619.8843832, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.overview_customer_arr": {"database": "raw", "schema": "bq_archive", "name": "overview_customer_arr", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.overview_customer_arr", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "overview_customer_arr"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "overview_customer_arr", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "eda__agent_months_dashboard object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.overview_customer_arr", "created_at": 1746557619.8844974, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_hob__crm_dim": {"database": "raw", "schema": "bq_archive", "name": "eda_hob__crm_dim", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_hob__crm_dim", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_hob__crm_dim"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_hob__crm_dim", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "crm dimension object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_hob__crm_dim", "created_at": 1746557619.884607, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.customer_dim_scd2": {"database": "raw", "schema": "bq_archive", "name": "customer_dim_scd2", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.customer_dim_scd2", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "customer_dim_scd2"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "customer_dim_scd2", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "customer dimension scd2 object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.customer_dim_scd2", "created_at": 1746557619.8847263, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_hob__legacy_sell_01_account": {"database": "raw", "schema": "bq_archive", "name": "eda_hob__legacy_sell_01_account", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_hob__legacy_sell_01_account", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_hob__legacy_sell_01_account"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_hob__legacy_sell_01_account", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "legacy sell account object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_hob__legacy_sell_01_account", "created_at": 1746557619.88484, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_hob__legacy_sell_06_subpo": {"database": "raw", "schema": "bq_archive", "name": "eda_hob__legacy_sell_06_subpo", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_hob__legacy_sell_06_subpo", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_hob__legacy_sell_06_subpo"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_hob__legacy_sell_06_subpo", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "legacy sell subpo object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_hob__legacy_sell_06_subpo", "created_at": 1746557619.8849502, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sell_core_accounts": {"database": "raw", "schema": "bq_archive", "name": "sell_core_accounts", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sell_core_accounts", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sell_core_accounts"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sell_core_accounts", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sell core accounts object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sell_core_accounts", "created_at": 1746557619.8850608, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sell_payments_subscriptions": {"database": "raw", "schema": "bq_archive", "name": "sell_payments_subscriptions", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sell_payments_subscriptions", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sell_payments_subscriptions"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sell_payments_subscriptions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sell payments subscriptions object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sell_payments_subscriptions", "created_at": 1746557619.885172, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sell_payments_trials": {"database": "raw", "schema": "bq_archive", "name": "sell_payments_trials", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sell_payments_trials", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sell_payments_trials"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sell_payments_trials", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sell payments trials object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sell_payments_trials", "created_at": 1746557619.885281, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sell_payments_products": {"database": "raw", "schema": "bq_archive", "name": "sell_payments_products", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sell_payments_products", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sell_payments_products"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sell_payments_products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sell payments products object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sell_payments_products", "created_at": 1746557619.8854008, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sell_payments_subscription_products": {"database": "raw", "schema": "bq_archive", "name": "sell_payments_subscription_products", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sell_payments_subscription_products", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sell_payments_subscription_products"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sell_payments_subscription_products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sell payments subscription products object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sell_payments_subscription_products", "created_at": 1746557619.8855095, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_hob__dod_recurring_revenue_bundled": {"database": "raw", "schema": "bq_archive", "name": "eda_hob__dod_recurring_revenue_bundled", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_hob__dod_recurring_revenue_bundled", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_hob__dod_recurring_revenue_bundled"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_hob__dod_recurring_revenue_bundled", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HoB BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_hob__dod_recurring_revenue_bundled", "created_at": 1746557619.8856175, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_hob__mtd_recurring_revenue_bundled": {"database": "raw", "schema": "bq_archive", "name": "eda_hob__mtd_recurring_revenue_bundled", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_hob__mtd_recurring_revenue_bundled", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_hob__mtd_recurring_revenue_bundled"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_hob__mtd_recurring_revenue_bundled", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HoB BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_hob__mtd_recurring_revenue_bundled", "created_at": 1746557619.8857248, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_recurring_revenue_bundled": {"database": "raw", "schema": "bq_archive", "name": "eda_hob__qtd_recurring_revenue_bundled", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_recurring_revenue_bundled", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_hob__qtd_recurring_revenue_bundled"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_hob__qtd_recurring_revenue_bundled", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HoB BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_hob__qtd_recurring_revenue_bundled", "created_at": 1746557619.8858335, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag": {"database": "raw", "schema": "bq_archive", "name": "eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HoB BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag", "created_at": 1746557619.8859427, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_renewals_crm_finance_adjusted_bundled": {"database": "raw", "schema": "bq_archive", "name": "eda_hob__qtd_renewals_crm_finance_adjusted_bundled", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_renewals_crm_finance_adjusted_bundled", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_hob__qtd_renewals_crm_finance_adjusted_bundled"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_hob__qtd_renewals_crm_finance_adjusted_bundled", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HoB BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_hob__qtd_renewals_crm_finance_adjusted_bundled", "created_at": 1746557619.8860488, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_renewals_product_finance_adjusted_bundled": {"database": "raw", "schema": "bq_archive", "name": "eda_hob__qtd_renewals_product_finance_adjusted_bundled", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_renewals_product_finance_adjusted_bundled", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_hob__qtd_renewals_product_finance_adjusted_bundled"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_hob__qtd_renewals_product_finance_adjusted_bundled", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HoB BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_hob__qtd_renewals_product_finance_adjusted_bundled", "created_at": 1746557619.8861573, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.qtd_recurring_revenue_month_end_and_current_snapshot": {"database": "raw", "schema": "bq_archive", "name": "qtd_recurring_revenue_month_end_and_current_snapshot", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.qtd_recurring_revenue_month_end_and_current_snapshot", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "qtd_recurring_revenue_month_end_and_current_snapshot"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "qtd_recurring_revenue_month_end_and_current_snapshot", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HoB BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.qtd_recurring_revenue_month_end_and_current_snapshot", "created_at": 1746557619.886262, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.qtd_product_finance_adj_month_end_and_current_snapshot": {"database": "raw", "schema": "bq_archive", "name": "qtd_product_finance_adj_month_end_and_current_snapshot", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.qtd_product_finance_adj_month_end_and_current_snapshot", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "qtd_product_finance_adj_month_end_and_current_snapshot"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "qtd_product_finance_adj_month_end_and_current_snapshot", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HoB BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.qtd_product_finance_adj_month_end_and_current_snapshot", "created_at": 1746557619.8863792, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_hob__yoy_recurring_revenue_bundled": {"database": "raw", "schema": "bq_archive", "name": "eda_hob__yoy_recurring_revenue_bundled", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_hob__yoy_recurring_revenue_bundled", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_hob__yoy_recurring_revenue_bundled"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_hob__yoy_recurring_revenue_bundled", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HoB BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_hob__yoy_recurring_revenue_bundled", "created_at": 1746557619.8864899, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_hob__yoy_renewals_product_finance_adjusted_bundled": {"database": "raw", "schema": "bq_archive", "name": "eda_hob__yoy_renewals_product_finance_adjusted_bundled", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_hob__yoy_renewals_product_finance_adjusted_bundled", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_hob__yoy_renewals_product_finance_adjusted_bundled"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_hob__yoy_renewals_product_finance_adjusted_bundled", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HoB BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_hob__yoy_renewals_product_finance_adjusted_bundled", "created_at": 1746557619.886597, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_hob__yoy_renewals_crm_finance_adjusted_bundled": {"database": "raw", "schema": "bq_archive", "name": "eda_hob__yoy_renewals_crm_finance_adjusted_bundled", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_hob__yoy_renewals_crm_finance_adjusted_bundled", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_hob__yoy_renewals_crm_finance_adjusted_bundled"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_hob__yoy_renewals_crm_finance_adjusted_bundled", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HoB BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_hob__yoy_renewals_crm_finance_adjusted_bundled", "created_at": 1746557619.8867047, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_hob__never_paid_accounts": {"database": "raw", "schema": "bq_archive", "name": "eda_hob__never_paid_accounts", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_hob__never_paid_accounts", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_hob__never_paid_accounts"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_hob__never_paid_accounts", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HoB BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_hob__never_paid_accounts", "created_at": 1746557619.8868148, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.curated_bookings": {"database": "raw", "schema": "bq_archive", "name": "curated_bookings", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.curated_bookings", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "curated_bookings"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "curated_bookings", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Booking BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.curated_bookings", "created_at": 1746557619.8869216, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.curated_bookings_snapshot": {"database": "raw", "schema": "bq_archive", "name": "curated_bookings_snapshot", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.curated_bookings_snapshot", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "curated_bookings_snapshot"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "curated_bookings_snapshot", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Booking BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.curated_bookings_snapshot", "created_at": 1746557619.8870273, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_hob__subpo_bundled": {"database": "raw", "schema": "bq_archive", "name": "eda_hob__subpo_bundled", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_hob__subpo_bundled", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_hob__subpo_bundled"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_hob__subpo_bundled", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HoB BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_hob__subpo_bundled", "created_at": 1746557619.8871312, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_hob__subpo_bundled_task_1": {"database": "raw", "schema": "bq_archive", "name": "eda_hob__subpo_bundled_task_1", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_hob__subpo_bundled_task_1", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_hob__subpo_bundled_task_1"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_hob__subpo_bundled_task_1", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HoB BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_hob__subpo_bundled_task_1", "created_at": 1746557619.8873897, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.change_sub_type_yx_usd": {"database": "raw", "schema": "bq_archive", "name": "change_sub_type_yx_usd", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.change_sub_type_yx_usd", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "change_sub_type_yx_usd"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "change_sub_type_yx_usd", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "pricing_rev_communication BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.change_sub_type_yx_usd", "created_at": 1746557619.8874993, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd": {"database": "raw", "schema": "bq_archive", "name": "adjusted_change_sub_type_usd", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "adjusted_change_sub_type_usd"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "adjusted_change_sub_type_usd", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "pricing_rev_communication BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.adjusted_change_sub_type_usd", "created_at": 1746557619.8876054, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.dod_change_sub_type_po_level": {"database": "raw", "schema": "bq_archive", "name": "dod_change_sub_type_po_level", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.dod_change_sub_type_po_level", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "dod_change_sub_type_po_level"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "dod_change_sub_type_po_level", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "pricing_rev_communication BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.dod_change_sub_type_po_level", "created_at": 1746557619.8877077, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_hob__customer_age_bundled": {"database": "raw", "schema": "bq_archive", "name": "eda_hob__customer_age_bundled", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_hob__customer_age_bundled", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_hob__customer_age_bundled"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_hob__customer_age_bundled", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HoB BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_hob__customer_age_bundled", "created_at": 1746557619.8878074, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.smoochforce_account_scd2": {"database": "raw", "schema": "bq_archive", "name": "smoochforce_account_scd2", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.smoochforce_account_scd2", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "smoochforce_account_scd2"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "smoochforce_account_scd2", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Smoochforce BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.smoochforce_account_scd2", "created_at": 1746557619.887912, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.smoochforce_opportunityhistory_scd2": {"database": "raw", "schema": "bq_archive", "name": "smoochforce_opportunityhistory_scd2", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.smoochforce_opportunityhistory_scd2", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "smoochforce_opportunityhistory_scd2"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "smoochforce_opportunityhistory_scd2", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Smoochforce BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.smoochforce_opportunityhistory_scd2", "created_at": 1746557619.888015, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.smoochforce_opportunity_scd2": {"database": "raw", "schema": "bq_archive", "name": "smoochforce_opportunity_scd2", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.smoochforce_opportunity_scd2", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "smoochforce_opportunity_scd2"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "smoochforce_opportunity_scd2", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Smoochforce BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.smoochforce_opportunity_scd2", "created_at": 1746557619.8881211, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.smoochforce_plans_smooch__c_scd2": {"database": "raw", "schema": "bq_archive", "name": "smoochforce_plans_smooch__c_scd2", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.smoochforce_plans_smooch__c_scd2", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "smoochforce_plans_smooch__c_scd2"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "smoochforce_plans_smooch__c_scd2", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Smoochforce BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.smoochforce_plans_smooch__c_scd2", "created_at": 1746557619.8882284, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_hob__price_ramp_adjustments_prep": {"database": "raw", "schema": "bq_archive", "name": "eda_hob__price_ramp_adjustments_prep", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_hob__price_ramp_adjustments_prep", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_hob__price_ramp_adjustments_prep"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_hob__price_ramp_adjustments_prep", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HoB BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_hob__price_ramp_adjustments_prep", "created_at": 1746557619.8883328, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_11June": {"database": "raw", "schema": "bq_archive", "name": "eda_pricing_comm_zuora_202304_backup_11June", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_11June", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_pricing_comm_zuora_202304_backup_11June"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_pricing_comm_zuora_202304_backup_11June", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Pricing BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_pricing_comm_zuora_202304_backup_11June", "created_at": 1746557619.888451, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_31May": {"database": "raw", "schema": "bq_archive", "name": "eda_pricing_comm_zuora_202304_backup_31May", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_31May", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_pricing_comm_zuora_202304_backup_31May"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_pricing_comm_zuora_202304_backup_31May", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Pricing BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_pricing_comm_zuora_202304_backup_31May", "created_at": 1746557619.8885565, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.cohort_point_in_time": {"database": "raw", "schema": "bq_archive", "name": "cohort_point_in_time", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.cohort_point_in_time", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "cohort_point_in_time"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "cohort_point_in_time", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Pricing BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.cohort_point_in_time", "created_at": 1746557619.8886611, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.cohort_point_in_time_15_jan": {"database": "raw", "schema": "bq_archive", "name": "cohort_point_in_time_15_jan", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.cohort_point_in_time_15_jan", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "cohort_point_in_time_15_jan"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "cohort_point_in_time_15_jan", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Pricing BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.cohort_point_in_time_15_jan", "created_at": 1746557619.888778, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.new_productrateplancharge": {"database": "raw", "schema": "bq_archive", "name": "new_productrateplancharge", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.new_productrateplancharge", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "new_productrateplancharge"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "new_productrateplancharge", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Pricing BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.new_productrateplancharge", "created_at": 1746557619.888884, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.new_productrateplanchargetier": {"database": "raw", "schema": "bq_archive", "name": "new_productrateplanchargetier", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.new_productrateplanchargetier", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "new_productrateplanchargetier"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "new_productrateplanchargetier", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Pricing BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.new_productrateplanchargetier", "created_at": 1746557619.8889918, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_20231004": {"database": "raw", "schema": "bq_archive", "name": "adjusted_change_sub_type_usd_20231004", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_20231004", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "adjusted_change_sub_type_usd_20231004"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "adjusted_change_sub_type_usd_20231004", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Analyst BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.adjusted_change_sub_type_usd_20231004", "created_at": 1746557619.889097, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_01_04": {"database": "raw", "schema": "bq_archive", "name": "adjusted_change_sub_type_usd_2024_01_04", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_01_04", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "adjusted_change_sub_type_usd_2024_01_04"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "adjusted_change_sub_type_usd_2024_01_04", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Analyst BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.adjusted_change_sub_type_usd_2024_01_04", "created_at": 1746557619.889202, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_07_01": {"database": "raw", "schema": "bq_archive", "name": "adjusted_change_sub_type_usd_2024_07_01", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_07_01", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "adjusted_change_sub_type_usd_2024_07_01"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "adjusted_change_sub_type_usd_2024_07_01", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Analyst BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.adjusted_change_sub_type_usd_2024_07_01", "created_at": 1746557619.8893075, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.change_sub_type_usd_2024_01_04": {"database": "raw", "schema": "bq_archive", "name": "change_sub_type_usd_2024_01_04", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.change_sub_type_usd_2024_01_04", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "change_sub_type_usd_2024_01_04"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "change_sub_type_usd_2024_01_04", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Analyst BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.change_sub_type_usd_2024_01_04", "created_at": 1746557619.889429, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.change_sub_type_usd_2024_07_03": {"database": "raw", "schema": "bq_archive", "name": "change_sub_type_usd_2024_07_03", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.change_sub_type_usd_2024_07_03", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "change_sub_type_usd_2024_07_03"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "change_sub_type_usd_2024_07_03", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Analyst BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.change_sub_type_usd_2024_07_03", "created_at": 1746557619.889533, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2023_04_04": {"database": "raw", "schema": "bq_archive", "name": "sfa_bookings_reporting_2023_04_04", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2023_04_04", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_bookings_reporting_2023_04_04"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_bookings_reporting_2023_04_04", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Analyst BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_bookings_reporting_2023_04_04", "created_at": 1746557619.8896375, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2023_07_04": {"database": "raw", "schema": "bq_archive", "name": "sfa_bookings_reporting_2023_07_04", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2023_07_04", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_bookings_reporting_2023_07_04"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_bookings_reporting_2023_07_04", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Analyst BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_bookings_reporting_2023_07_04", "created_at": 1746557619.8897414, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2023_10_04": {"database": "raw", "schema": "bq_archive", "name": "sfa_bookings_reporting_2023_10_04", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2023_10_04", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_bookings_reporting_2023_10_04"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_bookings_reporting_2023_10_04", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Analyst BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_bookings_reporting_2023_10_04", "created_at": 1746557619.8898451, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_01_04": {"database": "raw", "schema": "bq_archive", "name": "sfa_bookings_reporting_2024_01_04", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_01_04", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_bookings_reporting_2024_01_04"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_bookings_reporting_2024_01_04", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Analyst BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_bookings_reporting_2024_01_04", "created_at": 1746557619.8899531, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_04_03": {"database": "raw", "schema": "bq_archive", "name": "sfa_bookings_reporting_2024_04_03", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_04_03", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_bookings_reporting_2024_04_03"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_bookings_reporting_2024_04_03", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Analyst BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_bookings_reporting_2024_04_03", "created_at": 1746557619.890058, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_07_03": {"database": "raw", "schema": "bq_archive", "name": "sfa_bookings_reporting_2024_07_03", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_07_03", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_bookings_reporting_2024_07_03"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_bookings_reporting_2024_07_03", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Analyst BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_bookings_reporting_2024_07_03", "created_at": 1746557619.8901596, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05": {"database": "raw", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Analyst BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05", "created_at": 1746557619.890263, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04": {"database": "raw", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Analyst BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04", "created_at": 1746557619.890376, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03": {"database": "raw", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Analyst BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03", "created_at": 1746557619.89048, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04": {"database": "raw", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Analyst BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04", "created_at": 1746557619.8905811, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03": {"database": "raw", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Analyst BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03", "created_at": 1746557619.8906822, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03": {"database": "raw", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Analyst BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03", "created_at": 1746557619.890787, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_automated_list": {"database": "raw", "schema": "bq_archive", "name": "adjusted_change_sub_type_automated_list", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_automated_list", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "adjusted_change_sub_type_automated_list"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "adjusted_change_sub_type_automated_list", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA Analyst BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.adjusted_change_sub_type_automated_list", "created_at": 1746557619.8908887, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sku_modernization_zuora_amendments": {"database": "raw", "schema": "bq_archive", "name": "sku_modernization_zuora_amendments", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sku_modernization_zuora_amendments", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sku_modernization_zuora_amendments"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sku_modernization_zuora_amendments", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SFA GSheet BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sku_modernization_zuora_amendments", "created_at": 1746557619.8909903, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.curated_opportunities": {"database": "raw", "schema": "bq_archive", "name": "curated_opportunities", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.curated_opportunities", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "curated_opportunities"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "curated_opportunities", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Opportunities BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.curated_opportunities", "created_at": 1746557619.891094, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.p0_master_dashboard": {"database": "raw", "schema": "bq_archive", "name": "p0_master_dashboard", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.p0_master_dashboard", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "p0_master_dashboard"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "p0_master_dashboard", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "P0 Master Dashboard BQ Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.p0_master_dashboard", "created_at": 1746557619.891197, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.hg_insights_contract_view": {"database": "raw", "schema": "bq_archive", "name": "hg_insights_contract_view", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.hg_insights_contract_view", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "hg_insights_contract_view"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "hg_insights_contract_view", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HG Insights contract object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.hg_insights_contract_view", "created_at": 1746557619.8912973, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.hg_insights_install_view": {"database": "raw", "schema": "bq_archive", "name": "hg_insights_install_view", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.hg_insights_install_view", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "hg_insights_install_view"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "hg_insights_install_view", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HG Insights install object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.hg_insights_install_view", "created_at": 1746557619.8914115, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.hg_insights_spend_view": {"database": "raw", "schema": "bq_archive", "name": "hg_insights_spend_view", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.hg_insights_spend_view", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "hg_insights_spend_view"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "hg_insights_spend_view", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "HG Insights spend object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.hg_insights_spend_view", "created_at": 1746557619.891513, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.bizible_user_touchpoints": {"database": "raw", "schema": "bq_archive", "name": "bizible_user_touchpoints", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.bizible_user_touchpoints", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "bizible_user_touchpoints"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "bizible_user_touchpoints", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Bizible User Touchpoints object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.bizible_user_touchpoints", "created_at": 1746557619.891614, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eloqua__emailsend_jan_22_fw": {"database": "raw", "schema": "bq_archive", "name": "eloqua__emailsend_jan_22_fw", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eloqua__emailsend_jan_22_fw", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eloqua__emailsend_jan_22_fw"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eloqua__emailsend_jan_22_fw", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Eloqua Email Send object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eloqua__emailsend_jan_22_fw", "created_at": 1746557619.8917134, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eloqua__emailopen_jan_22_fw": {"database": "raw", "schema": "bq_archive", "name": "eloqua__emailopen_jan_22_fw", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eloqua__emailopen_jan_22_fw", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eloqua__emailopen_jan_22_fw"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eloqua__emailopen_jan_22_fw", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Eloqua Email Open object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eloqua__emailopen_jan_22_fw", "created_at": 1746557619.8918123, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_hob__crm_pro_forma_market_segment_previous_versions": {"database": "raw", "schema": "bq_archive", "name": "eda_hob__crm_pro_forma_market_segment_previous_versions", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_hob__crm_pro_forma_market_segment_previous_versions", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_hob__crm_pro_forma_market_segment_previous_versions"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_hob__crm_pro_forma_market_segment_previous_versions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Previous version of pro forma market segment", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_hob__crm_pro_forma_market_segment_previous_versions", "created_at": 1746557619.8919117, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.crm_dim_2025_market_segment": {"database": "raw", "schema": "bq_archive", "name": "crm_dim_2025_market_segment", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.crm_dim_2025_market_segment", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "crm_dim_2025_market_segment"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "crm_dim_2025_market_segment", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "crm dimension object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.crm_dim_2025_market_segment", "created_at": 1746557619.8920121, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eloqua__emailclickthrough_jan_22_fw": {"database": "raw", "schema": "bq_archive", "name": "eloqua__emailclickthrough_jan_22_fw", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eloqua__emailclickthrough_jan_22_fw", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eloqua__emailclickthrough_jan_22_fw"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eloqua__emailclickthrough_jan_22_fw", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Eloqua Email Click Through Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eloqua__emailclickthrough_jan_22_fw", "created_at": 1746557619.8921113, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.bizible_costs": {"database": "raw", "schema": "bq_archive", "name": "bizible_costs", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.bizible_costs", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "bizible_costs"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "bizible_costs", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Bizible Costs Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.bizible_costs", "created_at": 1746557619.892248, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.tableau_events": {"database": "raw", "schema": "bq_archive", "name": "tableau_events", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.tableau_events", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "tableau_events"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "tableau_events", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Tableau Events Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.tableau_events", "created_at": 1746557619.8923728, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_hob__curated_user": {"database": "raw", "schema": "bq_archive", "name": "eda_hob__curated_user", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_hob__curated_user", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_hob__curated_user"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_hob__curated_user", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Curated Users", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_hob__curated_user", "created_at": 1746557619.8924823, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.attribution_events": {"database": "raw", "schema": "bq_archive", "name": "attribution_events", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.attribution_events", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "attribution_events"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "attribution_events", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "attribution events", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.attribution_events", "created_at": 1746557619.8925853, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.markov_attribution_opportunities_touchpoint": {"database": "raw", "schema": "bq_archive", "name": "markov_attribution_opportunities_touchpoint", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.markov_attribution_opportunities_touchpoint", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "markov_attribution_opportunities_touchpoint"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "markov_attribution_opportunities_touchpoint", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "markov attribution opportunities touchpoint", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.markov_attribution_opportunities_touchpoint", "created_at": 1746557619.892696, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.markov_opps_base_channel_offer": {"database": "raw", "schema": "bq_archive", "name": "markov_opps_base_channel_offer", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.markov_opps_base_channel_offer", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "markov_opps_base_channel_offer"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "markov_opps_base_channel_offer", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "markov opps base channel offer", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.markov_opps_base_channel_offer", "created_at": 1746557619.8928018, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.markov_opps_touchpoint_opps": {"database": "raw", "schema": "bq_archive", "name": "markov_opps_touchpoint_opps", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.markov_opps_touchpoint_opps", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "markov_opps_touchpoint_opps"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "markov_opps_touchpoint_opps", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "markov opps touchpoint opps", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.markov_opps_touchpoint_opps", "created_at": 1746557619.8929052, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.ss_markov_leads_base_table": {"database": "raw", "schema": "bq_archive", "name": "ss_markov_leads_base_table", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.ss_markov_leads_base_table", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "ss_markov_leads_base_table"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "ss_markov_leads_base_table", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "ss markov leads base table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.ss_markov_leads_base_table", "created_at": 1746557619.8930094, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.markov_attribution_leads_touchpoint": {"database": "raw", "schema": "bq_archive", "name": "markov_attribution_leads_touchpoint", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.markov_attribution_leads_touchpoint", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "markov_attribution_leads_touchpoint"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "markov_attribution_leads_touchpoint", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "markov attribution leads touchpoint", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.markov_attribution_leads_touchpoint", "created_at": 1746557619.8931136, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.marketing_non_api_raw_cost": {"database": "raw", "schema": "bq_archive", "name": "marketing_non_api_raw_cost", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.marketing_non_api_raw_cost", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "marketing_non_api_raw_cost"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "marketing_non_api_raw_cost", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "marketing non api raw cost", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.marketing_non_api_raw_cost", "created_at": 1746557619.893216, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.marketing_non_api_raw_cost_historicals": {"database": "raw", "schema": "bq_archive", "name": "marketing_non_api_raw_cost_historicals", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.marketing_non_api_raw_cost_historicals", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "marketing_non_api_raw_cost_historicals"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "marketing_non_api_raw_cost_historicals", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "marketing non api raw cost historicals", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.marketing_non_api_raw_cost_historicals", "created_at": 1746557619.8933187, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.attribution_user_touchpoint_jan_mar": {"database": "raw", "schema": "bq_archive", "name": "attribution_user_touchpoint_jan_mar", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.attribution_user_touchpoint_jan_mar", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "attribution_user_touchpoint_jan_mar"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "attribution_user_touchpoint_jan_mar", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "attribution user touchpoint", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.attribution_user_touchpoint_jan_mar", "created_at": 1746557619.8934343, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfdc_opportunities_touchpoint": {"database": "raw", "schema": "bq_archive", "name": "sfdc_opportunities_touchpoint", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfdc_opportunities_touchpoint", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfdc_opportunities_touchpoint"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfdc_opportunities_touchpoint", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sfdc opportunities touchpoint", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfdc_opportunities_touchpoint", "created_at": 1746557619.8935401, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfdc_leads_touchpoint": {"database": "raw", "schema": "bq_archive", "name": "sfdc_leads_touchpoint", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfdc_leads_touchpoint", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfdc_leads_touchpoint"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfdc_leads_touchpoint", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sfdc leads touchpoint", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfdc_leads_touchpoint", "created_at": 1746557619.8936424, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.bz_cost_jan_20_fw": {"database": "raw", "schema": "bq_archive", "name": "bz_cost_jan_20_fw", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.bz_cost_jan_20_fw", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "bz_cost_jan_20_fw"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "bz_cost_jan_20_fw", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "bz cost", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.bz_cost_jan_20_fw", "created_at": 1746557619.8937428, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfdc_opportunities": {"database": "raw", "schema": "bq_archive", "name": "sfdc_opportunities", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfdc_opportunities", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfdc_opportunities"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfdc_opportunities", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sfdc opportunities", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfdc_opportunities", "created_at": 1746557619.8938434, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfdc_opp_scd2": {"database": "raw", "schema": "bq_archive", "name": "sfdc_opp_scd2", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfdc_opp_scd2", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfdc_opp_scd2"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfdc_opp_scd2", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sfdc opportunities scd2", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfdc_opp_scd2", "created_at": 1746557619.8939433, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.dip_athena_data_lake_sunshine_conversations_pda_m_created": {"database": "raw", "schema": "bq_archive", "name": "dip_athena_data_lake_sunshine_conversations_pda_m_created", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.dip_athena_data_lake_sunshine_conversations_pda_m_created", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "dip_athena_data_lake_sunshine_conversations_pda_m_created"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "dip_athena_data_lake_sunshine_conversations_pda_m_created", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dip_athena_data_lake_sunshine_conversations_pda_m_created Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.dip_athena_data_lake_sunshine_conversations_pda_m_created", "created_at": 1746557619.8940427, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.dip_athena_data_lake_sunshine_conversations_non_pda_m_created": {"database": "raw", "schema": "bq_archive", "name": "dip_athena_data_lake_sunshine_conversations_non_pda_m_created", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.dip_athena_data_lake_sunshine_conversations_non_pda_m_created", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "dip_athena_data_lake_sunshine_conversations_non_pda_m_created"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "dip_athena_data_lake_sunshine_conversations_non_pda_m_created", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dip_athena_data_lake_sunshine_conversations_non_pda_m_created Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.dip_athena_data_lake_sunshine_conversations_non_pda_m_created", "created_at": 1746557619.8941417, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_sunshine_conversations": {"database": "raw", "schema": "bq_archive", "name": "tfa_weighted_sunshine_conversations", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_sunshine_conversations", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "tfa_weighted_sunshine_conversations"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "tfa_weighted_sunshine_conversations", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "tfa_weighted_sunshine_conversations Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.tfa_weighted_sunshine_conversations", "created_at": 1746557619.894245, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_sell": {"database": "raw", "schema": "bq_archive", "name": "tfa_weighted_sell", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_sell", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "tfa_weighted_sell"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "tfa_weighted_sell", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "tfa_weighted_sell Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.tfa_weighted_sell", "created_at": 1746557619.8943462, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_support": {"database": "raw", "schema": "bq_archive", "name": "tfa_weighted_support", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_support", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "tfa_weighted_support"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "tfa_weighted_support", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "tfa tfa_weighted_support scd2", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.tfa_weighted_support", "created_at": 1746557619.8944602, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_chat_voltron": {"database": "raw", "schema": "bq_archive", "name": "tfa_weighted_chat_voltron", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_chat_voltron", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "tfa_weighted_chat_voltron"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "tfa_weighted_chat_voltron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "tfa tfa_weighted_chat_voltron scd2", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.tfa_weighted_chat_voltron", "created_at": 1746557619.8945613, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_chat_lc": {"database": "raw", "schema": "bq_archive", "name": "tfa_weighted_chat_lc", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_chat_lc", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "tfa_weighted_chat_lc"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "tfa_weighted_chat_lc", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "tfa tfa_weighted_chat_lc scd2", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.tfa_weighted_chat_lc", "created_at": 1746557619.8946617, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_talk": {"database": "raw", "schema": "bq_archive", "name": "tfa_weighted_talk", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_talk", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "tfa_weighted_talk"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "tfa_weighted_talk", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "tfa tfa_weighted_talk scd2", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.tfa_weighted_talk", "created_at": 1746557619.8947618, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_guide": {"database": "raw", "schema": "bq_archive", "name": "tfa_weighted_guide", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_guide", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "tfa_weighted_guide"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "tfa_weighted_guide", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "tfa tfa_weighted_guide scd2", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.tfa_weighted_guide", "created_at": 1746557619.8948655, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.billing_boost_banner_clicked": {"database": "raw", "schema": "bq_archive", "name": "billing_boost_banner_clicked", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.billing_boost_banner_clicked", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "billing_boost_banner_clicked"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "billing_boost_banner_clicked", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "billing_boost_banner_clicked Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.billing_boost_banner_clicked", "created_at": 1746557619.8949676, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.billing_boost_banner_eligible": {"database": "raw", "schema": "bq_archive", "name": "billing_boost_banner_eligible", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.billing_boost_banner_eligible", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "billing_boost_banner_eligible"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "billing_boost_banner_eligible", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "billing_boost_banner_eligible Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.billing_boost_banner_eligible", "created_at": 1746557619.8950713, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.billing_boost_start_trial_clicked": {"database": "raw", "schema": "bq_archive", "name": "billing_boost_start_trial_clicked", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.billing_boost_start_trial_clicked", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "billing_boost_start_trial_clicked"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "billing_boost_start_trial_clicked", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "billing_boost_start_trial_clicked Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.billing_boost_start_trial_clicked", "created_at": 1746557619.895174, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.billing_boost_start_trial_confirmed": {"database": "raw", "schema": "bq_archive", "name": "billing_boost_start_trial_confirmed", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.billing_boost_start_trial_confirmed", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "billing_boost_start_trial_confirmed"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "billing_boost_start_trial_confirmed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "billing_boost_start_trial_confirmed Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.billing_boost_start_trial_confirmed", "created_at": 1746557619.8952763, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.billing_boost_upgrade_clicked": {"database": "raw", "schema": "bq_archive", "name": "billing_boost_upgrade_clicked", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.billing_boost_upgrade_clicked", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "billing_boost_upgrade_clicked"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "billing_boost_upgrade_clicked", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "billing_boost_upgrade_clicked Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.billing_boost_upgrade_clicked", "created_at": 1746557619.8953915, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.billing_cart_loaded": {"database": "raw", "schema": "bq_archive", "name": "billing_cart_loaded", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.billing_cart_loaded", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "billing_cart_loaded"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "billing_cart_loaded", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "billing_cart_loaded Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.billing_cart_loaded", "created_at": 1746557619.8954937, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.billing_cancellation_account_submit": {"database": "raw", "schema": "bq_archive", "name": "billing_cancellation_account_submit", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.billing_cancellation_account_submit", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "billing_cancellation_account_submit"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "billing_cancellation_account_submit", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "billing_cancellation_account_submit Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.billing_cancellation_account_submit", "created_at": 1746557619.8955956, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.billing_cancellation_viewed": {"database": "raw", "schema": "bq_archive", "name": "billing_cancellation_viewed", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.billing_cancellation_viewed", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "billing_cancellation_viewed"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "billing_cancellation_viewed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "billing_cancellation_viewed Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.billing_cancellation_viewed", "created_at": 1746557619.8956966, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.billing_cancel_account_clicked": {"database": "raw", "schema": "bq_archive", "name": "billing_cancel_account_clicked", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.billing_cancel_account_clicked", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "billing_cancel_account_clicked"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "billing_cancel_account_clicked", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "billing_cancel_account_clicked Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.billing_cancel_account_clicked", "created_at": 1746557619.8957975, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.billing_customize_subscription": {"database": "raw", "schema": "bq_archive", "name": "billing_customize_subscription", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.billing_customize_subscription", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "billing_customize_subscription"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "billing_customize_subscription", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "billing_customize_subscription Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.billing_customize_subscription", "created_at": 1746557619.8958979, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.billing_payment_loaded": {"database": "raw", "schema": "bq_archive", "name": "billing_payment_loaded", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.billing_payment_loaded", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "billing_payment_loaded"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "billing_payment_loaded", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "billing_payment_loaded Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.billing_payment_loaded", "created_at": 1746557619.8959973, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.billing_pause_subscription_clicked": {"database": "raw", "schema": "bq_archive", "name": "billing_pause_subscription_clicked", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.billing_pause_subscription_clicked", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "billing_pause_subscription_clicked"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "billing_pause_subscription_clicked", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "billing_pause_subscription_clicked Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.billing_pause_subscription_clicked", "created_at": 1746557619.8960984, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.billing_pause_subscription_confirmed": {"database": "raw", "schema": "bq_archive", "name": "billing_pause_subscription_confirmed", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.billing_pause_subscription_confirmed", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "billing_pause_subscription_confirmed"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "billing_pause_subscription_confirmed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "billing_pause_subscription_confirmed Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.billing_pause_subscription_confirmed", "created_at": 1746557619.8961985, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.billing_promocode_submit": {"database": "raw", "schema": "bq_archive", "name": "billing_promocode_submit", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.billing_promocode_submit", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "billing_promocode_submit"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "billing_promocode_submit", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "billing_promocode_submit Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.billing_promocode_submit", "created_at": 1746557619.8963006, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.billing_quiz_answer_submitted": {"database": "raw", "schema": "bq_archive", "name": "billing_quiz_answer_submitted", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.billing_quiz_answer_submitted", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "billing_quiz_answer_submitted"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "billing_quiz_answer_submitted", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "billing_quiz_answer_submitted Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.billing_quiz_answer_submitted", "created_at": 1746557619.8964148, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.billing_quiz_started": {"database": "raw", "schema": "bq_archive", "name": "billing_quiz_started", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.billing_quiz_started", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "billing_quiz_started"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "billing_quiz_started", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "billing_quiz_started Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.billing_quiz_started", "created_at": 1746557619.8965197, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.billing_subscription_viewed": {"database": "raw", "schema": "bq_archive", "name": "billing_subscription_viewed", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.billing_subscription_viewed", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "billing_subscription_viewed"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "billing_subscription_viewed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "billing_subscription_viewed Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.billing_subscription_viewed", "created_at": 1746557619.8966231, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.billing_update_response": {"database": "raw", "schema": "bq_archive", "name": "billing_update_response", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.billing_update_response", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "billing_update_response"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "billing_update_response", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "billing_update_response Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.billing_update_response", "created_at": 1746557619.896735, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.billing_update_submit": {"database": "raw", "schema": "bq_archive", "name": "billing_update_submit", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.billing_update_submit", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "billing_update_submit"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "billing_update_submit", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "billing_update_submit Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.billing_update_submit", "created_at": 1746557619.896838, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.billing_web_widget_loaded": {"database": "raw", "schema": "bq_archive", "name": "billing_web_widget_loaded", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.billing_web_widget_loaded", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "billing_web_widget_loaded"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "billing_web_widget_loaded", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "billing_web_widget_loaded Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.billing_web_widget_loaded", "created_at": 1746557619.8969398, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_accessed_user_profile_via_avatar": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_accessed_user_profile_via_avatar", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_accessed_user_profile_via_avatar", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_accessed_user_profile_via_avatar"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_accessed_user_profile_via_avatar", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_accessed_user_profile_via_avatar Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_accessed_user_profile_via_avatar", "created_at": 1746557619.8970733, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_application_opened": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_application_opened", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_application_opened", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_application_opened"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_application_opened", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_application_opened Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_application_opened", "created_at": 1746557619.8971872, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_bulk_edit_opened": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_bulk_edit_opened", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_bulk_edit_opened", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_bulk_edit_opened"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_bulk_edit_opened", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_bulk_edit_opened Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_bulk_edit_opened", "created_at": 1746557619.897293, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_bulk_edit_submitted": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_bulk_edit_submitted", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_bulk_edit_submitted", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_bulk_edit_submitted"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_bulk_edit_submitted", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_bulk_edit_submitted Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_bulk_edit_submitted", "created_at": 1746557619.8974078, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_comment_added": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_comment_added", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_comment_added", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_comment_added"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_comment_added", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_comment_added Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_comment_added", "created_at": 1746557619.8975122, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_comment_sort_order_changed": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_comment_sort_order_changed", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_comment_sort_order_changed", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_comment_sort_order_changed"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_comment_sort_order_changed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_comment_sort_order_changed Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_comment_sort_order_changed", "created_at": 1746557619.8976152, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_edit_user_profile_opened": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_edit_user_profile_opened", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_edit_user_profile_opened", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_edit_user_profile_opened"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_edit_user_profile_opened", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_edit_user_profile_opened Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_edit_user_profile_opened", "created_at": 1746557619.8977165, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_form_opened": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_form_opened", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_form_opened", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_form_opened"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_form_opened", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_form_opened Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_form_opened", "created_at": 1746557619.8978179, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_hc_tapped": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_hc_tapped", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_hc_tapped", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_hc_tapped"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_hc_tapped", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_hc_tapped Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_hc_tapped", "created_at": 1746557619.8979187, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_macro_applied": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_macro_applied", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_macro_applied", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_macro_applied"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_macro_applied", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_macro_applied Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_macro_applied", "created_at": 1746557619.8980215, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_merge_opened": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_merge_opened", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_merge_opened", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_merge_opened"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_merge_opened", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_merge_opened Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_merge_opened", "created_at": 1746557619.8981237, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_merge_submitted": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_merge_submitted", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_merge_submitted", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_merge_submitted"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_merge_submitted", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_merge_submitted Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_merge_submitted", "created_at": 1746557619.8982236, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_ongoing_chat_conversation": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_ongoing_chat_conversation", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_ongoing_chat_conversation", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_ongoing_chat_conversation"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_ongoing_chat_conversation", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_ongoing_chat_conversation Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_ongoing_chat_conversation", "created_at": 1746557619.8983223, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_opened_view_management": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_opened_view_management", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_opened_view_management", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_opened_view_management"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_opened_view_management", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_opened_view_management Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_opened_view_management", "created_at": 1746557619.898437, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_properties_changed": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_properties_changed", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_properties_changed", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_properties_changed"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_properties_changed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_properties_changed Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_properties_changed", "created_at": 1746557619.8985379, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_push_notification_opened": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_push_notification_opened", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_push_notification_opened", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_push_notification_opened"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_push_notification_opened", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_push_notification_opened Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_push_notification_opened", "created_at": 1746557619.8986397, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_push_notification_received": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_push_notification_received", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_push_notification_received", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_push_notification_received"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_push_notification_received", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_push_notification_received Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_push_notification_received", "created_at": 1746557619.8987732, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_quick_merge_not_permitted": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_quick_merge_not_permitted", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_quick_merge_not_permitted", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_quick_merge_not_permitted"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_quick_merge_not_permitted", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_quick_merge_not_permitted Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_quick_merge_not_permitted", "created_at": 1746557619.898883, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_quick_property_tapped": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_quick_property_tapped", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_quick_property_tapped", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_quick_property_tapped"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_quick_property_tapped", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_quick_property_tapped Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_quick_property_tapped", "created_at": 1746557619.8989873, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_search_opened": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_search_opened", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_search_opened", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_search_opened"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_search_opened", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_search_opened Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_search_opened", "created_at": 1746557619.8990881, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_search_submitted": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_search_submitted", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_search_submitted", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_search_submitted"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_search_submitted", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_search_submitted Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_search_submitted", "created_at": 1746557619.8991892, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_search_ticket_opened": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_search_ticket_opened", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_search_ticket_opened", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_search_ticket_opened"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_search_ticket_opened", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_search_ticket_opened Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_search_ticket_opened", "created_at": 1746557619.8992894, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_shortcut_menu_action": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_shortcut_menu_action", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_shortcut_menu_action", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_shortcut_menu_action"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_shortcut_menu_action", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_shortcut_menu_action Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_shortcut_menu_action", "created_at": 1746557619.8994062, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_talk_status_changed": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_talk_status_changed", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_talk_status_changed", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_talk_status_changed"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_talk_status_changed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_talk_status_changed Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_talk_status_changed", "created_at": 1746557619.8995233, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_talk_status_opened": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_talk_status_opened", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_talk_status_opened", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_talk_status_opened"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_talk_status_opened", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_talk_status_opened Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_talk_status_opened", "created_at": 1746557619.899629, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_ticket_created": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_ticket_created", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_ticket_created", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_ticket_created"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_ticket_created", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_ticket_created Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_ticket_created", "created_at": 1746557619.8997326, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_ticket_reply_type_changed": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_ticket_reply_type_changed", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_ticket_reply_type_changed", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_ticket_reply_type_changed"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_ticket_reply_type_changed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_ticket_reply_type_changed Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_ticket_reply_type_changed", "created_at": 1746557619.899834, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_ticket_updated": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_ticket_updated", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_ticket_updated", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_ticket_updated"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_ticket_updated", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_ticket_updated Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_ticket_updated", "created_at": 1746557619.8999357, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_user_profile_created": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_user_profile_created", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_user_profile_created", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_user_profile_created"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_user_profile_created", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_user_profile_created Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_user_profile_created", "created_at": 1746557619.900038, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_user_profile_save_failed": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_user_profile_save_failed", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_user_profile_save_failed", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_user_profile_save_failed"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_user_profile_save_failed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_user_profile_save_failed Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_user_profile_save_failed", "created_at": 1746557619.9001384, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_i_os_user_profile_saved": {"database": "raw", "schema": "bq_archive", "name": "support_i_os_user_profile_saved", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_i_os_user_profile_saved", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_i_os_user_profile_saved"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_i_os_user_profile_saved", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_i_os_user_profile_saved Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_i_os_user_profile_saved", "created_at": 1746557619.90024, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.segment_marketing_website_experiment_viewed": {"database": "raw", "schema": "bq_archive", "name": "segment_marketing_website_experiment_viewed", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.segment_marketing_website_experiment_viewed", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "segment_marketing_website_experiment_viewed"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "segment_marketing_website_experiment_viewed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "segment_marketing_website_experiment_viewed Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.segment_marketing_website_experiment_viewed", "created_at": 1746557619.9003396, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.segment_marketing_website_identifies": {"database": "raw", "schema": "bq_archive", "name": "segment_marketing_website_identifies", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.segment_marketing_website_identifies", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "segment_marketing_website_identifies"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "segment_marketing_website_identifies", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "segment_marketing_website_identifies Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.segment_marketing_website_identifies", "created_at": 1746557619.9004536, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.website_register_lead_demo_request": {"database": "raw", "schema": "bq_archive", "name": "website_register_lead_demo_request", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.website_register_lead_demo_request", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "website_register_lead_demo_request"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "website_register_lead_demo_request", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "website_register_lead_demo_request Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.website_register_lead_demo_request", "created_at": 1746557619.9005573, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.website_trial_reg_account_creation_apirequest_succeed": {"database": "raw", "schema": "bq_archive", "name": "website_trial_reg_account_creation_apirequest_succeed", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.website_trial_reg_account_creation_apirequest_succeed", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "website_trial_reg_account_creation_apirequest_succeed"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "website_trial_reg_account_creation_apirequest_succeed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "website_trial_reg_account_creation_apirequest_succeed Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.website_trial_reg_account_creation_apirequest_succeed", "created_at": 1746557619.9006748, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.website_register_lead_contact_form_widget": {"database": "raw", "schema": "bq_archive", "name": "website_register_lead_contact_form_widget", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.website_register_lead_contact_form_widget", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "website_register_lead_contact_form_widget"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "website_register_lead_contact_form_widget", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "website_register_lead_contact_form_widget Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.website_register_lead_contact_form_widget", "created_at": 1746557619.9007924, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.website_register_lead_contact_modal_submit": {"database": "raw", "schema": "bq_archive", "name": "website_register_lead_contact_modal_submit", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.website_register_lead_contact_modal_submit", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "website_register_lead_contact_modal_submit"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "website_register_lead_contact_modal_submit", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "website_register_lead_contact_modal_submit Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.website_register_lead_contact_modal_submit", "created_at": 1746557619.9008937, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.central_admin_onboarding_panel_task_completion": {"database": "raw", "schema": "bq_archive", "name": "central_admin_onboarding_panel_task_completion", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.central_admin_onboarding_panel_task_completion", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "central_admin_onboarding_panel_task_completion"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "central_admin_onboarding_panel_task_completion", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "central_admin_onboarding_panel_task_completion Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.central_admin_onboarding_panel_task_completion", "created_at": 1746557619.9009957, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.rules_granular_daily_history": {"database": "raw", "schema": "bq_archive", "name": "rules_granular_daily_history", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.rules_granular_daily_history", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "rules_granular_daily_history"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "rules_granular_daily_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "rules_granular_daily_history Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.rules_granular_daily_history", "created_at": 1746557619.901097, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.p0_master_dashboard_backfill": {"database": "raw", "schema": "bq_archive", "name": "p0_master_dashboard_backfill", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.p0_master_dashboard_backfill", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "p0_master_dashboard_backfill"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "p0_master_dashboard_backfill", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "p0_master_dashboard_backfill Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.p0_master_dashboard_backfill", "created_at": 1746557619.9012012, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.p0_master_dashboard_crm": {"database": "raw", "schema": "bq_archive", "name": "p0_master_dashboard_crm", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.p0_master_dashboard_crm", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "p0_master_dashboard_crm"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "p0_master_dashboard_crm", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "p0_master_dashboard_crm Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.p0_master_dashboard_crm", "created_at": 1746557619.9013016, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.GTM_top_10_omnichannel_routing_edw_copy": {"database": "raw", "schema": "bq_archive", "name": "GTM_top_10_omnichannel_routing_edw_copy", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.GTM_top_10_omnichannel_routing_edw_copy", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "GTM_top_10_omnichannel_routing_edw_copy"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "GTM_top_10_omnichannel_routing_edw_copy", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "GTM_top_10_omnichannel_routing_edw_copy Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.GTM_top_10_omnichannel_routing_edw_copy", "created_at": 1746557619.9014146, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.segment_support_android_identifies": {"database": "raw", "schema": "bq_archive", "name": "segment_support_android_identifies", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.segment_support_android_identifies", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "segment_support_android_identifies"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "segment_support_android_identifies", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "segment_support_android_identifies", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.segment_support_android_identifies", "created_at": 1746557619.9015164, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_accessed_user_profile_via_avatar": {"database": "raw", "schema": "bq_archive", "name": "support_android_accessed_user_profile_via_avatar", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_accessed_user_profile_via_avatar", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_accessed_user_profile_via_avatar"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_accessed_user_profile_via_avatar", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_accessed_user_profile_via_avatar", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_accessed_user_profile_via_avatar", "created_at": 1746557619.9016163, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_application_opened": {"database": "raw", "schema": "bq_archive", "name": "support_android_application_opened", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_application_opened", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_application_opened"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_application_opened", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_application_opened", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_application_opened", "created_at": 1746557619.901735, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_bulk_edit_opened": {"database": "raw", "schema": "bq_archive", "name": "support_android_bulk_edit_opened", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_bulk_edit_opened", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_bulk_edit_opened"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_bulk_edit_opened", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_bulk_edit_opened", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_bulk_edit_opened", "created_at": 1746557619.9018364, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_bulk_edit_submitted": {"database": "raw", "schema": "bq_archive", "name": "support_android_bulk_edit_submitted", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_bulk_edit_submitted", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_bulk_edit_submitted"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_bulk_edit_submitted", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_bulk_edit_submitted", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_bulk_edit_submitted", "created_at": 1746557619.901976, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_comment_added": {"database": "raw", "schema": "bq_archive", "name": "support_android_comment_added", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_comment_added", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_comment_added"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_comment_added", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_comment_added", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_comment_added", "created_at": 1746557619.9020882, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_comment_sort_order_changed": {"database": "raw", "schema": "bq_archive", "name": "support_android_comment_sort_order_changed", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_comment_sort_order_changed", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_comment_sort_order_changed"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_comment_sort_order_changed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_comment_sort_order_changed", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_comment_sort_order_changed", "created_at": 1746557619.9021955, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_force_update_dismissible_alert_presented": {"database": "raw", "schema": "bq_archive", "name": "support_android_force_update_dismissible_alert_presented", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_force_update_dismissible_alert_presented", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_force_update_dismissible_alert_presented"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_force_update_dismissible_alert_presented", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_force_update_dismissible_alert_presented", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_force_update_dismissible_alert_presented", "created_at": 1746557619.9022994, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_force_update_dismissible_alert_update_tapped": {"database": "raw", "schema": "bq_archive", "name": "support_android_force_update_dismissible_alert_update_tapped", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_force_update_dismissible_alert_update_tapped", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_force_update_dismissible_alert_update_tapped"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_force_update_dismissible_alert_update_tapped", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_force_update_dismissible_alert_update_tapped", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_force_update_dismissible_alert_update_tapped", "created_at": 1746557619.9024162, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_force_update_non_dismissible_alert_presented": {"database": "raw", "schema": "bq_archive", "name": "support_android_force_update_non_dismissible_alert_presented", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_force_update_non_dismissible_alert_presented", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_force_update_non_dismissible_alert_presented"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_force_update_non_dismissible_alert_presented", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_force_update_non_dismissible_alert_presented", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_force_update_non_dismissible_alert_presented", "created_at": 1746557619.9025164, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_edit_user_profile_opened": {"database": "raw", "schema": "bq_archive", "name": "support_android_edit_user_profile_opened", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_edit_user_profile_opened", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_edit_user_profile_opened"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_edit_user_profile_opened", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_edit_user_profile_opened", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_edit_user_profile_opened", "created_at": 1746557619.902619, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_form_opened": {"database": "raw", "schema": "bq_archive", "name": "support_android_form_opened", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_form_opened", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_form_opened"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_form_opened", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_form_opened", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_form_opened", "created_at": 1746557619.9027205, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_job_result": {"database": "raw", "schema": "bq_archive", "name": "support_android_job_result", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_job_result", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_job_result"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_job_result", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_job_result", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_job_result", "created_at": 1746557619.9028215, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_macro_applied": {"database": "raw", "schema": "bq_archive", "name": "support_android_macro_applied", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_macro_applied", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_macro_applied"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_macro_applied", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_macro_applied", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_macro_applied", "created_at": 1746557619.9029257, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_merge_opened": {"database": "raw", "schema": "bq_archive", "name": "support_android_merge_opened", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_merge_opened", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_merge_opened"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_merge_opened", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_merge_opened", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_merge_opened", "created_at": 1746557619.9030266, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_merge_submitted": {"database": "raw", "schema": "bq_archive", "name": "support_android_merge_submitted", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_merge_submitted", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_merge_submitted"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_merge_submitted", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_merge_submitted", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_merge_submitted", "created_at": 1746557619.9031355, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_message_playback": {"database": "raw", "schema": "bq_archive", "name": "support_android_message_playback", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_message_playback", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_message_playback"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_message_playback", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_message_playback", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_message_playback", "created_at": 1746557619.9032376, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_ongoing_chat_conversation": {"database": "raw", "schema": "bq_archive", "name": "support_android_ongoing_chat_conversation", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_ongoing_chat_conversation", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_ongoing_chat_conversation"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_ongoing_chat_conversation", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_ongoing_chat_conversation", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_ongoing_chat_conversation", "created_at": 1746557619.90334, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_opened_view_management": {"database": "raw", "schema": "bq_archive", "name": "support_android_opened_view_management", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_opened_view_management", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_opened_view_management"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_opened_view_management", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_opened_view_management", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_opened_view_management", "created_at": 1746557619.9034586, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_properties_changed": {"database": "raw", "schema": "bq_archive", "name": "support_android_properties_changed", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_properties_changed", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_properties_changed"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_properties_changed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_properties_changed", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_properties_changed", "created_at": 1746557619.903599, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_push_notification_opened": {"database": "raw", "schema": "bq_archive", "name": "support_android_push_notification_opened", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_push_notification_opened", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_push_notification_opened"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_push_notification_opened", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_push_notification_opened", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_push_notification_opened", "created_at": 1746557619.9037187, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_push_notification_received": {"database": "raw", "schema": "bq_archive", "name": "support_android_push_notification_received", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_push_notification_received", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_push_notification_received"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_push_notification_received", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_push_notification_received", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_push_notification_received", "created_at": 1746557619.903825, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_quick_merge_not_permitted": {"database": "raw", "schema": "bq_archive", "name": "support_android_quick_merge_not_permitted", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_quick_merge_not_permitted", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_quick_merge_not_permitted"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_quick_merge_not_permitted", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_quick_merge_not_permitted", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_quick_merge_not_permitted", "created_at": 1746557619.9039276, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_quick_property_tapped": {"database": "raw", "schema": "bq_archive", "name": "support_android_quick_property_tapped", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_quick_property_tapped", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_quick_property_tapped"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_quick_property_tapped", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_quick_property_tapped", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_quick_property_tapped", "created_at": 1746557619.9040282, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_rate_app_status": {"database": "raw", "schema": "bq_archive", "name": "support_android_rate_app_status", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_rate_app_status", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_rate_app_status"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_rate_app_status", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_rate_app_status", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_rate_app_status", "created_at": 1746557619.90413, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_search_filter_tooltip_shown": {"database": "raw", "schema": "bq_archive", "name": "support_android_search_filter_tooltip_shown", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_search_filter_tooltip_shown", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_search_filter_tooltip_shown"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_search_filter_tooltip_shown", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_search_filter_tooltip_shown", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_search_filter_tooltip_shown", "created_at": 1746557619.904232, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_search_opened": {"database": "raw", "schema": "bq_archive", "name": "support_android_search_opened", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_search_opened", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_search_opened"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_search_opened", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_search_opened", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_search_opened", "created_at": 1746557619.9043362, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_search_opened_pt": {"database": "raw", "schema": "bq_archive", "name": "support_android_search_opened_pt", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_search_opened_pt", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_search_opened_pt"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_search_opened_pt", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_search_opened_pt", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_search_opened_pt", "created_at": 1746557619.9044564, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_search_organisation_opened": {"database": "raw", "schema": "bq_archive", "name": "support_android_search_organisation_opened", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_search_organisation_opened", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_search_organisation_opened"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_search_organisation_opened", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_search_organisation_opened", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_search_organisation_opened", "created_at": 1746557619.904562, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_search_submitted": {"database": "raw", "schema": "bq_archive", "name": "support_android_search_submitted", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_search_submitted", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_search_submitted"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_search_submitted", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_search_submitted", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_search_submitted", "created_at": 1746557619.9046648, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_search_ticket_opened": {"database": "raw", "schema": "bq_archive", "name": "support_android_search_ticket_opened", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_search_ticket_opened", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_search_ticket_opened"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_search_ticket_opened", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_search_ticket_opened", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_search_ticket_opened", "created_at": 1746557619.9047804, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_search_user_opened": {"database": "raw", "schema": "bq_archive", "name": "support_android_search_user_opened", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_search_user_opened", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_search_user_opened"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_search_user_opened", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_search_user_opened", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_search_user_opened", "created_at": 1746557619.9048817, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_side_conversation_viewed": {"database": "raw", "schema": "bq_archive", "name": "support_android_side_conversation_viewed", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_side_conversation_viewed", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_side_conversation_viewed"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_side_conversation_viewed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_side_conversation_viewed", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_side_conversation_viewed", "created_at": 1746557619.9049828, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_side_conversations_list_viewed": {"database": "raw", "schema": "bq_archive", "name": "support_android_side_conversations_list_viewed", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_side_conversations_list_viewed", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_side_conversations_list_viewed"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_side_conversations_list_viewed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_side_conversations_list_viewed", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_side_conversations_list_viewed", "created_at": 1746557619.9050832, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_talk_status_changed": {"database": "raw", "schema": "bq_archive", "name": "support_android_talk_status_changed", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_talk_status_changed", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_talk_status_changed"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_talk_status_changed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_talk_status_changed", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_talk_status_changed", "created_at": 1746557619.9051857, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_talk_status_opened": {"database": "raw", "schema": "bq_archive", "name": "support_android_talk_status_opened", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_talk_status_opened", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_talk_status_opened"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_talk_status_opened", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_talk_status_opened", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_talk_status_opened", "created_at": 1746557619.9052856, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_created": {"database": "raw", "schema": "bq_archive", "name": "support_android_ticket_created", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_created", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_ticket_created"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_ticket_created", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_ticket_created", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_ticket_created", "created_at": 1746557619.9054017, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_reply_type_changed": {"database": "raw", "schema": "bq_archive", "name": "support_android_ticket_reply_type_changed", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_reply_type_changed", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_ticket_reply_type_changed"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_ticket_reply_type_changed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_ticket_reply_type_changed", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_ticket_reply_type_changed", "created_at": 1746557619.9055073, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_unsaved_changes_dialog": {"database": "raw", "schema": "bq_archive", "name": "support_android_ticket_unsaved_changes_dialog", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_unsaved_changes_dialog", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_ticket_unsaved_changes_dialog"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_ticket_unsaved_changes_dialog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_ticket_unsaved_changes_dialog", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_ticket_unsaved_changes_dialog", "created_at": 1746557619.9056125, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_updated": {"database": "raw", "schema": "bq_archive", "name": "support_android_ticket_updated", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_updated", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_ticket_updated"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_ticket_updated", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_ticket_updated", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_ticket_updated", "created_at": 1746557619.9057164, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_viewed": {"database": "raw", "schema": "bq_archive", "name": "support_android_ticket_viewed", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_viewed", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_ticket_viewed"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_ticket_viewed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_ticket_viewed", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_ticket_viewed", "created_at": 1746557619.9058206, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_user_profile_created": {"database": "raw", "schema": "bq_archive", "name": "support_android_user_profile_created", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_user_profile_created", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_user_profile_created"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_user_profile_created", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_user_profile_created", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_user_profile_created", "created_at": 1746557619.9059417, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_user_profile_save_failed": {"database": "raw", "schema": "bq_archive", "name": "support_android_user_profile_save_failed", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_user_profile_save_failed", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_user_profile_save_failed"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_user_profile_save_failed", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_user_profile_save_failed", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_user_profile_save_failed", "created_at": 1746557619.906045, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.support_android_user_profile_saved": {"database": "raw", "schema": "bq_archive", "name": "support_android_user_profile_saved", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.support_android_user_profile_saved", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "support_android_user_profile_saved"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_android_user_profile_saved", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "support_android_user_profile_saved", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.support_android_user_profile_saved", "created_at": 1746557619.906147, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.updated_markov_pipeline_attribution_model_results_channel_offer": {"database": "raw", "schema": "bq_archive", "name": "updated_markov_pipeline_attribution_model_results_channel_offer", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.updated_markov_pipeline_attribution_model_results_channel_offer", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "updated_markov_pipeline_attribution_model_results_channel_offer"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "updated_markov_pipeline_attribution_model_results_channel_offer", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "updated_markov_pipeline_attribution_model_results_channel_offer Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.updated_markov_pipeline_attribution_model_results_channel_offer", "created_at": 1746557619.9062493, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.All_Premier_Accounts": {"database": "raw", "schema": "bq_archive", "name": "All_Premier_Accounts", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.All_Premier_Accounts", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "All_Premier_Accounts"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "All_Premier_Accounts", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "All_Premier_Accounts Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.All_Premier_Accounts", "created_at": 1746557619.90635, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.All_Premier_Accounts_2023_06_27T16_05_41": {"database": "raw", "schema": "bq_archive", "name": "All_Premier_Accounts_2023_06_27T16_05_41", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.All_Premier_Accounts_2023_06_27T16_05_41", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "All_Premier_Accounts_2023_06_27T16_05_41"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "All_Premier_Accounts_2023_06_27T16_05_41", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "All_Premier_Accounts_2023_06_27T16_05_41 Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.All_Premier_Accounts_2023_06_27T16_05_41", "created_at": 1746557619.9064686, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.Historical_All_Premier_Accounts": {"database": "raw", "schema": "bq_archive", "name": "Historical_All_Premier_Accounts", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.Historical_All_Premier_Accounts", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "Historical_All_Premier_Accounts"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "Historical_All_Premier_Accounts", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Historical_All_Premier_Accounts Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.Historical_All_Premier_Accounts", "created_at": 1746557619.906572, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.Historical_SC_Canaries": {"database": "raw", "schema": "bq_archive", "name": "Historical_SC_Canaries", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.Historical_SC_Canaries", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "Historical_SC_Canaries"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "Historical_SC_Canaries", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Historical_SC_Canaries Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.Historical_SC_Canaries", "created_at": 1746557619.9066763, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.Historical_SLA_Chat": {"database": "raw", "schema": "bq_archive", "name": "Historical_SLA_Chat", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.Historical_SLA_Chat", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "Historical_SLA_Chat"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "Historical_SLA_Chat", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Historical_SLA_Chat Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.Historical_SLA_Chat", "created_at": 1746557619.9067826, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.IBM_Customers": {"database": "raw", "schema": "bq_archive", "name": "IBM_Customers", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.IBM_Customers", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "IBM_Customers"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "IBM_Customers", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "IBM_Customers Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.IBM_Customers", "created_at": 1746557619.906914, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.IM_Incidents": {"database": "raw", "schema": "bq_archive", "name": "IM_Incidents", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.IM_Incidents", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "IM_Incidents"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "IM_Incidents", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "IM_Incidents Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.IM_Incidents", "created_at": 1746557619.9070115, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.SC_Canaries": {"database": "raw", "schema": "bq_archive", "name": "SC_Canaries", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.SC_Canaries", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "SC_Canaries"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "SC_Canaries", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SC_Canaries Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.SC_Canaries", "created_at": 1746557619.9071107, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.SLA_Chat": {"database": "raw", "schema": "bq_archive", "name": "SLA_Chat", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.SLA_Chat", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "SLA_Chat"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "SLA_Chat", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "SLA_Chat Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.SLA_Chat", "created_at": 1746557619.9072099, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.datadog_monitors": {"database": "raw", "schema": "bq_archive", "name": "datadog_monitors", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.datadog_monitors", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "datadog_monitors"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "datadog_monitors", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "datadog_monitors Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.datadog_monitors", "created_at": 1746557619.9073124, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.pagerduty_alerts": {"database": "raw", "schema": "bq_archive", "name": "pagerduty_alerts", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.pagerduty_alerts", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "pagerduty_alerts"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "pagerduty_alerts", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "pagerduty_alerts Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.pagerduty_alerts", "created_at": 1746557619.9074247, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.pagerduty_business_services": {"database": "raw", "schema": "bq_archive", "name": "pagerduty_business_services", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.pagerduty_business_services", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "pagerduty_business_services"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "pagerduty_business_services", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "pagerduty_business_services Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.pagerduty_business_services", "created_at": 1746557619.9075272, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.pagerduty_escalation_policies": {"database": "raw", "schema": "bq_archive", "name": "pagerduty_escalation_policies", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.pagerduty_escalation_policies", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "pagerduty_escalation_policies"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "pagerduty_escalation_policies", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "pagerduty_escalation_policies Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.pagerduty_escalation_policies", "created_at": 1746557619.9076283, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.pagerduty_event_orchestration_routers": {"database": "raw", "schema": "bq_archive", "name": "pagerduty_event_orchestration_routers", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.pagerduty_event_orchestration_routers", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "pagerduty_event_orchestration_routers"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "pagerduty_event_orchestration_routers", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "pagerduty_event_orchestration_routers", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.pagerduty_event_orchestration_routers", "created_at": 1746557619.9077294, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.pagerduty_event_orchestrations": {"database": "raw", "schema": "bq_archive", "name": "pagerduty_event_orchestrations", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.pagerduty_event_orchestrations", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "pagerduty_event_orchestrations"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "pagerduty_event_orchestrations", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "pagerduty_event_orchestrations Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.pagerduty_event_orchestrations", "created_at": 1746557619.9078305, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.pagerduty_incidents": {"database": "raw", "schema": "bq_archive", "name": "pagerduty_incidents", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.pagerduty_incidents", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "pagerduty_incidents"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "pagerduty_incidents", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "pagerduty_incidents Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.pagerduty_incidents", "created_at": 1746557619.9079342, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.pagerduty_logs": {"database": "raw", "schema": "bq_archive", "name": "pagerduty_logs", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.pagerduty_logs", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "pagerduty_logs"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "pagerduty_logs", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "pagerduty_logs Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.pagerduty_logs", "created_at": 1746557619.908036, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.pagerduty_schedules": {"database": "raw", "schema": "bq_archive", "name": "pagerduty_schedules", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.pagerduty_schedules", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "pagerduty_schedules"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "pagerduty_schedules", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "pagerduty_schedules Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.pagerduty_schedules", "created_at": 1746557619.9081378, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.pagerduty_service_orchestrations": {"database": "raw", "schema": "bq_archive", "name": "pagerduty_service_orchestrations", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.pagerduty_service_orchestrations", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "pagerduty_service_orchestrations"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "pagerduty_service_orchestrations", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "pagerduty_service_orchestrations Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.pagerduty_service_orchestrations", "created_at": 1746557619.9082384, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.pagerduty_services": {"database": "raw", "schema": "bq_archive", "name": "pagerduty_services", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.pagerduty_services", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "pagerduty_services"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "pagerduty_services", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "pagerduty_services Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.pagerduty_services", "created_at": 1746557619.90834, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.pagerduty_teams": {"database": "raw", "schema": "bq_archive", "name": "pagerduty_teams", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.pagerduty_teams", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "pagerduty_teams"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "pagerduty_teams", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "pagerduty_teams Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.pagerduty_teams", "created_at": 1746557619.908452, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.pagerduty_users": {"database": "raw", "schema": "bq_archive", "name": "pagerduty_users", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.pagerduty_users", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "pagerduty_users"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "pagerduty_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "pagerduty_users Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.pagerduty_users", "created_at": 1746557619.9085524, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.scheduled_cerebro_blend": {"database": "raw", "schema": "bq_archive", "name": "scheduled_cerebro_blend", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.scheduled_cerebro_blend", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "scheduled_cerebro_blend"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "scheduled_cerebro_blend", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scheduled_cerebro_blend Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.scheduled_cerebro_blend", "created_at": 1746557619.908657, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.scheduled_core_features": {"database": "raw", "schema": "bq_archive", "name": "scheduled_core_features", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.scheduled_core_features", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "scheduled_core_features"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "scheduled_core_features", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scheduled_core_features Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.scheduled_core_features", "created_at": 1746557619.908771, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.scheduled_critical_services": {"database": "raw", "schema": "bq_archive", "name": "scheduled_critical_services", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.scheduled_critical_services", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "scheduled_critical_services"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "scheduled_critical_services", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scheduled_critical_services Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.scheduled_critical_services", "created_at": 1746557619.908871, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.scheduled_monitor_metadata": {"database": "raw", "schema": "bq_archive", "name": "scheduled_monitor_metadata", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.scheduled_monitor_metadata", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "scheduled_monitor_metadata"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "scheduled_monitor_metadata", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scheduled_monitor_metadata Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.scheduled_monitor_metadata", "created_at": 1746557619.9089718, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.scheduled_pagerduty_incidents": {"database": "raw", "schema": "bq_archive", "name": "scheduled_pagerduty_incidents", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.scheduled_pagerduty_incidents", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "scheduled_pagerduty_incidents"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "scheduled_pagerduty_incidents", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scheduled_pagerduty_incidents Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.scheduled_pagerduty_incidents", "created_at": 1746557619.9090729, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.scheduled_pagerduty_incidents_monitors": {"database": "raw", "schema": "bq_archive", "name": "scheduled_pagerduty_incidents_monitors", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.scheduled_pagerduty_incidents_monitors", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "scheduled_pagerduty_incidents_monitors"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "scheduled_pagerduty_incidents_monitors", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scheduled_pagerduty_incidents_monitors Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.scheduled_pagerduty_incidents_monitors", "created_at": 1746557619.909173, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.scheduled_tech_tier_projects": {"database": "raw", "schema": "bq_archive", "name": "scheduled_tech_tier_projects", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.scheduled_tech_tier_projects", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "scheduled_tech_tier_projects"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "scheduled_tech_tier_projects", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scheduled_tech_tier_projects Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.scheduled_tech_tier_projects", "created_at": 1746557619.9092746, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.scheduled_tech_tier_team_hierarchy": {"database": "raw", "schema": "bq_archive", "name": "scheduled_tech_tier_team_hierarchy", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.scheduled_tech_tier_team_hierarchy", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "scheduled_tech_tier_team_hierarchy"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "scheduled_tech_tier_team_hierarchy", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scheduled_tech_tier_team_hierarchy Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.scheduled_tech_tier_team_hierarchy", "created_at": 1746557619.9093888, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.scheduled_unowned_projects": {"database": "raw", "schema": "bq_archive", "name": "scheduled_unowned_projects", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.scheduled_unowned_projects", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "scheduled_unowned_projects"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "scheduled_unowned_projects", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scheduled_unowned_projects Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.scheduled_unowned_projects", "created_at": 1746557619.9094913, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.segment_support_groups": {"database": "raw", "schema": "bq_archive", "name": "segment_support_groups", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.segment_support_groups", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "segment_support_groups"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "segment_support_groups", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "segment_support_groups Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.segment_support_groups", "created_at": 1746557619.9095922, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.segment_support_onboarding_panel_task_completion": {"database": "raw", "schema": "bq_archive", "name": "segment_support_onboarding_panel_task_completion", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.segment_support_onboarding_panel_task_completion", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "segment_support_onboarding_panel_task_completion"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "segment_support_onboarding_panel_task_completion", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "segment_support_onboarding_panel_task_completion Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.segment_support_onboarding_panel_task_completion", "created_at": 1746557619.9096928, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.views_expansion_banner_find_out_more_click": {"database": "raw", "schema": "bq_archive", "name": "views_expansion_banner_find_out_more_click", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.views_expansion_banner_find_out_more_click", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "views_expansion_banner_find_out_more_click"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "views_expansion_banner_find_out_more_click", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "views_expansion_banner_find_out_more_click Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.views_expansion_banner_find_out_more_click", "created_at": 1746557619.9097946, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.views_expansion_banner_try_it_for_free_click": {"database": "raw", "schema": "bq_archive", "name": "views_expansion_banner_try_it_for_free_click", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.views_expansion_banner_try_it_for_free_click", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "views_expansion_banner_try_it_for_free_click"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "views_expansion_banner_try_it_for_free_click", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "views_expansion_banner_try_it_for_free_click Object", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.views_expansion_banner_try_it_for_free_click", "created_at": 1746557619.9098964, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup": {"database": "raw", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup", "created_at": 1746557619.910004, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03": {"database": "raw", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03", "created_at": 1746557619.910107, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06": {"database": "raw", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06", "created_at": 1746557619.910208, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05": {"database": "raw", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05", "created_at": 1746557619.910308, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04": {"database": "raw", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04", "created_at": 1746557619.9104242, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03": {"database": "raw", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03", "created_at": 1746557619.9105296, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02": {"database": "raw", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02", "created_at": 1746557619.9106328, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01": {"database": "raw", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01", "created_at": 1746557619.9107344, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03": {"database": "raw", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03", "created_at": 1746557619.910836, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02": {"database": "raw", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02", "created_at": 1746557619.910937, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01": {"database": "raw", "schema": "bq_archive", "name": "sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01", "created_at": 1746557619.9110382, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_10_03": {"database": "raw", "schema": "bq_archive", "name": "sfa_bookings_reporting_2024_10_03", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_10_03", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_bookings_reporting_2024_10_03"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_bookings_reporting_2024_10_03", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_bookings_reporting_2024_10_03", "created_at": 1746557619.9111397, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_03": {"database": "raw", "schema": "bq_archive", "name": "sfa_bookings_reporting_2025_01_03", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_03", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_bookings_reporting_2025_01_03"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_bookings_reporting_2025_01_03", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_bookings_reporting_2025_01_03", "created_at": 1746557619.9112496, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_06": {"database": "raw", "schema": "bq_archive", "name": "sfa_bookings_reporting_2025_01_06", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_06", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_bookings_reporting_2025_01_06"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_bookings_reporting_2025_01_06", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_bookings_reporting_2025_01_06", "created_at": 1746557619.9113524, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_10_01": {"database": "raw", "schema": "bq_archive", "name": "sfa_bookings_reporting_2024_10_01", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_10_01", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_bookings_reporting_2024_10_01"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_bookings_reporting_2024_10_01", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_bookings_reporting_2024_10_01", "created_at": 1746557619.9114645, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_02": {"database": "raw", "schema": "bq_archive", "name": "sfa_bookings_reporting_2025_01_02", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_02", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_bookings_reporting_2025_01_02"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_bookings_reporting_2025_01_02", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_bookings_reporting_2025_01_02", "created_at": 1746557619.9115689, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_04": {"database": "raw", "schema": "bq_archive", "name": "sfa_bookings_reporting_2025_01_04", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_04", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_bookings_reporting_2025_01_04"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_bookings_reporting_2025_01_04", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_bookings_reporting_2025_01_04", "created_at": 1746557619.9117, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_07_01": {"database": "raw", "schema": "bq_archive", "name": "sfa_bookings_reporting_2024_07_01", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_07_01", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_bookings_reporting_2024_07_01"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_bookings_reporting_2024_07_01", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_bookings_reporting_2024_07_01", "created_at": 1746557619.9118044, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_23": {"database": "raw", "schema": "bq_archive", "name": "sfa_bookings_reporting_2025_01_23", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_23", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_bookings_reporting_2025_01_23"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_bookings_reporting_2025_01_23", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_bookings_reporting_2025_01_23", "created_at": 1746557619.9119053, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_02_03": {"database": "raw", "schema": "bq_archive", "name": "sfa_bookings_reporting_2025_02_03", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_02_03", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_bookings_reporting_2025_02_03"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_bookings_reporting_2025_02_03", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_bookings_reporting_2025_02_03", "created_at": 1746557619.9120076, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_03_03": {"database": "raw", "schema": "bq_archive", "name": "sfa_bookings_reporting_2025_03_03", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_03_03", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_bookings_reporting_2025_03_03"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_bookings_reporting_2025_03_03", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_bookings_reporting_2025_03_03", "created_at": 1746557619.9121108, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_05": {"database": "raw", "schema": "bq_archive", "name": "sfa_bookings_reporting_2025_01_05", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_05", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_bookings_reporting_2025_01_05"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_bookings_reporting_2025_01_05", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_bookings_reporting_2025_01_05", "created_at": 1746557619.9122114, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_03_01": {"database": "raw", "schema": "bq_archive", "name": "sfa_bookings_reporting_2025_03_01", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_03_01", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_bookings_reporting_2025_03_01"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_bookings_reporting_2025_03_01", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_bookings_reporting_2025_03_01", "created_at": 1746557619.9123116, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_07_02": {"database": "raw", "schema": "bq_archive", "name": "sfa_bookings_reporting_2024_07_02", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_07_02", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_bookings_reporting_2024_07_02"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_bookings_reporting_2024_07_02", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_bookings_reporting_2024_07_02", "created_at": 1746557619.9124248, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_01": {"database": "raw", "schema": "bq_archive", "name": "sfa_bookings_reporting_2025_01_01", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_01", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sfa_bookings_reporting_2025_01_01"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sfa_bookings_reporting_2025_01_01", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sfa_bookings_reporting_2025_01_01", "created_at": 1746557619.9125261, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_01_06": {"database": "raw", "schema": "bq_archive", "name": "adjusted_change_sub_type_usd_2025_01_06", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_01_06", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "adjusted_change_sub_type_usd_2025_01_06"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "adjusted_change_sub_type_usd_2025_01_06", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.adjusted_change_sub_type_usd_2025_01_06", "created_at": 1746557619.9126322, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_02_03": {"database": "raw", "schema": "bq_archive", "name": "adjusted_change_sub_type_usd_2025_02_03", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_02_03", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "adjusted_change_sub_type_usd_2025_02_03"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "adjusted_change_sub_type_usd_2025_02_03", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.adjusted_change_sub_type_usd_2025_02_03", "created_at": 1746557619.9127476, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_03_03": {"database": "raw", "schema": "bq_archive", "name": "adjusted_change_sub_type_usd_2025_03_03", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_03_03", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "adjusted_change_sub_type_usd_2025_03_03"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "adjusted_change_sub_type_usd_2025_03_03", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.adjusted_change_sub_type_usd_2025_03_03", "created_at": 1746557619.912851, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_18april": {"database": "raw", "schema": "bq_archive", "name": "eda_pricing_comm_zuora_202304_18april", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_18april", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_pricing_comm_zuora_202304_18april"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_pricing_comm_zuora_202304_18april", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_pricing_comm_zuora_202304_18april", "created_at": 1746557619.9129543, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_14sep": {"database": "raw", "schema": "bq_archive", "name": "eda_pricing_comm_zuora_202304_backup_14sep", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_14sep", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_pricing_comm_zuora_202304_backup_14sep"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_pricing_comm_zuora_202304_backup_14sep", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_pricing_comm_zuora_202304_backup_14sep", "created_at": 1746557619.9130538, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_29april": {"database": "raw", "schema": "bq_archive", "name": "eda_pricing_comm_zuora_202304_backup_29april", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_29april", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_pricing_comm_zuora_202304_backup_29april"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_pricing_comm_zuora_202304_backup_29april", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_pricing_comm_zuora_202304_backup_29april", "created_at": 1746557619.9131536, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304": {"database": "raw", "schema": "bq_archive", "name": "eda_pricing_comm_zuora_202304", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_pricing_comm_zuora_202304"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_pricing_comm_zuora_202304", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_pricing_comm_zuora_202304", "created_at": 1746557619.9132562, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.ab_test_sample": {"database": "raw", "schema": "bq_archive", "name": "ab_test_sample", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.ab_test_sample", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "ab_test_sample"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "ab_test_sample", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.ab_test_sample", "created_at": 1746557619.9133675, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_01_05": {"database": "raw", "schema": "bq_archive", "name": "adjusted_change_sub_type_usd_2025_01_05", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_01_05", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "adjusted_change_sub_type_usd_2025_01_05"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "adjusted_change_sub_type_usd_2025_01_05", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.adjusted_change_sub_type_usd_2025_01_05", "created_at": 1746557619.9134734, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_10_03": {"database": "raw", "schema": "bq_archive", "name": "adjusted_change_sub_type_usd_2024_10_03", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_10_03", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "adjusted_change_sub_type_usd_2024_10_03"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "adjusted_change_sub_type_usd_2024_10_03", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.adjusted_change_sub_type_usd_2024_10_03", "created_at": 1746557619.913575, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.ab_test_stratifiedsamples": {"database": "raw", "schema": "bq_archive", "name": "ab_test_stratifiedsamples", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.ab_test_stratifiedsamples", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "ab_test_stratifiedsamples"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "ab_test_stratifiedsamples", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.ab_test_stratifiedsamples", "created_at": 1746557619.9136744, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup": {"database": "raw", "schema": "bq_archive", "name": "eda_pricing_comm_zuora_202304_backup", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_pricing_comm_zuora_202304_backup"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_pricing_comm_zuora_202304_backup", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_pricing_comm_zuora_202304_backup", "created_at": 1746557619.913776, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_01_01": {"database": "raw", "schema": "bq_archive", "name": "adjusted_change_sub_type_usd_2025_01_01", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_01_01", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "adjusted_change_sub_type_usd_2025_01_01"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "adjusted_change_sub_type_usd_2025_01_01", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.adjusted_change_sub_type_usd_2025_01_01", "created_at": 1746557619.9138741, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_04_03": {"database": "raw", "schema": "bq_archive", "name": "adjusted_change_sub_type_usd_2024_04_03", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_04_03", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "adjusted_change_sub_type_usd_2024_04_03"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "adjusted_change_sub_type_usd_2024_04_03", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.adjusted_change_sub_type_usd_2024_04_03", "created_at": 1746557619.913975, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_eoq_snapshot_may_to_mar": {"database": "raw", "schema": "bq_archive", "name": "dashboard_global_pipeline_eoq_snapshot_may_to_mar", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_eoq_snapshot_may_to_mar", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "dashboard_global_pipeline_eoq_snapshot_may_to_mar"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "dashboard_global_pipeline_eoq_snapshot_may_to_mar", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.dashboard_global_pipeline_eoq_snapshot_may_to_mar", "created_at": 1746557619.9140778, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_productline_eoq_snapshot_v2_may_to_mar": {"database": "raw", "schema": "bq_archive", "name": "dashboard_global_pipeline_productline_eoq_snapshot_v2_may_to_mar", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_productline_eoq_snapshot_v2_may_to_mar", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "dashboard_global_pipeline_productline_eoq_snapshot_v2_may_to_mar"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "dashboard_global_pipeline_productline_eoq_snapshot_v2_may_to_mar", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.dashboard_global_pipeline_productline_eoq_snapshot_v2_may_to_mar", "created_at": 1746557619.9141765, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.gpd_weekly_target_snapshot_may_to_mar": {"database": "raw", "schema": "bq_archive", "name": "gpd_weekly_target_snapshot_may_to_mar", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.gpd_weekly_target_snapshot_may_to_mar", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "gpd_weekly_target_snapshot_may_to_mar"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "gpd_weekly_target_snapshot_may_to_mar", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.gpd_weekly_target_snapshot_may_to_mar", "created_at": 1746557619.9142804, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.dgp_productline_week_dates_eoq_snapshot_v2_may_to_mar": {"database": "raw", "schema": "bq_archive", "name": "dgp_productline_week_dates_eoq_snapshot_v2_may_to_mar", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.dgp_productline_week_dates_eoq_snapshot_v2_may_to_mar", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "dgp_productline_week_dates_eoq_snapshot_v2_may_to_mar"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "dgp_productline_week_dates_eoq_snapshot_v2_may_to_mar", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.dgp_productline_week_dates_eoq_snapshot_v2_may_to_mar", "created_at": 1746557619.914393, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.gpd_pipeline_age_may_to_mar": {"database": "raw", "schema": "bq_archive", "name": "gpd_pipeline_age_may_to_mar", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.gpd_pipeline_age_may_to_mar", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "gpd_pipeline_age_may_to_mar"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "gpd_pipeline_age_may_to_mar", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.gpd_pipeline_age_may_to_mar", "created_at": 1746557619.914498, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.dgp_productline_week_close_dates_eoq_snapshot_v2_may_to_mar": {"database": "raw", "schema": "bq_archive", "name": "dgp_productline_week_close_dates_eoq_snapshot_v2_may_to_mar", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.dgp_productline_week_close_dates_eoq_snapshot_v2_may_to_mar", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "dgp_productline_week_close_dates_eoq_snapshot_v2_may_to_mar"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "dgp_productline_week_close_dates_eoq_snapshot_v2_may_to_mar", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.dgp_productline_week_close_dates_eoq_snapshot_v2_may_to_mar", "created_at": 1746557619.9146082, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_coverage_trends_eoq_snapshot_may_mar": {"database": "raw", "schema": "bq_archive", "name": "dashboard_global_pipeline_coverage_trends_eoq_snapshot_may_mar", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_coverage_trends_eoq_snapshot_may_mar", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "dashboard_global_pipeline_coverage_trends_eoq_snapshot_may_mar"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "dashboard_global_pipeline_coverage_trends_eoq_snapshot_may_mar", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.dashboard_global_pipeline_coverage_trends_eoq_snapshot_may_mar", "created_at": 1746557619.9147127, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.gpd_weekly_product_pipeline_age_snapshot_v2_may_to_mar": {"database": "raw", "schema": "bq_archive", "name": "gpd_weekly_product_pipeline_age_snapshot_v2_may_to_mar", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.gpd_weekly_product_pipeline_age_snapshot_v2_may_to_mar", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "gpd_weekly_product_pipeline_age_snapshot_v2_may_to_mar"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "gpd_weekly_product_pipeline_age_snapshot_v2_may_to_mar", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.gpd_weekly_product_pipeline_age_snapshot_v2_may_to_mar", "created_at": 1746557619.9148161, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3_may_mar": {"database": "raw", "schema": "bq_archive", "name": "dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3_may_mar", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3_may_mar", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3_may_mar"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3_may_mar", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3_may_mar", "created_at": 1746557619.9149184, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.pipeline_coverage_targets_daily_snapshot_may_to_mar": {"database": "raw", "schema": "bq_archive", "name": "pipeline_coverage_targets_daily_snapshot_may_to_mar", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.pipeline_coverage_targets_daily_snapshot_may_to_mar", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "pipeline_coverage_targets_daily_snapshot_may_to_mar"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "pipeline_coverage_targets_daily_snapshot_may_to_mar", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.pipeline_coverage_targets_daily_snapshot_may_to_mar", "created_at": 1746557619.9150202, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.pipeline_coverage_targets_product_daily_snapshot_may_to_mar": {"database": "raw", "schema": "bq_archive", "name": "pipeline_coverage_targets_product_daily_snapshot_may_to_mar", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.pipeline_coverage_targets_product_daily_snapshot_may_to_mar", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "pipeline_coverage_targets_product_daily_snapshot_may_to_mar"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "pipeline_coverage_targets_product_daily_snapshot_may_to_mar", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.pipeline_coverage_targets_product_daily_snapshot_may_to_mar", "created_at": 1746557619.9151223, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eloqua__bounceback_jan_22_fw": {"database": "raw", "schema": "bq_archive", "name": "eloqua__bounceback_jan_22_fw", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eloqua__bounceback_jan_22_fw", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eloqua__bounceback_jan_22_fw"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eloqua__bounceback_jan_22_fw", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eloqua__bounceback_jan_22_fw", "created_at": 1746557619.9152262, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eloqua__unsubscribe_jan_22_fw": {"database": "raw", "schema": "bq_archive", "name": "eloqua__unsubscribe_jan_22_fw", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eloqua__unsubscribe_jan_22_fw", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eloqua__unsubscribe_jan_22_fw"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eloqua__unsubscribe_jan_22_fw", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eloqua__unsubscribe_jan_22_fw", "created_at": 1746557619.9153314, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eloqua__contacts_jan_22_fw": {"database": "raw", "schema": "bq_archive", "name": "eloqua__contacts_jan_22_fw", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eloqua__contacts_jan_22_fw", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eloqua__contacts_jan_22_fw"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eloqua__contacts_jan_22_fw", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eloqua__contacts_jan_22_fw", "created_at": 1746557619.915446, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_benchmark_tableau": {"database": "raw", "schema": "bq_archive", "name": "cs_db_acctmngr_benchmark_tableau", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_benchmark_tableau", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "cs_db_acctmngr_benchmark_tableau"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "cs_db_acctmngr_benchmark_tableau", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.cs_db_acctmngr_benchmark_tableau", "created_at": 1746557619.9155486, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_chat_accounts_tableau": {"database": "raw", "schema": "bq_archive", "name": "cs_db_acctmngr_chat_accounts_tableau", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_chat_accounts_tableau", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "cs_db_acctmngr_chat_accounts_tableau"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "cs_db_acctmngr_chat_accounts_tableau", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.cs_db_acctmngr_chat_accounts_tableau", "created_at": 1746557619.9156506, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.acctmgrdash_full_list_of_accounts_tableau": {"database": "raw", "schema": "bq_archive", "name": "acctmgrdash_full_list_of_accounts_tableau", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.acctmgrdash_full_list_of_accounts_tableau", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "acctmgrdash_full_list_of_accounts_tableau"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "acctmgrdash_full_list_of_accounts_tableau", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.acctmgrdash_full_list_of_accounts_tableau", "created_at": 1746557619.9157534, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_chshacct_tableau_preagg": {"database": "raw", "schema": "bq_archive", "name": "cs_db_acctmngr_chshacct_tableau_preagg", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_chshacct_tableau_preagg", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "cs_db_acctmngr_chshacct_tableau_preagg"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "cs_db_acctmngr_chshacct_tableau_preagg", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.cs_db_acctmngr_chshacct_tableau_preagg", "created_at": 1746557619.9158545, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_chshacct_tableau": {"database": "raw", "schema": "bq_archive", "name": "cs_db_acctmngr_chshacct_tableau", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_chshacct_tableau", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "cs_db_acctmngr_chshacct_tableau"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "cs_db_acctmngr_chshacct_tableau", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.cs_db_acctmngr_chshacct_tableau", "created_at": 1746557619.9159577, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_master_tableau": {"database": "raw", "schema": "bq_archive", "name": "cs_db_acctmngr_master_tableau", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_master_tableau", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "cs_db_acctmngr_master_tableau"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "cs_db_acctmngr_master_tableau", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.cs_db_acctmngr_master_tableau", "created_at": 1746557619.9160595, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_median_tableau": {"database": "raw", "schema": "bq_archive", "name": "cs_db_acctmngr_median_tableau", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_median_tableau", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "cs_db_acctmngr_median_tableau"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "cs_db_acctmngr_median_tableau", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.cs_db_acctmngr_median_tableau", "created_at": 1746557619.9161603, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_utilization": {"database": "raw", "schema": "bq_archive", "name": "cs_db_acctmngr_utilization", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_utilization", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "cs_db_acctmngr_utilization"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "cs_db_acctmngr_utilization", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.cs_db_acctmngr_utilization", "created_at": 1746557619.9162602, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_wtdavg_median_tableau": {"database": "raw", "schema": "bq_archive", "name": "cs_db_acctmngr_wtdavg_median_tableau", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_wtdavg_median_tableau", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "cs_db_acctmngr_wtdavg_median_tableau"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "cs_db_acctmngr_wtdavg_median_tableau", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.cs_db_acctmngr_wtdavg_median_tableau", "created_at": 1746557619.9163675, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sa_opps_dash": {"database": "raw", "schema": "bq_archive", "name": "sa_opps_dash", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sa_opps_dash", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sa_opps_dash"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sa_opps_dash", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sa_opps_dash", "created_at": 1746557619.9164977, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sa_ops_dash_pipegen": {"database": "raw", "schema": "bq_archive", "name": "sa_ops_dash_pipegen", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sa_ops_dash_pipegen", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sa_ops_dash_pipegen"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sa_ops_dash_pipegen", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sa_ops_dash_pipegen", "created_at": 1746557619.9166017, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sa_recurring_revenue": {"database": "raw", "schema": "bq_archive", "name": "sa_recurring_revenue", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sa_recurring_revenue", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sa_recurring_revenue"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sa_recurring_revenue", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sa_recurring_revenue", "created_at": 1746557619.9167128, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.sa_pipeline_movement": {"database": "raw", "schema": "bq_archive", "name": "sa_pipeline_movement", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.sa_pipeline_movement", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "sa_pipeline_movement"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "sa_pipeline_movement", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.sa_pipeline_movement", "created_at": 1746557619.9168165, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eloqua_curated": {"database": "raw", "schema": "bq_archive", "name": "eloqua_curated", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eloqua_curated", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eloqua_curated"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eloqua_curated", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eloqua_curated", "created_at": 1746557619.9169164, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_google_analytics__pages_v2_2022_01_01": {"database": "raw", "schema": "bq_archive", "name": "eda_google_analytics__pages_v2_2022_01_01", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_google_analytics__pages_v2_2022_01_01", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_google_analytics__pages_v2_2022_01_01"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_google_analytics__pages_v2_2022_01_01", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_google_analytics__pages_v2_2022_01_01", "created_at": 1746557619.9170187, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.eda_google_analytics__sessions_v2_2022_01_01": {"database": "raw", "schema": "bq_archive", "name": "eda_google_analytics__sessions_v2_2022_01_01", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.eda_google_analytics__sessions_v2_2022_01_01", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "eda_google_analytics__sessions_v2_2022_01_01"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "eda_google_analytics__sessions_v2_2022_01_01", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.eda_google_analytics__sessions_v2_2022_01_01", "created_at": 1746557619.9171195, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.google_analytics_curated_2022_01_01": {"database": "raw", "schema": "bq_archive", "name": "google_analytics_curated_2022_01_01", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.google_analytics_curated_2022_01_01", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "google_analytics_curated_2022_01_01"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "google_analytics_curated_2022_01_01", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.google_analytics_curated_2022_01_01", "created_at": 1746557619.9172177, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.zendesk_marketingweb_ga_pages_2022_01_01": {"database": "raw", "schema": "bq_archive", "name": "zendesk_marketingweb_ga_pages_2022_01_01", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.zendesk_marketingweb_ga_pages_2022_01_01", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "zendesk_marketingweb_ga_pages_2022_01_01"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "zendesk_marketingweb_ga_pages_2022_01_01", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.zendesk_marketingweb_ga_pages_2022_01_01", "created_at": 1746557619.9173205, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.zendesk_marketingweb_ga_sessions_2022_01_01": {"database": "raw", "schema": "bq_archive", "name": "zendesk_marketingweb_ga_sessions_2022_01_01", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.zendesk_marketingweb_ga_sessions_2022_01_01", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "zendesk_marketingweb_ga_sessions_2022_01_01"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "zendesk_marketingweb_ga_sessions_2022_01_01", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.zendesk_marketingweb_ga_sessions_2022_01_01", "created_at": 1746557619.9174342, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.dashboard_pipeline_quality": {"database": "raw", "schema": "bq_archive", "name": "dashboard_pipeline_quality", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.dashboard_pipeline_quality", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "dashboard_pipeline_quality"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "dashboard_pipeline_quality", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.dashboard_pipeline_quality", "created_at": 1746557619.917536, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_day_of_qtr": {"database": "raw", "schema": "bq_archive", "name": "tb_ws_cc_renewals_day_of_qtr", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_day_of_qtr", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "tb_ws_cc_renewals_day_of_qtr"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "tb_ws_cc_renewals_day_of_qtr", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.tb_ws_cc_renewals_day_of_qtr", "created_at": 1746557619.91764, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_subterm_weighted": {"database": "raw", "schema": "bq_archive", "name": "tb_ws_cc_renewals_subterm_weighted", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_subterm_weighted", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "tb_ws_cc_renewals_subterm_weighted"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "tb_ws_cc_renewals_subterm_weighted", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.tb_ws_cc_renewals_subterm_weighted", "created_at": 1746557619.91774, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_granular_arr_band": {"database": "raw", "schema": "bq_archive", "name": "tb_ws_cc_renewals_granular_arr_band", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_granular_arr_band", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "tb_ws_cc_renewals_granular_arr_band"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "tb_ws_cc_renewals_granular_arr_band", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.tb_ws_cc_renewals_granular_arr_band", "created_at": 1746557619.9178407, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_qtrly_crm_dim": {"database": "raw", "schema": "bq_archive", "name": "tb_ws_cc_renewals_qtrly_crm_dim", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_qtrly_crm_dim", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "tb_ws_cc_renewals_qtrly_crm_dim"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "tb_ws_cc_renewals_qtrly_crm_dim", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.tb_ws_cc_renewals_qtrly_crm_dim", "created_at": 1746557619.9179456, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_pacing": {"database": "raw", "schema": "bq_archive", "name": "tb_ws_cc_renewals_pacing", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_pacing", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "tb_ws_cc_renewals_pacing"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "tb_ws_cc_renewals_pacing", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.tb_ws_cc_renewals_pacing", "created_at": 1746557619.9180493, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_pacing_renewals": {"database": "raw", "schema": "bq_archive", "name": "tb_ws_cc_renewals_pacing_renewals", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_pacing_renewals", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "tb_ws_cc_renewals_pacing_renewals"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "tb_ws_cc_renewals_pacing_renewals", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.tb_ws_cc_renewals_pacing_renewals", "created_at": 1746557619.9181507, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_future_renewals": {"database": "raw", "schema": "bq_archive", "name": "tb_ws_cc_renewals_future_renewals", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_future_renewals", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "tb_ws_cc_renewals_future_renewals"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "tb_ws_cc_renewals_future_renewals", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.tb_ws_cc_renewals_future_renewals", "created_at": 1746557619.9182513, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_granular": {"database": "raw", "schema": "bq_archive", "name": "tb_ws_cc_renewals_finadj_granular", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_granular", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "tb_ws_cc_renewals_finadj_granular"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "tb_ws_cc_renewals_finadj_granular", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.tb_ws_cc_renewals_finadj_granular", "created_at": 1746557619.9183502, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_summary": {"database": "raw", "schema": "bq_archive", "name": "tb_ws_cc_renewals_finadj_summary", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_summary", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "tb_ws_cc_renewals_finadj_summary"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "tb_ws_cc_renewals_finadj_summary", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.tb_ws_cc_renewals_finadj_summary", "created_at": 1746557619.9184618, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_granular_grouped": {"database": "raw", "schema": "bq_archive", "name": "tb_ws_cc_renewals_finadj_granular_grouped", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_granular_grouped", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "tb_ws_cc_renewals_finadj_granular_grouped"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "tb_ws_cc_renewals_finadj_granular_grouped", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.tb_ws_cc_renewals_finadj_granular_grouped", "created_at": 1746557619.9185605, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_timestamp": {"database": "raw", "schema": "bq_archive", "name": "tb_ws_cc_renewals_timestamp", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_timestamp", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "tb_ws_cc_renewals_timestamp"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "tb_ws_cc_renewals_timestamp", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.tb_ws_cc_renewals_timestamp", "created_at": 1746557619.918664, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_summary_yoy_union": {"database": "raw", "schema": "bq_archive", "name": "tb_ws_cc_renewals_finadj_summary_yoy_union", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_summary_yoy_union", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "tb_ws_cc_renewals_finadj_summary_yoy_union"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "tb_ws_cc_renewals_finadj_summary_yoy_union", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.tb_ws_cc_renewals_finadj_summary_yoy_union", "created_at": 1746557619.9187646, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_granular_subtype": {"database": "raw", "schema": "bq_archive", "name": "tb_ws_cc_renewals_finadj_granular_subtype", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_granular_subtype", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "tb_ws_cc_renewals_finadj_granular_subtype"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "tb_ws_cc_renewals_finadj_granular_subtype", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.tb_ws_cc_renewals_finadj_granular_subtype", "created_at": 1746557619.9188645, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.dashboard_pipeline_quality_snapshot_2022_01_01": {"database": "raw", "schema": "bq_archive", "name": "dashboard_pipeline_quality_snapshot_2022_01_01", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.dashboard_pipeline_quality_snapshot_2022_01_01", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "dashboard_pipeline_quality_snapshot_2022_01_01"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "dashboard_pipeline_quality_snapshot_2022_01_01", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.dashboard_pipeline_quality_snapshot_2022_01_01", "created_at": 1746557619.9189641, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_archive_objects.marketing_non_api_raw_cost_regional_apac": {"database": "raw", "schema": "bq_archive", "name": "marketing_non_api_raw_cost_regional_apac", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_archive_sources.yml", "original_file_path": "models/bq_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_archive_objects.marketing_non_api_raw_cost_regional_apac", "fqn": ["cleansed_bq_archive", "bq_archive_objects", "marketing_non_api_raw_cost_regional_apac"], "source_name": "bq_archive_objects", "source_description": "tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "marketing_non_api_raw_cost_regional_apac", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_archive.marketing_non_api_raw_cost_regional_apac", "created_at": 1746557619.9190643, "unrendered_database": "raw", "unrendered_schema": "bq_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.dhco_platform_custom_objects_records": {"database": "raw", "schema": "bq_product_archive", "name": "dhco_platform_custom_objects_records", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.dhco_platform_custom_objects_records", "fqn": ["cleansed_bq_archive", "bq_product_archive", "dhco_platform_custom_objects_records"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "dhco_platform_custom_objects_records", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.dhco_platform_custom_objects_records", "created_at": 1746557619.9191651, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.dlc_custom_objects": {"database": "raw", "schema": "bq_product_archive", "name": "dlc_custom_objects", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.dlc_custom_objects", "fqn": ["cleansed_bq_archive", "bq_product_archive", "dlc_custom_objects"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "dlc_custom_objects", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.dlc_custom_objects", "created_at": 1746557619.9192677, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.layout_builder_service_layouts": {"database": "raw", "schema": "bq_product_archive", "name": "layout_builder_service_layouts", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.layout_builder_service_layouts", "fqn": ["cleansed_bq_archive", "bq_product_archive", "layout_builder_service_layouts"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "layout_builder_service_layouts", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.layout_builder_service_layouts", "created_at": 1746557619.9193807, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.lynx_machine_learning_usage_llm_features": {"database": "raw", "schema": "bq_product_archive", "name": "lynx_machine_learning_usage_llm_features", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.lynx_machine_learning_usage_llm_features", "fqn": ["cleansed_bq_archive", "bq_product_archive", "lynx_machine_learning_usage_llm_features"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "lynx_machine_learning_usage_llm_features", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.lynx_machine_learning_usage_llm_features", "created_at": 1746557619.9194837, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.product_data_automated_triage_daily_summary": {"database": "raw", "schema": "bq_product_archive", "name": "product_data_automated_triage_daily_summary", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.product_data_automated_triage_daily_summary", "fqn": ["cleansed_bq_archive", "bq_product_archive", "product_data_automated_triage_daily_summary"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "product_data_automated_triage_daily_summary", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.product_data_automated_triage_daily_summary", "created_at": 1746557619.9195864, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.product_data_automatic_triage_adoption": {"database": "raw", "schema": "bq_product_archive", "name": "product_data_automatic_triage_adoption", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.product_data_automatic_triage_adoption", "fqn": ["cleansed_bq_archive", "bq_product_archive", "product_data_automatic_triage_adoption"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "product_data_automatic_triage_adoption", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.product_data_automatic_triage_adoption", "created_at": 1746557619.9196866, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.product_data_flow_director_conversations_activity": {"database": "raw", "schema": "bq_product_archive", "name": "product_data_flow_director_conversations_activity", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.product_data_flow_director_conversations_activity", "fqn": ["cleansed_bq_archive", "bq_product_archive", "product_data_flow_director_conversations_activity"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "product_data_flow_director_conversations_activity", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.product_data_flow_director_conversations_activity", "created_at": 1746557619.9197857, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.product_data_generative_answers": {"database": "raw", "schema": "bq_product_archive", "name": "product_data_generative_answers", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.product_data_generative_answers", "fqn": ["cleansed_bq_archive", "bq_product_archive", "product_data_generative_answers"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "product_data_generative_answers", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.product_data_generative_answers", "created_at": 1746557619.9199255, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.product_data_machine_learning_triage_deflections": {"database": "raw", "schema": "bq_product_archive", "name": "product_data_machine_learning_triage_deflections", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.product_data_machine_learning_triage_deflections", "fqn": ["cleansed_bq_archive", "bq_product_archive", "product_data_machine_learning_triage_deflections"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "product_data_machine_learning_triage_deflections", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.product_data_machine_learning_triage_deflections", "created_at": 1746557619.920025, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.product_data_mcs_feedback": {"database": "raw", "schema": "bq_product_archive", "name": "product_data_mcs_feedback", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.product_data_mcs_feedback", "fqn": ["cleansed_bq_archive", "bq_product_archive", "product_data_mcs_feedback"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "product_data_mcs_feedback", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.product_data_mcs_feedback", "created_at": 1746557619.9201252, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.product_data_ml_usage_frontend_events": {"database": "raw", "schema": "bq_product_archive", "name": "product_data_ml_usage_frontend_events", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.product_data_ml_usage_frontend_events", "fqn": ["cleansed_bq_archive", "bq_product_archive", "product_data_ml_usage_frontend_events"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "product_data_ml_usage_frontend_events", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.product_data_ml_usage_frontend_events", "created_at": 1746557619.9202266, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.data_lake_classic_webhooks": {"database": "raw", "schema": "bq_product_archive", "name": "data_lake_classic_webhooks", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.data_lake_classic_webhooks", "fqn": ["cleansed_bq_archive", "bq_product_archive", "data_lake_classic_webhooks"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "data_lake_classic_webhooks", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.data_lake_classic_webhooks", "created_at": 1746557619.920328, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.accounts_settings": {"database": "raw", "schema": "bq_product_archive", "name": "accounts_settings", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.accounts_settings", "fqn": ["cleansed_bq_archive", "bq_product_archive", "accounts_settings"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "accounts_settings", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.accounts_settings", "created_at": 1746557619.920441, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.agent_entitlements": {"database": "raw", "schema": "bq_product_archive", "name": "agent_entitlements", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.agent_entitlements", "fqn": ["cleansed_bq_archive", "bq_product_archive", "agent_entitlements"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "agent_entitlements", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.agent_entitlements", "created_at": 1746557619.9205453, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.app_installs": {"database": "raw", "schema": "bq_product_archive", "name": "app_installs", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.app_installs", "fqn": ["cleansed_bq_archive", "bq_product_archive", "app_installs"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "app_installs", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.app_installs", "created_at": 1746557619.9206462, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.apps": {"database": "raw", "schema": "bq_product_archive", "name": "apps", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.apps", "fqn": ["cleansed_bq_archive", "bq_product_archive", "apps"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "apps", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.apps", "created_at": 1746557619.9207587, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.custom_statuses": {"database": "raw", "schema": "bq_product_archive", "name": "custom_statuses", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.custom_statuses", "fqn": ["cleansed_bq_archive", "bq_product_archive", "custom_statuses"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "custom_statuses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.custom_statuses", "created_at": 1746557619.9208577, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.roles": {"database": "raw", "schema": "bq_product_archive", "name": "roles", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.roles", "fqn": ["cleansed_bq_archive", "bq_product_archive", "roles"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "roles", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.roles", "created_at": 1746557619.9209592, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.skus": {"database": "raw", "schema": "bq_product_archive", "name": "skus", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.skus", "fqn": ["cleansed_bq_archive", "bq_product_archive", "skus"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.skus", "created_at": 1746557619.921064, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.ticket_deflections_events": {"database": "raw", "schema": "bq_product_archive", "name": "ticket_deflections_events", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.ticket_deflections_events", "fqn": ["cleansed_bq_archive", "bq_product_archive", "ticket_deflections_events"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "ticket_deflections_events", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.ticket_deflections_events", "created_at": 1746557619.9211638, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.workspaces": {"database": "raw", "schema": "bq_product_archive", "name": "workspaces", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.workspaces", "fqn": ["cleansed_bq_archive", "bq_product_archive", "workspaces"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "workspaces", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.workspaces", "created_at": 1746557619.9212937, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.rules": {"database": "raw", "schema": "bq_product_archive", "name": "rules", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.rules", "fqn": ["cleansed_bq_archive", "bq_product_archive", "rules"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "rules", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.rules", "created_at": 1746557619.9214084, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.user_dim_historic": {"database": "raw", "schema": "bq_product_archive", "name": "user_dim_historic", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.user_dim_historic", "fqn": ["cleansed_bq_archive", "bq_product_archive", "user_dim_historic"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "user_dim_historic", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.user_dim_historic", "created_at": 1746557619.9215384, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.all_instance_provisioned_and_active_agents": {"database": "raw", "schema": "bq_product_archive", "name": "all_instance_provisioned_and_active_agents", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.all_instance_provisioned_and_active_agents", "fqn": ["cleansed_bq_archive", "bq_product_archive", "all_instance_provisioned_and_active_agents"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "all_instance_provisioned_and_active_agents", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.all_instance_provisioned_and_active_agents", "created_at": 1746557619.9216654, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.account_dashboard_master": {"database": "raw", "schema": "bq_product_archive", "name": "account_dashboard_master", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.account_dashboard_master", "fqn": ["cleansed_bq_archive", "bq_product_archive", "account_dashboard_master"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "account_dashboard_master", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.account_dashboard_master", "created_at": 1746557619.9217737, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.dip_athena_product_data_flow_director_conversations_activity": {"database": "raw", "schema": "bq_product_archive", "name": "dip_athena_product_data_flow_director_conversations_activity", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.dip_athena_product_data_flow_director_conversations_activity", "fqn": ["cleansed_bq_archive", "bq_product_archive", "dip_athena_product_data_flow_director_conversations_activity"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "dip_athena_product_data_flow_director_conversations_activity", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.dip_athena_product_data_flow_director_conversations_activity", "created_at": 1746557619.9218767, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.support_addresses": {"database": "raw", "schema": "bq_product_archive", "name": "support_addresses", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.support_addresses", "fqn": ["cleansed_bq_archive", "bq_product_archive", "support_addresses"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "support_addresses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.support_addresses", "created_at": 1746557619.9219825, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.feature_tables_tickets_backfill": {"database": "raw", "schema": "bq_product_archive", "name": "feature_tables_tickets_backfill", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.feature_tables_tickets_backfill", "fqn": ["cleansed_bq_archive", "bq_product_archive", "feature_tables_tickets_backfill"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "feature_tables_tickets_backfill", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.feature_tables_tickets_backfill", "created_at": 1746557619.9220834, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.count_objects": {"database": "raw", "schema": "bq_product_archive", "name": "count_objects", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.count_objects", "fqn": ["cleansed_bq_archive", "bq_product_archive", "count_objects"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "count_objects", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.count_objects", "created_at": 1746557619.9221866, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.ticket_forms": {"database": "raw", "schema": "bq_product_archive", "name": "ticket_forms", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.ticket_forms", "fqn": ["cleansed_bq_archive", "bq_product_archive", "ticket_forms"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "ticket_forms", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.ticket_forms", "created_at": 1746557619.9222896, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.pdw_hc_usage": {"database": "raw", "schema": "bq_product_archive", "name": "pdw_hc_usage", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.pdw_hc_usage", "fqn": ["cleansed_bq_archive", "bq_product_archive", "pdw_hc_usage"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "pdw_hc_usage", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.pdw_hc_usage", "created_at": 1746557619.9224014, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.feature_tables_tickets_post_jan2022": {"database": "raw", "schema": "bq_product_archive", "name": "feature_tables_tickets_post_jan2022", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.feature_tables_tickets_post_jan2022", "fqn": ["cleansed_bq_archive", "bq_product_archive", "feature_tables_tickets_post_jan2022"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "feature_tables_tickets_post_jan2022", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.feature_tables_tickets_post_jan2022", "created_at": 1746557619.9225051, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.data_lake_classic_webhooks_backfill": {"database": "raw", "schema": "bq_product_archive", "name": "data_lake_classic_webhooks_backfill", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.data_lake_classic_webhooks_backfill", "fqn": ["cleansed_bq_archive", "bq_product_archive", "data_lake_classic_webhooks_backfill"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "data_lake_classic_webhooks_backfill", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.data_lake_classic_webhooks_backfill", "created_at": 1746557619.9226217, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.agent_email_addresses_2023_onward": {"database": "raw", "schema": "bq_product_archive", "name": "agent_email_addresses_2023_onward", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.agent_email_addresses_2023_onward", "fqn": ["cleansed_bq_archive", "bq_product_archive", "agent_email_addresses_2023_onward"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "agent_email_addresses_2023_onward", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.agent_email_addresses_2023_onward", "created_at": 1746557619.922751, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.signals_metrics": {"database": "raw", "schema": "bq_product_archive", "name": "signals_metrics", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.signals_metrics", "fqn": ["cleansed_bq_archive", "bq_product_archive", "signals_metrics"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "signals_metrics", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.signals_metrics", "created_at": 1746557619.9228613, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.product_data_sla_ticket_policies": {"database": "raw", "schema": "bq_product_archive", "name": "product_data_sla_ticket_policies", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.product_data_sla_ticket_policies", "fqn": ["cleansed_bq_archive", "bq_product_archive", "product_data_sla_ticket_policies"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "product_data_sla_ticket_policies", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.product_data_sla_ticket_policies", "created_at": 1746557619.9229655, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.z2_raw_sla_policies": {"database": "raw", "schema": "bq_product_archive", "name": "z2_raw_sla_policies", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.z2_raw_sla_policies", "fqn": ["cleansed_bq_archive", "bq_product_archive", "z2_raw_sla_policies"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "z2_raw_sla_policies", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.z2_raw_sla_policies", "created_at": 1746557619.923068, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.dlc_ola_ticket_policies": {"database": "raw", "schema": "bq_product_archive", "name": "dlc_ola_ticket_policies", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.dlc_ola_ticket_policies", "fqn": ["cleansed_bq_archive", "bq_product_archive", "dlc_ola_ticket_policies"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "dlc_ola_ticket_policies", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.dlc_ola_ticket_policies", "created_at": 1746557619.9231708, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.dlc_ola_policies": {"database": "raw", "schema": "bq_product_archive", "name": "dlc_ola_policies", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.dlc_ola_policies", "fqn": ["cleansed_bq_archive", "bq_product_archive", "dlc_ola_policies"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "dlc_ola_policies", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.dlc_ola_policies", "created_at": 1746557619.923274, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.pdw_slas": {"database": "raw", "schema": "bq_product_archive", "name": "pdw_slas", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.pdw_slas", "fqn": ["cleansed_bq_archive", "bq_product_archive", "pdw_slas"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "pdw_slas", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.pdw_slas", "created_at": 1746557619.9233894, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.classic_object_layouts": {"database": "raw", "schema": "bq_product_archive", "name": "classic_object_layouts", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.classic_object_layouts", "fqn": ["cleansed_bq_archive", "bq_product_archive", "classic_object_layouts"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "classic_object_layouts", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.classic_object_layouts", "created_at": 1746557619.9234946, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.pendo__garden_reporting_jan_22_fw": {"database": "raw", "schema": "bq_product_archive", "name": "pendo__garden_reporting_jan_22_fw", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.pendo__garden_reporting_jan_22_fw", "fqn": ["cleansed_bq_archive", "bq_product_archive", "pendo__garden_reporting_jan_22_fw"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "pendo__garden_reporting_jan_22_fw", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.pendo__garden_reporting_jan_22_fw", "created_at": 1746557619.9235976, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.int_tickets_raw": {"database": "raw", "schema": "bq_product_archive", "name": "int_tickets_raw", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.int_tickets_raw", "fqn": ["cleansed_bq_archive", "bq_product_archive", "int_tickets_raw"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "int_tickets_raw", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.int_tickets_raw", "created_at": 1746557619.9237006, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.pdw_voice_details": {"database": "raw", "schema": "bq_product_archive", "name": "pdw_voice_details", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.pdw_voice_details", "fqn": ["cleansed_bq_archive", "bq_product_archive", "pdw_voice_details"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "pdw_voice_details", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.pdw_voice_details", "created_at": 1746557619.923801, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.pdw_zuora_voice_usages": {"database": "raw", "schema": "bq_product_archive", "name": "pdw_zuora_voice_usages", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.pdw_zuora_voice_usages", "fqn": ["cleansed_bq_archive", "bq_product_archive", "pdw_zuora_voice_usages"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "pdw_zuora_voice_usages", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.pdw_zuora_voice_usages", "created_at": 1746557619.9239025, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.pdw_account_settings_events": {"database": "raw", "schema": "bq_product_archive", "name": "pdw_account_settings_events", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.pdw_account_settings_events", "fqn": ["cleansed_bq_archive", "bq_product_archive", "pdw_account_settings_events"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "pdw_account_settings_events", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.pdw_account_settings_events", "created_at": 1746557619.9240093, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.explore_accounts": {"database": "raw", "schema": "bq_product_archive", "name": "explore_accounts", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.explore_accounts", "fqn": ["cleansed_bq_archive", "bq_product_archive", "explore_accounts"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "explore_accounts", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.explore_accounts", "created_at": 1746557619.92411, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.explore_users": {"database": "raw", "schema": "bq_product_archive", "name": "explore_users", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.explore_users", "fqn": ["cleansed_bq_archive", "bq_product_archive", "explore_users"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "explore_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.explore_users", "created_at": 1746557619.9242148, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.explore_dashboards": {"database": "raw", "schema": "bq_product_archive", "name": "explore_dashboards", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.explore_dashboards", "fqn": ["cleansed_bq_archive", "bq_product_archive", "explore_dashboards"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "explore_dashboards", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.explore_dashboards", "created_at": 1746557619.9243171, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.explore_dashboard_views": {"database": "raw", "schema": "bq_product_archive", "name": "explore_dashboard_views", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.explore_dashboard_views", "fqn": ["cleansed_bq_archive", "bq_product_archive", "explore_dashboard_views"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "explore_dashboard_views", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.explore_dashboard_views", "created_at": 1746557619.9244328, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.ex_customer_base": {"database": "raw", "schema": "bq_product_archive", "name": "ex_customer_base", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.ex_customer_base", "fqn": ["cleansed_bq_archive", "bq_product_archive", "ex_customer_base"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "ex_customer_base", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.ex_customer_base", "created_at": 1746557619.924538, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}, "source.cleansed_bq_archive.bq_product_archive.ex_usage_us_02_28_2025": {"database": "raw", "schema": "bq_product_archive", "name": "ex_usage_us_02_28_2025", "resource_type": "source", "package_name": "cleansed_bq_archive", "path": "models/bq_product_archive_sources.yml", "original_file_path": "models/bq_product_archive_sources.yml", "unique_id": "source.cleansed_bq_archive.bq_product_archive.ex_usage_us_02_28_2025", "fqn": ["cleansed_bq_archive", "bq_product_archive", "ex_usage_us_02_28_2025"], "source_name": "bq_product_archive", "source_description": "Product tables migrated from BQ to Snowflake AS-IS", "loader": "", "identifier": "ex_usage_us_02_28_2025", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null}, "patch_path": null, "unrendered_config": {}, "relation_name": "raw.bq_product_archive.ex_usage_us_02_28_2025", "created_at": 1746557619.9246385, "unrendered_database": "raw", "unrendered_schema": "bq_product_archive", "doc_blocks": []}}, "macros": {"macro.cleansed_bq_archive.get_incremental_truncate_insert_sql": {"name": "get_incremental_truncate_insert_sql", "resource_type": "macro", "package_name": "cleansed_bq_archive", "path": "macros/materialization/truncate_insert_strategy.sql", "original_file_path": "macros/materialization/truncate_insert_strategy.sql", "unique_id": "macro.cleansed_bq_archive.get_incremental_truncate_insert_sql", "macro_sql": "{% macro get_incremental_truncate_insert_sql(arg_dict) %}\n    {% do return(zdp_dbt_utils.get_incremental_truncate_insert_sql(arg_dict)) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.get_incremental_truncate_insert_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.723599, "supported_languages": null}, "macro.cleansed_bq_archive.ref": {"name": "ref", "resource_type": "macro", "package_name": "cleansed_bq_archive", "path": "macros/base/ref.sql", "original_file_path": "macros/base/ref.sql", "unique_id": "macro.cleansed_bq_archive.ref", "macro_sql": "{%- macro ref() -%}\n    {{ return(adapter.dispatch('ref', 'zdp_dbt_utils')(*varargs, **kwargs)) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.zdp_dbt_utils.default__ref"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.724007, "supported_languages": null}, "macro.cleansed_bq_archive.source": {"name": "source", "resource_type": "macro", "package_name": "cleansed_bq_archive", "path": "macros/base/source.sql", "original_file_path": "macros/base/source.sql", "unique_id": "macro.cleansed_bq_archive.source", "macro_sql": "{%- macro source() -%}\n    {{ return(adapter.dispatch('source', 'zdp_dbt_utils')(*varargs, **kwargs)) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.zdp_dbt_utils.default__source"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7243316, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_catalog": {"name": "snowflake__get_catalog", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_catalog", "macro_sql": "{% macro snowflake__get_catalog(information_schema, schemas) -%}\n\n    {% set query %}\n        with tables as (\n            {{ snowflake__get_catalog_tables_sql(information_schema) }}\n            {{ snowflake__get_catalog_schemas_where_clause_sql(schemas) }}\n        ),\n        columns as (\n            {{ snowflake__get_catalog_columns_sql(information_schema) }}\n            {{ snowflake__get_catalog_schemas_where_clause_sql(schemas) }}\n        )\n        {{ snowflake__get_catalog_results_sql() }}\n    {%- endset -%}\n\n    {{ return(run_query(query)) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_catalog_tables_sql", "macro.dbt_snowflake.snowflake__get_catalog_schemas_where_clause_sql", "macro.dbt_snowflake.snowflake__get_catalog_columns_sql", "macro.dbt_snowflake.snowflake__get_catalog_results_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7256086, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_catalog_relations": {"name": "snowflake__get_catalog_relations", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_catalog_relations", "macro_sql": "{% macro snowflake__get_catalog_relations(information_schema, relations) -%}\n\n    {% set query %}\n        with tables as (\n            {{ snowflake__get_catalog_tables_sql(information_schema) }}\n            {{ snowflake__get_catalog_relations_where_clause_sql(relations) }}\n        ),\n        columns as (\n            {{ snowflake__get_catalog_columns_sql(information_schema) }}\n            {{ snowflake__get_catalog_relations_where_clause_sql(relations) }}\n        )\n        {{ snowflake__get_catalog_results_sql() }}\n    {%- endset -%}\n\n    {{ return(run_query(query)) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_catalog_tables_sql", "macro.dbt_snowflake.snowflake__get_catalog_relations_where_clause_sql", "macro.dbt_snowflake.snowflake__get_catalog_columns_sql", "macro.dbt_snowflake.snowflake__get_catalog_results_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7261033, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_catalog_tables_sql": {"name": "snowflake__get_catalog_tables_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_catalog_tables_sql", "macro_sql": "{% macro snowflake__get_catalog_tables_sql(information_schema) -%}\n    select\n        table_catalog as \"table_database\",\n        table_schema as \"table_schema\",\n        table_name as \"table_name\",\n        case\n            when is_dynamic = 'YES' and table_type = 'BASE TABLE' THEN 'DYNAMIC TABLE'\n            else table_type\n        end as \"table_type\",\n        comment as \"table_comment\",\n\n        -- note: this is the _role_ that owns the table\n        table_owner as \"table_owner\",\n\n        'Clustering Key' as \"stats:clustering_key:label\",\n        clustering_key as \"stats:clustering_key:value\",\n        'The key used to cluster this table' as \"stats:clustering_key:description\",\n        (clustering_key is not null) as \"stats:clustering_key:include\",\n\n        'Row Count' as \"stats:row_count:label\",\n        row_count as \"stats:row_count:value\",\n        'An approximate count of rows in this table' as \"stats:row_count:description\",\n        (row_count is not null) as \"stats:row_count:include\",\n\n        'Approximate Size' as \"stats:bytes:label\",\n        bytes as \"stats:bytes:value\",\n        'Approximate size of the table as reported by Snowflake' as \"stats:bytes:description\",\n        (bytes is not null) as \"stats:bytes:include\",\n\n        'Last Modified' as \"stats:last_modified:label\",\n        to_varchar(convert_timezone('UTC', last_altered), 'yyyy-mm-dd HH24:MI'||'UTC') as \"stats:last_modified:value\",\n        'The timestamp for last update/change' as \"stats:last_modified:description\",\n        (last_altered is not null and table_type='BASE TABLE') as \"stats:last_modified:include\"\n    from {{ information_schema }}.tables\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7263856, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_catalog_columns_sql": {"name": "snowflake__get_catalog_columns_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_catalog_columns_sql", "macro_sql": "{% macro snowflake__get_catalog_columns_sql(information_schema) -%}\n    select\n        table_catalog as \"table_database\",\n        table_schema as \"table_schema\",\n        table_name as \"table_name\",\n\n        column_name as \"column_name\",\n        ordinal_position as \"column_index\",\n        data_type as \"column_type\",\n        comment as \"column_comment\"\n    from {{ information_schema }}.columns\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7265577, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_catalog_results_sql": {"name": "snowflake__get_catalog_results_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_catalog_results_sql", "macro_sql": "{% macro snowflake__get_catalog_results_sql() -%}\n    select *\n    from tables\n    join columns using (\"table_database\", \"table_schema\", \"table_name\")\n    order by \"column_index\"\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7266762, "supported_languages": null}, "macro.dbt_snowflake.snowflake__catalog_equals": {"name": "snowflake__catalog_equals", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_snowflake.snowflake__catalog_equals", "macro_sql": "{% macro snowflake__catalog_equals(field, value) %}\n    \"{{ field }}\" ilike '{{ value }}' and upper(\"{{ field }}\") = upper('{{ value }}')\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.726896, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_catalog_schemas_where_clause_sql": {"name": "snowflake__get_catalog_schemas_where_clause_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_catalog_schemas_where_clause_sql", "macro_sql": "{% macro snowflake__get_catalog_schemas_where_clause_sql(schemas) -%}\n    where ({%- for schema in schemas -%}\n        ({{ snowflake__catalog_equals('table_schema', schema) }}){%- if not loop.last %} or {% endif -%}\n    {%- endfor -%})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__catalog_equals"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7272677, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_catalog_relations_where_clause_sql": {"name": "snowflake__get_catalog_relations_where_clause_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_catalog_relations_where_clause_sql", "macro_sql": "{% macro snowflake__get_catalog_relations_where_clause_sql(relations) -%}\n    where (\n        {%- for relation in relations -%}\n            {% if relation.schema and relation.identifier %}\n                (\n                    {{ snowflake__catalog_equals('table_schema', relation.schema) }}\n                    and {{ snowflake__catalog_equals('table_name', relation.identifier) }}\n                )\n            {% elif relation.schema %}\n                (\n                    {{ snowflake__catalog_equals('table_schema', relation.schema) }}\n                )\n            {% else %}\n                {% do exceptions.raise_compiler_error(\n                    '`get_catalog_relations` requires a list of relations, each with a schema'\n                ) %}\n            {% endif %}\n\n            {%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n    )\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__catalog_equals"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.728024, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_relation_last_modified": {"name": "snowflake__get_relation_last_modified", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/metadata.sql", "original_file_path": "macros/metadata.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_relation_last_modified", "macro_sql": "{% macro snowflake__get_relation_last_modified(information_schema, relations) -%}\n\n  {%- call statement('last_modified', fetch_result=True) -%}\n        select table_schema as schema,\n               table_name as identifier,\n               last_altered as last_modified,\n               {{ current_timestamp() }} as snapshotted_at\n        from {{ information_schema }}.tables\n        where (\n          {%- for relation in relations -%}\n            (upper(table_schema) = upper('{{ relation.schema }}') and\n             upper(table_name) = upper('{{ relation.identifier }}')){%- if not loop.last %} or {% endif -%}\n          {%- endfor -%}\n        )\n  {%- endcall -%}\n\n  {{ return(load_result('last_modified')) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7288687, "supported_languages": null}, "macro.dbt_snowflake.snowflake__copy_grants": {"name": "snowflake__copy_grants", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/apply_grants.sql", "original_file_path": "macros/apply_grants.sql", "unique_id": "macro.dbt_snowflake.snowflake__copy_grants", "macro_sql": "{% macro snowflake__copy_grants() %}\n    {% set copy_grants = config.get('copy_grants', False) %}\n    {{ return(copy_grants) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7292347, "supported_languages": null}, "macro.dbt_snowflake.snowflake__support_multiple_grantees_per_dcl_statement": {"name": "snowflake__support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/apply_grants.sql", "original_file_path": "macros/apply_grants.sql", "unique_id": "macro.dbt_snowflake.snowflake__support_multiple_grantees_per_dcl_statement", "macro_sql": "\n\n{%- macro snowflake__support_multiple_grantees_per_dcl_statement() -%}\n    {{ return(False) }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7294095, "supported_languages": null}, "macro.dbt_snowflake.get_column_comment_sql": {"name": "get_column_comment_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.get_column_comment_sql", "macro_sql": "{% macro get_column_comment_sql(column_name, column_dict) -%}\n  {% if (column_name|upper in column_dict) -%}\n    {% set matched_column = column_name|upper -%}\n  {% elif (column_name|lower in column_dict) -%}\n    {% set matched_column = column_name|lower -%}\n  {% elif (column_name in column_dict) -%}\n    {% set matched_column = column_name -%}\n  {% else -%}\n    {% set matched_column = None -%}\n  {% endif -%}\n  {% if matched_column -%}\n    {{ adapter.quote(column_name) }} COMMENT $${{ column_dict[matched_column]['description'] | replace('$', '[$]') }}$$\n  {%- else -%}\n    {{ adapter.quote(column_name) }} COMMENT $$$$\n  {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7324605, "supported_languages": null}, "macro.dbt_snowflake.get_persist_docs_column_list": {"name": "get_persist_docs_column_list", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.get_persist_docs_column_list", "macro_sql": "{% macro get_persist_docs_column_list(model_columns, query_columns) %}\n(\n  {% for column_name in query_columns %}\n    {{ get_column_comment_sql(column_name, model_columns) }}\n    {{- \", \" if not loop.last else \"\" }}\n  {% endfor %}\n)\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.get_column_comment_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7328541, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_columns_in_relation": {"name": "snowflake__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_columns_in_relation", "macro_sql": "{% macro snowflake__get_columns_in_relation(relation) -%}\n  {%- set sql -%}\n    describe table {{ relation.render() }}\n  {%- endset -%}\n  {%- set result = run_query(sql) -%}\n\n  {% set maximum = 10000 %}\n  {% if (result | length) >= maximum %}\n    {% set msg %}\n      Too many columns in relation {{ relation.render() }}! dbt can only get\n      information about relations with fewer than {{ maximum }} columns.\n    {% endset %}\n    {% do exceptions.raise_compiler_error(msg) %}\n  {% endif %}\n\n  {% set columns = [] %}\n  {% for row in result %}\n    {% do columns.append(api.Column.from_description(row['name'], row['type'])) %}\n  {% endfor %}\n  {% do return(columns) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7338452, "supported_languages": null}, "macro.dbt_snowflake.snowflake__show_object_metadata": {"name": "snowflake__show_object_metadata", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__show_object_metadata", "macro_sql": "{% macro snowflake__show_object_metadata(relation) %}\n  {%- set sql -%}\n    show objects in {{ relation.include(identifier=False) }} starts with '{{ relation.identifier }}' limit 1\n  {%- endset -%}\n\n  {%- set result = run_query(sql) -%}\n  {{ return(result) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.734234, "supported_languages": null}, "macro.dbt_snowflake.snowflake__list_schemas": {"name": "snowflake__list_schemas", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__list_schemas", "macro_sql": "{% macro snowflake__list_schemas(database) -%}\n  {# 10k limit from here: https://docs.snowflake.net/manuals/sql-reference/sql/show-schemas.html#usage-notes #}\n  {% set maximum = 10000 %}\n  {% set sql -%}\n    show terse schemas in database {{ database }}\n    limit {{ maximum }}\n  {%- endset %}\n  {% set result = run_query(sql) %}\n  {% if (result | length) >= maximum %}\n    {% set msg %}\n      Too many schemas in database {{ database }}! dbt can only get\n      information about databases with fewer than {{ maximum }} schemas.\n    {% endset %}\n    {% do exceptions.raise_compiler_error(msg) %}\n  {% endif %}\n  {{ return(result) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7349207, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_paginated_relations_array": {"name": "snowflake__get_paginated_relations_array", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_paginated_relations_array", "macro_sql": "{% macro snowflake__get_paginated_relations_array(max_iter, max_results_per_iter, max_total_results, schema_relation, watermark) %}\n\n  {% set paginated_relations = [] %}\n\n  {% for _ in range(0, max_iter) %}\n\n      {% if schema_relation is string %}\n        {%- set paginated_sql -%}\n          show objects in {{ schema_relation }} limit {{ max_results_per_iter }} from '{{ watermark.table_name }}'\n        {%- endset -%}\n      {% else %}\n        {%- set paginated_sql -%}\n          show objects in {{ schema_relation.include(identifier=False) }} limit {{ max_results_per_iter }} from '{{ watermark.table_name }}'\n        {%- endset -%}\n      {% endif -%}\n\n      {%- set paginated_result = run_query(paginated_sql) %}\n      {%- set paginated_n = (paginated_result | length) -%}\n\n      {#\n        terminating condition: if there are 0 records in the result we reached\n        the end exactly on the previous iteration\n      #}\n      {%- if paginated_n == 0 -%}\n        {%- break -%}\n      {%- endif -%}\n\n      {#\n        terminating condition: At some point the user needs to be reasonable with how\n        many objects are contained in their schemas. Since there was already\n        one iteration before attempting pagination, loop.index == max_iter means\n        the limit has been surpassed.\n      #}\n\n      {%- if loop.index == max_iter -%}\n        {%- set msg -%}\n            dbt is currently configured to list a maximum of {{ max_total_results }} objects per schema.\n            {{ schema_relation }} exceeds this limit. If this is expected, you may configure this limit\n            by setting list_relations_per_page and list_relations_page_limit in your project flags.\n            It is recommended to start by increasing list_relations_page_limit to something more than the default of 10.\n        {%- endset -%}\n\n        {% do exceptions.raise_compiler_error(msg) %}\n      {%- endif -%}\n\n      {%- do paginated_relations.append(paginated_result) -%}\n      {% set watermark.table_name = paginated_result.columns[1].values()[-1] %}\n\n      {#\n        terminating condition: paginated_n < max_results_per_iter means we reached the end\n      #}\n      {%- if paginated_n < max_results_per_iter -%}\n         {%- break -%}\n      {%- endif -%}\n    {%- endfor -%}\n\n  {{ return(paginated_relations) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7365265, "supported_languages": null}, "macro.dbt_snowflake.snowflake__list_relations_without_caching": {"name": "snowflake__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__list_relations_without_caching", "macro_sql": "{% macro snowflake__list_relations_without_caching(schema_relation, max_iter=10, max_results_per_iter=10000) %}\n\n  {%- set max_results_per_iter = adapter.config.flags.get('list_relations_per_page', max_results_per_iter) -%}\n  {%- set max_iter = adapter.config.flags.get('list_relations_page_limit', max_iter) -%}\n  {%- set max_total_results = max_results_per_iter * max_iter -%}\n  {%- set sql -%}\n    {% if schema_relation is string %}\n      show objects in {{ schema_relation }} limit {{ max_results_per_iter }};\n    {% else %}\n      show objects in {{ schema_relation.include(identifier=False) }} limit {{ max_results_per_iter }};\n    {% endif -%}\n\n    {# -- Gated for performance reason. If you don't want Iceberg, you shouldn't pay the\n       -- latency penalty. #}\n    {% if adapter.behavior.enable_iceberg_materializations.no_warn %}\n      select all_objects.*, is_iceberg\n      from table(result_scan(last_query_id(-1))) all_objects\n      left join INFORMATION_SCHEMA.tables as all_tables\n        on all_tables.table_name = all_objects.\"name\"\n        and all_tables.table_schema = all_objects.\"schema_name\"\n        and all_tables.table_catalog = all_objects.\"database_name\"\n    {% endif -%}\n  {%- endset -%}\n\n  {%- set result = run_query(sql) -%}\n\n  {%- set n = (result | length) -%}\n  {%- set watermark = namespace(table_name=result.columns[1].values()[-1]) -%}\n  {%- set paginated = namespace(result=[]) -%}\n\n  {% if n >= max_results_per_iter %}\n\n    {% set paginated.result = snowflake__get_paginated_relations_array(\n         max_iter,\n         max_results_per_iter,\n         max_total_results,\n         schema_relation,\n         watermark\n       )\n    %}\n\n  {% endif %}\n\n  {%- set all_results_array = [result] + paginated.result -%}\n  {%- set result = result.merge(all_results_array) -%}\n  {%- do return(result) -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt_snowflake.snowflake__get_paginated_relations_array"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.738307, "supported_languages": null}, "macro.dbt_snowflake.snowflake__check_schema_exists": {"name": "snowflake__check_schema_exists", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__check_schema_exists", "macro_sql": "{% macro snowflake__check_schema_exists(information_schema, schema) -%}\n  {% call statement('check_schema_exists', fetch_result=True) -%}\n        select count(*)\n        from {{ information_schema }}.schemata\n        where upper(schema_name) = upper('{{ schema }}')\n            and upper(catalog_name) = upper('{{ information_schema.database }}')\n  {%- endcall %}\n  {{ return(load_result('check_schema_exists').table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.738752, "supported_languages": null}, "macro.dbt_snowflake.snowflake__alter_column_type": {"name": "snowflake__alter_column_type", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__alter_column_type", "macro_sql": "{% macro snowflake__alter_column_type(relation, column_name, new_column_type) -%}\n  {% call statement('alter_column_type') %}\n    alter {{ relation.get_ddl_prefix_for_alter() }} table {{ relation.render() }} alter {{ adapter.quote(column_name) }} set data type {{ new_column_type }};\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.739139, "supported_languages": null}, "macro.dbt_snowflake.snowflake__alter_relation_comment": {"name": "snowflake__alter_relation_comment", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__alter_relation_comment", "macro_sql": "{% macro snowflake__alter_relation_comment(relation, relation_comment) -%}\n    {%- if relation.is_dynamic_table -%}\n        {%- set relation_type = 'dynamic table' -%}\n    {%- else -%}\n        {%- set relation_type = relation.type -%}\n    {%- endif -%}\n    comment on {{ relation_type }} {{ relation.render() }} IS $${{ relation_comment | replace('$', '[$]') }}$$;\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7395995, "supported_languages": null}, "macro.dbt_snowflake.snowflake__alter_column_comment": {"name": "snowflake__alter_column_comment", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__alter_column_comment", "macro_sql": "{% macro snowflake__alter_column_comment(relation, column_dict) -%}\n    {% set existing_columns = adapter.get_columns_in_relation(relation) | map(attribute=\"name\") | list %}\n    {% if relation.is_dynamic_table -%}\n        {% set relation_type = \"table\" %}\n    {% else -%}\n        {% set relation_type = relation.type %}\n    {% endif %}\n    alter {{ relation.get_ddl_prefix_for_alter() }} {{ relation_type }} {{ relation.render() }} alter\n    {% for column_name in existing_columns if (column_name in existing_columns) or (column_name|lower in existing_columns) %}\n        {{ get_column_comment_sql(column_name, column_dict) }} {{- ',' if not loop.last else ';' }}\n    {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.get_column_comment_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.740468, "supported_languages": null}, "macro.dbt_snowflake.get_current_query_tag": {"name": "get_current_query_tag", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.get_current_query_tag", "macro_sql": "{% macro get_current_query_tag() -%}\n  {{ return(run_query(\"show parameters like 'query_tag' in session\").rows[0]['value']) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7407248, "supported_languages": null}, "macro.dbt_snowflake.set_query_tag": {"name": "set_query_tag", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.set_query_tag", "macro_sql": "{% macro set_query_tag() -%}\n    {{ return(adapter.dispatch('set_query_tag', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.default__set_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.740936, "supported_languages": null}, "macro.dbt_snowflake.snowflake__set_query_tag": {"name": "snowflake__set_query_tag", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__set_query_tag", "macro_sql": "{% macro snowflake__set_query_tag() -%}\n  {% set new_query_tag = config.get('query_tag') %}\n  {% if new_query_tag %}\n    {% set original_query_tag = get_current_query_tag() %}\n    {{ log(\"Setting query_tag to '\" ~ new_query_tag ~ \"'. Will reset to '\" ~ original_query_tag ~ \"' after materialization.\") }}\n    {% do run_query(\"alter session set query_tag = '{}'\".format(new_query_tag)) %}\n    {{ return(original_query_tag)}}\n  {% endif %}\n  {{ return(none)}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.get_current_query_tag", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7415378, "supported_languages": null}, "macro.dbt_snowflake.unset_query_tag": {"name": "unset_query_tag", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.unset_query_tag", "macro_sql": "{% macro unset_query_tag(original_query_tag) -%}\n    {{ return(adapter.dispatch('unset_query_tag', 'dbt')(original_query_tag)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.default__unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7417662, "supported_languages": null}, "macro.dbt_snowflake.snowflake__unset_query_tag": {"name": "snowflake__unset_query_tag", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__unset_query_tag", "macro_sql": "{% macro snowflake__unset_query_tag(original_query_tag) -%}\n  {% set new_query_tag = config.get('query_tag') %}\n  {% if new_query_tag %}\n    {% if original_query_tag %}\n      {{ log(\"Resetting query_tag to '\" ~ original_query_tag ~ \"'.\") }}\n      {% do run_query(\"alter session set query_tag = '{}'\".format(original_query_tag)) %}\n    {% else %}\n      {{ log(\"No original query_tag, unsetting parameter.\") }}\n      {% do run_query(\"alter session unset query_tag\") %}\n    {% endif %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.742391, "supported_languages": null}, "macro.dbt_snowflake.snowflake__alter_relation_add_remove_columns": {"name": "snowflake__alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__alter_relation_add_remove_columns", "macro_sql": "{% macro snowflake__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n    {% if relation.is_dynamic_table -%}\n        {% set relation_type = \"dynamic table\" %}\n    {% else -%}\n        {% set relation_type = relation.type %}\n    {% endif %}\n\n    {% if add_columns %}\n\n    {% set sql -%}\n       alter {{ relation.get_ddl_prefix_for_alter() }} {{ relation_type }} {{ relation.render() }} add column\n          {% for column in add_columns %}\n            {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n          {% endfor %}\n    {%- endset -%}\n\n    {% do run_query(sql) %}\n\n    {% endif %}\n\n    {% if remove_columns %}\n\n    {% set sql -%}\n        alter {{ relation.get_ddl_prefix_for_alter() }} {{ relation_type }} {{ relation.render() }} drop column\n            {% for column in remove_columns %}\n                {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n    {%- endset -%}\n\n    {% do run_query(sql) %}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7436464, "supported_languages": null}, "macro.dbt_snowflake.snowflake_dml_explicit_transaction": {"name": "snowflake_dml_explicit_transaction", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake_dml_explicit_transaction", "macro_sql": "{% macro snowflake_dml_explicit_transaction(dml) %}\n  {#\n    Use this macro to wrap all INSERT, MERGE, UPDATE, DELETE, and TRUNCATE\n    statements before passing them into run_query(), or calling in the 'main' statement\n    of a materialization\n  #}\n  {% set dml_transaction -%}\n    begin;\n    {{ dml }};\n    commit;\n  {%- endset %}\n\n  {% do return(dml_transaction) %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.743936, "supported_languages": null}, "macro.dbt_snowflake.snowflake__truncate_relation": {"name": "snowflake__truncate_relation", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__truncate_relation", "macro_sql": "{% macro snowflake__truncate_relation(relation) -%}\n  {% set truncate_dml %}\n    truncate table {{ relation.render() }}\n  {% endset %}\n  {% call statement('truncate_relation') -%}\n    {{ snowflake_dml_explicit_transaction(truncate_dml) }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_snowflake.snowflake_dml_explicit_transaction"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.744268, "supported_languages": null}, "macro.dbt_snowflake.snowflake__current_timestamp": {"name": "snowflake__current_timestamp", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/timestamps.sql", "original_file_path": "macros/utils/timestamps.sql", "unique_id": "macro.dbt_snowflake.snowflake__current_timestamp", "macro_sql": "{% macro snowflake__current_timestamp() -%}\n  convert_timezone('UTC', current_timestamp())\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7445986, "supported_languages": null}, "macro.dbt_snowflake.snowflake__snapshot_string_as_time": {"name": "snowflake__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/timestamps.sql", "original_file_path": "macros/utils/timestamps.sql", "unique_id": "macro.dbt_snowflake.snowflake__snapshot_string_as_time", "macro_sql": "{% macro snowflake__snapshot_string_as_time(timestamp) -%}\n  {%- set result = \"to_timestamp_ntz('\" ~ timestamp ~ \"')\" -%}\n  {{ return(result) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7448618, "supported_languages": null}, "macro.dbt_snowflake.snowflake__snapshot_get_time": {"name": "snowflake__snapshot_get_time", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/timestamps.sql", "original_file_path": "macros/utils/timestamps.sql", "unique_id": "macro.dbt_snowflake.snowflake__snapshot_get_time", "macro_sql": "{% macro snowflake__snapshot_get_time() -%}\n  to_timestamp_ntz({{ current_timestamp() }})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7450132, "supported_languages": null}, "macro.dbt_snowflake.snowflake__current_timestamp_backcompat": {"name": "snowflake__current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/timestamps.sql", "original_file_path": "macros/utils/timestamps.sql", "unique_id": "macro.dbt_snowflake.snowflake__current_timestamp_backcompat", "macro_sql": "{% macro snowflake__current_timestamp_backcompat() %}\n  current_timestamp::{{ type_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7451563, "supported_languages": null}, "macro.dbt_snowflake.snowflake__current_timestamp_in_utc_backcompat": {"name": "snowflake__current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/timestamps.sql", "original_file_path": "macros/utils/timestamps.sql", "unique_id": "macro.dbt_snowflake.snowflake__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro snowflake__current_timestamp_in_utc_backcompat() %}\n  convert_timezone('UTC', {{ snowflake__current_timestamp_backcompat() }})::{{ type_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__current_timestamp_backcompat", "macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.74533, "supported_languages": null}, "macro.dbt_snowflake.snowflake__bool_or": {"name": "snowflake__bool_or", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt_snowflake.snowflake__bool_or", "macro_sql": "{% macro snowflake__bool_or(expression) -%}\n\n    boolor_agg({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7455392, "supported_languages": null}, "macro.dbt_snowflake.snowflake__safe_cast": {"name": "snowflake__safe_cast", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt_snowflake.snowflake__safe_cast", "macro_sql": "{% macro snowflake__safe_cast(field, type) %}\n    {% if type|upper == \"GEOMETRY\" -%}\n        try_to_geometry({{field}})\n    {% elif type|upper == \"GEOGRAPHY\" -%}\n        try_to_geography({{field}})\n    {% elif type|upper != \"VARIANT\" -%}\n        {#-- Snowflake try_cast does not support casting to variant, and expects the field as a string --#}\n        {% set field_as_string =  dbt.string_literal(field) if field is number else field %}\n        try_cast({{field_as_string}} as {{type}})\n    {% else -%}\n        {{ adapter.dispatch('cast', 'dbt')(field, type) }}\n    {% endif -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.string_literal", "macro.dbt.cast", "macro.dbt_snowflake.snowflake__cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7464216, "supported_languages": null}, "macro.dbt_snowflake.snowflake__array_construct": {"name": "snowflake__array_construct", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt_snowflake.snowflake__array_construct", "macro_sql": "{% macro snowflake__array_construct(inputs, data_type) -%}\n    array_construct( {{ inputs|join(' , ') }} )\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.746681, "supported_languages": null}, "macro.dbt_snowflake.snowflake__right": {"name": "snowflake__right", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt_snowflake.snowflake__right", "macro_sql": "{% macro snowflake__right(string_text, length_expression) %}\n\n    case when {{ length_expression }} = 0\n        then ''\n    else\n        right(\n            {{ string_text }},\n            {{ length_expression }}\n        )\n    end\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7469642, "supported_languages": null}, "macro.dbt_snowflake.snowflake__escape_single_quotes": {"name": "snowflake__escape_single_quotes", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt_snowflake.snowflake__escape_single_quotes", "macro_sql": "{% macro snowflake__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\", \"\\\\'\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7472274, "supported_languages": null}, "macro.dbt_snowflake.optional": {"name": "optional", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/optional.sql", "original_file_path": "macros/utils/optional.sql", "unique_id": "macro.dbt_snowflake.optional", "macro_sql": "{% macro optional(name, value, quote_char = '') %}\n{#-\n--  Insert optional DDL parameters only when their value is provided; makes DDL statements more readable\n--\n--  Args:\n--  - name: the name of the DDL option\n--  - value: the value of the DDL option, may be None\n--  - quote_char: the quote character to use (e.g. string), leave blank if unnecessary (e.g. integer or bool)\n--  Returns:\n--      If the value is not None (e.g. provided by the user), return the option setting DDL\n--      If the value is None, return an empty string\n-#}\n{% if value is not none %}{{ name }} = {{ quote_char }}{{ value }}{{ quote_char }}{% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7476854, "supported_languages": null}, "macro.dbt_snowflake.snowflake__cast": {"name": "snowflake__cast", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/cast.sql", "original_file_path": "macros/utils/cast.sql", "unique_id": "macro.dbt_snowflake.snowflake__cast", "macro_sql": "{% macro snowflake__cast(field, type) %}\n    {% if (type|upper == \"GEOGRAPHY\") -%}\n        to_geography({{field}})\n    {% elif (type|upper == \"GEOMETRY\") -%}\n        to_geometry({{field}})\n    {% else -%}\n        cast({{field}} as {{type}})\n    {% endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7482085, "supported_languages": null}, "macro.dbt_snowflake.dbt_snowflake_get_tmp_relation_type": {"name": "dbt_snowflake_get_tmp_relation_type", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_snowflake.dbt_snowflake_get_tmp_relation_type", "macro_sql": "{% macro dbt_snowflake_get_tmp_relation_type(strategy, unique_key, language) %}\n{%- set tmp_relation_type = config.get('tmp_relation_type') -%}\n  /* {#\n       High-level principles:\n       If we are running multiple statements (DELETE + INSERT),\n       and we want to guarantee identical inputs to both statements,\n       then we must first save the model query results as a temporary table\n       (which presumably comes with a performance cost).\n       If we are running a single statement (MERGE or INSERT alone),\n       we _may_ save the model query definition as a view instead,\n       for (presumably) faster overall incremental processing.\n\n       Low-level specifics:\n       If an invalid option is specified, then we will raise an\n       excpetion with corresponding message.\n\n       Languages other than SQL (like Python) will use a temporary table.\n       With the default strategy of merge, the user may choose between a temporary\n       table and view (defaulting to view).\n\n       The append strategy can use a view because it will run a single INSERT statement.\n\n       When unique_key is none, the delete+insert and microbatch strategies can use a view beacuse a\n       single INSERT statement is run with no DELETES as part of the statement.\n       Otherwise, play it safe by using a temporary table.\n  #} */\n\n  {% if language == \"python\" and tmp_relation_type is not none %}\n    {% do exceptions.raise_compiler_error(\n      \"Python models currently only support 'table' for tmp_relation_type but \"\n       ~ tmp_relation_type ~ \" was specified.\"\n    ) %}\n  {% endif %}\n\n  {% if strategy in [\"delete+insert\", \"microbatch\"] and tmp_relation_type is not none and tmp_relation_type != \"table\" and unique_key is not none %}\n    {% do exceptions.raise_compiler_error(\n      \"In order to maintain consistent results when `unique_key` is not none,\n      the `\" ~ strategy ~ \"` strategy only supports `table` for `tmp_relation_type` but \"\n      ~ tmp_relation_type ~ \" was specified.\"\n      )\n  %}\n  {% endif %}\n\n  {% if language != \"sql\" %}\n    {{ return(\"table\") }}\n  {% elif tmp_relation_type == \"table\" %}\n    {{ return(\"table\") }}\n  {% elif tmp_relation_type == \"view\" %}\n    {{ return(\"view\") }}\n  {% elif strategy in (\"default\", \"merge\", \"append\", \"insert_overwrite\") %}\n    {{ return(\"view\") }}\n  {% elif strategy in [\"delete+insert\", \"microbatch\"] and unique_key is none %}\n    {{ return(\"view\") }}\n  {% else %}\n    {{ return(\"table\") }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7509754, "supported_languages": null}, "macro.dbt_snowflake.materialization_incremental_snowflake": {"name": "materialization_incremental_snowflake", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_snowflake.materialization_incremental_snowflake", "macro_sql": "{% materialization incremental, adapter='snowflake', supported_languages=['sql', 'python'] -%}\n\n  {% set original_query_tag = set_query_tag() %}\n\n  {#-- Set vars --#}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n  {%- set language = model['language'] -%}\n\n  {%- set identifier = this.name -%}\n\n  {%- set target_relation = api.Relation.create(\n\tidentifier=identifier,\n\tschema=schema,\n\tdatabase=database,\n\ttype='table',\n\ttable_format=config.get('table_format', 'default')\n    ) -%}\n\n  {% set existing_relation = load_relation(this) %}\n\n  {#-- The temp relation will be a view (faster) or temp table, depending on upsert/merge strategy --#}\n  {%- set unique_key = config.get('unique_key') -%}\n  {% set incremental_strategy = config.get('incremental_strategy') or 'default' %}\n  {% set tmp_relation_type = dbt_snowflake_get_tmp_relation_type(incremental_strategy, unique_key, language) %}\n  {% set tmp_relation = make_temp_relation(this).incorporate(type=tmp_relation_type) %}\n\n  {% set grant_config = config.get('grants') %}\n\n  {% set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  {% if existing_relation is none %}\n    {%- call statement('main', language=language) -%}\n      {{ create_table_as(False, target_relation, compiled_code, language) }}\n    {%- endcall -%}\n\n  {% elif existing_relation.is_view %}\n    {#-- Can't overwrite a view with a table - we must drop --#}\n    {{ log(\"Dropping relation \" ~ target_relation ~ \" because it is a view and this model is a table.\") }}\n    {% do adapter.drop_relation(existing_relation) %}\n    {%- call statement('main', language=language) -%}\n      {{ create_table_as(False, target_relation, compiled_code, language) }}\n    {%- endcall -%}\n\n  {% elif full_refresh_mode %}\n    {% if target_relation.needs_to_drop(existing_relation) %}\n      {{ drop_relation_if_exists(existing_relation) }}\n    {% endif %}\n    {%- call statement('main', language=language) -%}\n      {{ create_table_as(False, target_relation, compiled_code, language) }}\n    {%- endcall -%}\n\n  {% elif target_relation.table_format != existing_relation.table_format %}\n    {% do exceptions.raise_compiler_error(\n        \"Unable to alter incremental model `\" ~ target_relation.identifier  ~ \"` to '\" ~ target_relation.table_format ~ \" table format due to Snowflake limitation. Please execute with --full-refresh to drop the table and recreate in new table format.'\"\n      )\n    %}\n\n  {% else %}\n    {#-- Create the temp relation, either as a view or as a temp table --#}\n    {% if tmp_relation_type == 'view' %}\n        {%- call statement('create_tmp_relation') -%}\n          {{ snowflake__create_view_as_with_temp_flag(tmp_relation, compiled_code, True) }}\n        {%- endcall -%}\n    {% else %}\n        {%- call statement('create_tmp_relation', language=language) -%}\n          {{ create_table_as(True, tmp_relation, compiled_code, language) }}\n        {%- endcall -%}\n    {% endif %}\n\n    {% do adapter.expand_target_column_types(\n           from_relation=tmp_relation,\n           to_relation=target_relation) %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, tmp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n\n    {#-- Get the incremental_strategy, the macro to use for the strategy, and build the sql --#}\n    {% set incremental_predicates = config.get('predicates', none) or config.get('incremental_predicates', none) %}\n    {% set strategy_sql_macro_func = adapter.get_incremental_strategy_macro(context, incremental_strategy) %}\n    {% set strategy_arg_dict = ({'target_relation': target_relation, 'temp_relation': tmp_relation, 'unique_key': unique_key, 'dest_columns': dest_columns, 'incremental_predicates': incremental_predicates }) %}\n\n    {%- call statement('main') -%}\n      {{ strategy_sql_macro_func(strategy_arg_dict) }}\n    {%- endcall -%}\n  {% endif %}\n\n  {% do drop_relation_if_exists(tmp_relation) %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {% set target_relation = target_relation.incorporate(type='table') %}\n\n  {% set should_revoke =\n   should_revoke(existing_relation.is_table, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% do unset_query_tag(original_query_tag) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt_snowflake.dbt_snowflake_get_tmp_relation_type", "macro.dbt.make_temp_relation", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.drop_relation_if_exists", "macro.dbt_snowflake.snowflake__create_view_as_with_temp_flag", "macro.dbt.process_schema_changes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7555358, "supported_languages": ["sql", "python"]}, "macro.dbt_snowflake.snowflake__get_incremental_default_sql": {"name": "snowflake__get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_incremental_default_sql", "macro_sql": "{% macro snowflake__get_incremental_default_sql(arg_dict) %}\n  {{ return(get_incremental_merge_sql(arg_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_incremental_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.755786, "supported_languages": null}, "macro.dbt_snowflake.materialization_view_snowflake": {"name": "materialization_view_snowflake", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/view.sql", "original_file_path": "macros/materializations/view.sql", "unique_id": "macro.dbt_snowflake.materialization_view_snowflake", "macro_sql": "{% materialization view, adapter='snowflake' -%}\n\n    {% set original_query_tag = set_query_tag() %}\n    {% set to_return = snowflake__create_or_replace_view() %}\n\n    {% set target_relation = this.incorporate(type='view') %}\n\n    {% do persist_docs(target_relation, model, for_columns=false) %}\n\n    {% do unset_query_tag(original_query_tag) %}\n\n    {% do return(to_return) %}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt_snowflake.snowflake__create_or_replace_view", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7564905, "supported_languages": ["sql"]}, "macro.dbt_snowflake.materialization_test_snowflake": {"name": "materialization_test_snowflake", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/test.sql", "original_file_path": "macros/materializations/test.sql", "unique_id": "macro.dbt_snowflake.materialization_test_snowflake", "macro_sql": "{%- materialization test, adapter='snowflake' -%}\n\n    {% set original_query_tag = set_query_tag() %}\n    {% set relations = materialization_test_default() %}\n    {% do unset_query_tag(original_query_tag) %}\n    {{ return(relations) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.materialization_test_default", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7569542, "supported_languages": ["sql"]}, "macro.dbt_snowflake.snowflake__load_csv_rows": {"name": "snowflake__load_csv_rows", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "unique_id": "macro.dbt_snowflake.snowflake__load_csv_rows", "macro_sql": "{% macro snowflake__load_csv_rows(model, agate_table) %}\n    {% set batch_size = get_batch_size() %}\n    {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n    {% set bindings = [] %}\n\n    {% set statements = [] %}\n\n    {% for chunk in agate_table.rows | batch(batch_size) %}\n        {% set bindings = [] %}\n\n        {% for row in chunk %}\n            {% do bindings.extend(row) %}\n        {% endfor %}\n\n        {% set sql %}\n            insert into {{ this.render() }} ({{ cols_sql }}) values\n            {% for row in chunk -%}\n                ({%- for column in agate_table.column_names -%}\n                    %s\n                    {%- if not loop.last%},{%- endif %}\n                {%- endfor -%})\n                {%- if not loop.last%},{%- endif %}\n            {%- endfor %}\n        {% endset %}\n\n        {% do adapter.add_query('BEGIN', auto_begin=False) %}\n        {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n        {% do adapter.add_query('COMMIT', auto_begin=False) %}\n\n        {% if loop.index0 == 0 %}\n            {% do statements.append(sql) %}\n        {% endif %}\n    {% endfor %}\n\n    {# Return SQL so we can render it out into the compiled files #}\n    {{ return(statements[0]) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.75899, "supported_languages": null}, "macro.dbt_snowflake.materialization_seed_snowflake": {"name": "materialization_seed_snowflake", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "unique_id": "macro.dbt_snowflake.materialization_seed_snowflake", "macro_sql": "{% materialization seed, adapter='snowflake' %}\n    {% set original_query_tag = set_query_tag() %}\n\n    {% set relations = materialization_seed_default() %}\n\n    {% do unset_query_tag(original_query_tag) %}\n\n    {{ return(relations) }}\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.materialization_seed_default", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.759381, "supported_languages": ["sql"]}, "macro.dbt_snowflake.materialization_snapshot_snowflake": {"name": "materialization_snapshot_snowflake", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "unique_id": "macro.dbt_snowflake.materialization_snapshot_snowflake", "macro_sql": "{% materialization snapshot, adapter='snowflake' %}\n    {% set original_query_tag = set_query_tag() %}\n    {% set relations = materialization_snapshot_default() %}\n\n    {% do unset_query_tag(original_query_tag) %}\n\n    {{ return(relations) }}\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.materialization_snapshot_default", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7598374, "supported_languages": ["sql"]}, "macro.dbt_snowflake.materialization_dynamic_table_snowflake": {"name": "materialization_dynamic_table_snowflake", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/dynamic_table.sql", "original_file_path": "macros/materializations/dynamic_table.sql", "unique_id": "macro.dbt_snowflake.materialization_dynamic_table_snowflake", "macro_sql": "{% materialization dynamic_table, adapter='snowflake' %}\n\n    {% set query_tag = set_query_tag() %}\n\n    {% set existing_relation = load_cached_relation(this) %}\n    {% set target_relation = this.incorporate(type=this.DynamicTable) %}\n\n    {{ run_hooks(pre_hooks) }}\n\n    {% set build_sql = dynamic_table_get_build_sql(existing_relation, target_relation) %}\n\n    {% if build_sql == '' %}\n        {{ dynamic_table_execute_no_op(target_relation) }}\n    {% else %}\n        {{ dynamic_table_execute_build_sql(build_sql, existing_relation, target_relation) }}\n    {% endif %}\n\n    {{ run_hooks(post_hooks) }}\n\n    {% do unset_query_tag(query_tag) %}\n\n    {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.load_cached_relation", "macro.dbt.run_hooks", "macro.dbt_snowflake.dynamic_table_get_build_sql", "macro.dbt_snowflake.dynamic_table_execute_no_op", "macro.dbt_snowflake.dynamic_table_execute_build_sql", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7614062, "supported_languages": ["sql"]}, "macro.dbt_snowflake.dynamic_table_get_build_sql": {"name": "dynamic_table_get_build_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/dynamic_table.sql", "original_file_path": "macros/materializations/dynamic_table.sql", "unique_id": "macro.dbt_snowflake.dynamic_table_get_build_sql", "macro_sql": "{% macro dynamic_table_get_build_sql(existing_relation, target_relation) %}\n\n    {% set full_refresh_mode = should_full_refresh() %}\n\n    -- determine the scenario we're in: create, full_refresh, alter, refresh data\n    {% if existing_relation is none %}\n        {% set build_sql = get_create_sql(target_relation, sql) %}\n    {% elif full_refresh_mode or not existing_relation.is_dynamic_table %}\n        {% set build_sql = get_replace_sql(existing_relation, target_relation, sql) %}\n    {% else %}\n\n        -- get config options\n        {% set on_configuration_change = config.get('on_configuration_change') %}\n        {% set configuration_changes = snowflake__get_dynamic_table_configuration_changes(existing_relation, config) %}\n\n        {% if configuration_changes is none %}\n            {% set build_sql = '' %}\n            {{ exceptions.warn(\"No configuration changes were identified on: `\" ~ target_relation ~ \"`. Continuing.\") }}\n\n        {% elif on_configuration_change == 'apply' %}\n            {% set build_sql = snowflake__get_alter_dynamic_table_as_sql(existing_relation, configuration_changes, target_relation, sql) %}\n        {% elif on_configuration_change == 'continue' %}\n            {% set build_sql = '' %}\n            {{ exceptions.warn(\"Configuration changes were identified and `on_configuration_change` was set to `continue` for `\" ~ target_relation ~ \"`\") }}\n        {% elif on_configuration_change == 'fail' %}\n            {{ exceptions.raise_fail_fast_error(\"Configuration changes were identified and `on_configuration_change` was set to `fail` for `\" ~ target_relation ~ \"`\") }}\n\n        {% else %}\n            -- this only happens if the user provides a value other than `apply`, 'continue', 'fail'\n            {{ exceptions.raise_compiler_error(\"Unexpected configuration scenario: `\" ~ on_configuration_change ~ \"`\") }}\n\n        {% endif %}\n\n    {% endif %}\n\n    {% do return(build_sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.get_create_sql", "macro.dbt.get_replace_sql", "macro.dbt_snowflake.snowflake__get_dynamic_table_configuration_changes", "macro.dbt_snowflake.snowflake__get_alter_dynamic_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7630143, "supported_languages": null}, "macro.dbt_snowflake.dynamic_table_execute_no_op": {"name": "dynamic_table_execute_no_op", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/dynamic_table.sql", "original_file_path": "macros/materializations/dynamic_table.sql", "unique_id": "macro.dbt_snowflake.dynamic_table_execute_no_op", "macro_sql": "{% macro dynamic_table_execute_no_op(relation) %}\n    {% do store_raw_result(\n        name=\"main\",\n        message=\"skip \" ~ relation,\n        code=\"skip\",\n        rows_affected=\"-1\"\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7633052, "supported_languages": null}, "macro.dbt_snowflake.dynamic_table_execute_build_sql": {"name": "dynamic_table_execute_build_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/dynamic_table.sql", "original_file_path": "macros/materializations/dynamic_table.sql", "unique_id": "macro.dbt_snowflake.dynamic_table_execute_build_sql", "macro_sql": "{% macro dynamic_table_execute_build_sql(build_sql, existing_relation, target_relation) %}\n\n    {% set grant_config = config.get('grants') %}\n\n    {% call statement(name=\"main\") %}\n        {{ build_sql }}\n    {% endcall %}\n\n    {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n    {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n    {% do persist_docs(target_relation, model) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7638948, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_dynamic_table_configuration_changes": {"name": "snowflake__get_dynamic_table_configuration_changes", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/dynamic_table.sql", "original_file_path": "macros/materializations/dynamic_table.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_dynamic_table_configuration_changes", "macro_sql": "{% macro snowflake__get_dynamic_table_configuration_changes(existing_relation, new_config) -%}\n    {% set _existing_dynamic_table = snowflake__describe_dynamic_table(existing_relation) %}\n    {% set _configuration_changes = existing_relation.dynamic_table_config_changeset(_existing_dynamic_table, new_config.model) %}\n    {% do return(_configuration_changes) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__describe_dynamic_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7642574, "supported_languages": null}, "macro.dbt_snowflake.materialization_table_snowflake": {"name": "materialization_table_snowflake", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/table.sql", "original_file_path": "macros/materializations/table.sql", "unique_id": "macro.dbt_snowflake.materialization_table_snowflake", "macro_sql": "{% materialization table, adapter='snowflake', supported_languages=['sql', 'python']%}\n\n  {% set original_query_tag = set_query_tag() %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set language = model['language'] -%}\n\n  {% set grant_config = config.get('grants') %}\n\n  {%- set existing_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(\n\tidentifier=identifier,\n\tschema=schema,\n\tdatabase=database,\n\ttype='table',\n\ttable_format=config.get('table_format', 'default')\n    ) -%}\n\n  {{ run_hooks(pre_hooks) }}\n\n  {% if target_relation.needs_to_drop(existing_relation) %}\n    {{ drop_relation_if_exists(existing_relation) }}\n  {% endif %}\n\n  {% call statement('main', language=language) -%}\n      {{ create_table_as(False, target_relation, compiled_code, language) }}\n  {%- endcall %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% do unset_query_tag(original_query_tag) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7663863, "supported_languages": ["sql", "python"]}, "macro.dbt_snowflake.py_write_table": {"name": "py_write_table", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/table.sql", "original_file_path": "macros/materializations/table.sql", "unique_id": "macro.dbt_snowflake.py_write_table", "macro_sql": "{% macro py_write_table(compiled_code, target_relation, temporary=False, table_type=none) %}\n{#- The following logic is only for backwards-compatiblity with deprecated `temporary` parameter -#}\n{% if table_type is not none %}\n    {#- Just use the table_type as-is -#}\n{% elif temporary -%}\n    {#- Case 1 when the deprecated `temporary` parameter is used without the replacement `table_type` parameter -#}\n    {%- set table_type = \"temporary\" -%}\n{% else %}\n    {#- Case 2 when the deprecated `temporary` parameter is used without the replacement `table_type` parameter -#}\n    {#- Snowflake treats \"\" as meaning \"permanent\" -#}\n    {%- set table_type = \"\" -%}\n{%- endif %}\n{{ compiled_code }}\ndef materialize(session, df, target_relation):\n    # make sure pandas exists\n    import importlib.util\n    package_name = 'pandas'\n    if importlib.util.find_spec(package_name):\n        import pandas\n        if isinstance(df, pandas.core.frame.DataFrame):\n          session.use_database(target_relation.database)\n          session.use_schema(target_relation.schema)\n          # session.write_pandas does not have overwrite function\n          df = session.createDataFrame(df)\n    {% set target_relation_name = resolve_model_name(target_relation) %}\n    df.write.mode(\"overwrite\").save_as_table('{{ target_relation_name }}', table_type='{{table_type}}')\n\ndef main(session):\n    dbt = dbtObj(session.table)\n    df = model(dbt, session)\n    materialize(session, df, dbt.this)\n    return \"OK\"\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7670522, "supported_languages": null}, "macro.dbt_snowflake.snowflake__can_clone_table": {"name": "snowflake__can_clone_table", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/clone.sql", "original_file_path": "macros/materializations/clone.sql", "unique_id": "macro.dbt_snowflake.snowflake__can_clone_table", "macro_sql": "{% macro snowflake__can_clone_table() %}\n    {{ return(True) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7673419, "supported_languages": null}, "macro.dbt_snowflake.snowflake__create_or_replace_clone": {"name": "snowflake__create_or_replace_clone", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/clone.sql", "original_file_path": "macros/materializations/clone.sql", "unique_id": "macro.dbt_snowflake.snowflake__create_or_replace_clone", "macro_sql": "{% macro snowflake__create_or_replace_clone(this_relation, defer_relation) %}\n    create or replace\n      {{ \"transient\" if config.get(\"transient\", true) }}\n      table {{ this_relation }}\n      clone {{ defer_relation }}\n      {{ \"copy grants\" if config.get(\"copy_grants\", false) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7677157, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_merge_sql": {"name": "snowflake__get_merge_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/incremental/merge.sql", "original_file_path": "macros/materializations/incremental/merge.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_merge_sql", "macro_sql": "{% macro snowflake__get_merge_sql(target, source_sql, unique_key, dest_columns, incremental_predicates) -%}\n\n    {#\n       Workaround for Snowflake not being happy with a merge on a constant-false predicate.\n       When no unique_key is provided, this macro will do a regular insert. If a unique_key\n       is provided, then this macro will do a proper merge instead.\n    #}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute='name')) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {%- set dml -%}\n    {%- if unique_key is none -%}\n\n        {{ sql_header if sql_header is not none }}\n\n        insert into {{ target }} ({{ dest_cols_csv }})\n        (\n            select {{ dest_cols_csv }}\n            from {{ source_sql }}\n        )\n\n    {%- else -%}\n\n        {{ default__get_merge_sql(target, source_sql, unique_key, dest_columns, incremental_predicates) }}\n\n    {%- endif -%}\n    {%- endset -%}\n\n    {% do return(snowflake_dml_explicit_transaction(dml)) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt.default__get_merge_sql", "macro.dbt_snowflake.snowflake_dml_explicit_transaction"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7691364, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_delete_insert_merge_sql": {"name": "snowflake__get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/incremental/merge.sql", "original_file_path": "macros/materializations/incremental/merge.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_delete_insert_merge_sql", "macro_sql": "{% macro snowflake__get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) %}\n    {% set dml = default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) %}\n    {% do return(snowflake_dml_explicit_transaction(dml)) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql", "macro.dbt_snowflake.snowflake_dml_explicit_transaction"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.769537, "supported_languages": null}, "macro.dbt_snowflake.snowflake__snapshot_merge_sql": {"name": "snowflake__snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/incremental/merge.sql", "original_file_path": "macros/materializations/incremental/merge.sql", "unique_id": "macro.dbt_snowflake.snowflake__snapshot_merge_sql", "macro_sql": "{% macro snowflake__snapshot_merge_sql(target, source, insert_cols) %}\n    {% set dml = default__snapshot_merge_sql(target, source, insert_cols) %}\n    {% do return(snowflake_dml_explicit_transaction(dml)) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_merge_sql", "macro.dbt_snowflake.snowflake_dml_explicit_transaction"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.769862, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_incremental_append_sql": {"name": "snowflake__get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/incremental/merge.sql", "original_file_path": "macros/materializations/incremental/merge.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_incremental_append_sql", "macro_sql": "{% macro snowflake__get_incremental_append_sql(get_incremental_append_sql) %}\n    {% set dml = default__get_incremental_append_sql(get_incremental_append_sql) %}\n    {% do return(snowflake_dml_explicit_transaction(dml)) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_append_sql", "macro.dbt_snowflake.snowflake_dml_explicit_transaction"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7701266, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_incremental_microbatch_sql": {"name": "snowflake__get_incremental_microbatch_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/incremental/merge.sql", "original_file_path": "macros/materializations/incremental/merge.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_incremental_microbatch_sql", "macro_sql": "{% macro snowflake__get_incremental_microbatch_sql(arg_dict) %}\n    {%- set target = arg_dict[\"target_relation\"] -%}\n    {%- set source = arg_dict[\"temp_relation\"] -%}\n    {%- set dest_columns = arg_dict[\"dest_columns\"] -%}\n    {%- set incremental_predicates = [] if arg_dict.get('incremental_predicates') is none else arg_dict.get('incremental_predicates') -%}\n\n    {#-- Add additional incremental_predicates to filter for batch --#}\n    {% if model.batch and model.batch.event_time_start -%}\n        {% do incremental_predicates.append(\"DBT_INTERNAL_TARGET.\" ~ model.config.event_time ~ \" >= to_timestamp_tz('\" ~ model.config.__dbt_internal_microbatch_event_time_start ~ \"')\") %}\n    {% endif %}\n    {% if model.batch and model.batch.event_time_end -%}\n        {% do incremental_predicates.append(\"DBT_INTERNAL_TARGET.\" ~ model.config.event_time ~ \" < to_timestamp_tz('\" ~ model.config.__dbt_internal_microbatch_event_time_end ~ \"')\") %}\n    {% endif %}\n    {% do arg_dict.update({'incremental_predicates': incremental_predicates}) %}\n\n    delete from {{ target }} DBT_INTERNAL_TARGET\n    where (\n    {% for predicate in incremental_predicates %}\n        {%- if not loop.first %}and {% endif -%} {{ predicate }}\n    {% endfor %}\n    );\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7716353, "supported_languages": null}, "macro.dbt_snowflake.get_incremental_insert_overwrite_sql": {"name": "get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/incremental/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental/insert_overwrite.sql", "unique_id": "macro.dbt_snowflake.get_incremental_insert_overwrite_sql", "macro_sql": "{% macro get_incremental_insert_overwrite_sql(arg_dict) -%}\n  {{ adapter.dispatch('insert_overwrite_get_sql', 'dbt')(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"]) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__insert_overwrite_get_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7722404, "supported_languages": null}, "macro.dbt_snowflake.snowflake__insert_overwrite_get_sql": {"name": "snowflake__insert_overwrite_get_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/incremental/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental/insert_overwrite.sql", "unique_id": "macro.dbt_snowflake.snowflake__insert_overwrite_get_sql", "macro_sql": "{% macro snowflake__insert_overwrite_get_sql(target, source, unique_key, dest_columns) -%}\n\n    {%- set dml -%}\n\n    {%- set overwrite_columns = config.get('overwrite_columns', []) -%}\n\n    {{ config.get('sql_header', '') }}\n\n    {% set target_columns_list = '(' ~ ', '.join(overwrite_columns) ~ ')' if overwrite_columns else '' %}\n    {% set source_query_columns_list = ', '.join(overwrite_columns) if overwrite_columns else '*' %}\n    insert overwrite into {{ target.render() }} {{ target_columns_list }}\n        select {{ source_query_columns_list }}\n        from {{ source.render() }}\n\n    {%- endset -%}\n\n    {% do return(snowflake_dml_explicit_transaction(dml)) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake_dml_explicit_transaction"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7730763, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_create_backup_sql": {"name": "snowflake__get_create_backup_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/create_backup.sql", "original_file_path": "macros/relations/create_backup.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_create_backup_sql", "macro_sql": "{%- macro snowflake__get_create_backup_sql(relation) -%}\n\n    -- get the standard backup name\n    {% set backup_relation = make_backup_relation(relation, relation.type) %}\n\n    -- drop any pre-existing backup\n    {{ get_drop_sql(backup_relation) }};\n\n    -- use `render` to ensure that the fully qualified name is used\n    {{ get_rename_sql(relation, backup_relation.render()) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_backup_relation", "macro.dbt.get_drop_sql", "macro.dbt.get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7735355, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_replace_sql": {"name": "snowflake__get_replace_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/replace.sql", "original_file_path": "macros/relations/replace.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_replace_sql", "macro_sql": "{% macro snowflake__get_replace_sql(existing_relation, target_relation, sql) %}\n\n    {% if existing_relation.is_dynamic_table and target_relation.is_dynamic_table %}\n        {{ snowflake__get_replace_dynamic_table_sql(target_relation, sql) }}\n\n    {% else %}\n        {{ default__get_replace_sql(existing_relation, target_relation, sql) }}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_replace_dynamic_table_sql", "macro.dbt.default__get_replace_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7740078, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_rename_intermediate_sql": {"name": "snowflake__get_rename_intermediate_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/rename_intermediate.sql", "original_file_path": "macros/relations/rename_intermediate.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_rename_intermediate_sql", "macro_sql": "{%- macro snowflake__get_rename_intermediate_sql(relation) -%}\n\n    -- get the standard intermediate name\n    {% set intermediate_relation = make_intermediate_relation(relation) %}\n\n    -- use `render` to ensure that the fully qualified name is used\n    {{ get_rename_sql(intermediate_relation, relation.render()) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_intermediate_relation", "macro.dbt.get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.774342, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_create_sql": {"name": "snowflake__get_create_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/create.sql", "original_file_path": "macros/relations/create.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_create_sql", "macro_sql": "{% macro snowflake__get_create_sql(relation, sql) %}\n\n    {% if relation.is_dynamic_table %}\n        {{ snowflake__get_create_dynamic_table_as_sql(relation, sql) }}\n\n    {% else %}\n        {{ default__get_create_sql(relation, sql) }}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_create_dynamic_table_as_sql", "macro.dbt.default__get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7752237, "supported_languages": null}, "macro.dbt_snowflake.snowflake__rename_relation": {"name": "snowflake__rename_relation", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt_snowflake.snowflake__rename_relation", "macro_sql": "{% macro snowflake__rename_relation(from_relation, to_relation) -%}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ to_relation }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7756095, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_drop_sql": {"name": "snowflake__get_drop_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_drop_sql", "macro_sql": "{% macro snowflake__get_drop_sql(relation) %}\n\n    {% if relation.is_dynamic_table %}\n        {{ snowflake__get_drop_dynamic_table_sql(relation) }}\n\n    {% else %}\n        {{ default__get_drop_sql(relation) }}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_drop_dynamic_table_sql", "macro.dbt.default__get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7759962, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_replace_table_sql": {"name": "snowflake__get_replace_table_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/table/replace.sql", "original_file_path": "macros/relations/table/replace.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_replace_table_sql", "macro_sql": "{% macro snowflake__get_replace_table_sql(relation, sql) %}\n    {{ snowflake__create_table_as(False, relation, sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7762496, "supported_languages": null}, "macro.dbt_snowflake.snowflake__create_table_as": {"name": "snowflake__create_table_as", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt_snowflake.snowflake__create_table_as", "macro_sql": "{% macro snowflake__create_table_as(temporary, relation, compiled_code, language='sql') -%}\n\n  {%- if relation.is_iceberg_format and not adapter.behavior.enable_iceberg_materializations.no_warn %}\n    {% do exceptions.raise_compiler_error('Was unable to create model as Iceberg Table Format. Please set the `enable_iceberg_materializations` behavior flag to True in your dbt_project.yml. For more information, go to https://docs.getdbt.com/reference/resource-configs/snowflake-configs#iceberg-table-format') %}\n  {%- endif %}\n\n  {%- set materialization_prefix = relation.get_ddl_prefix_for_create(config.model.config, temporary) -%}\n  {%- set alter_prefix = relation.get_ddl_prefix_for_alter() -%}\n\n  {# Generate DDL/DML #}\n  {%- if language == 'sql' -%}\n    {%- set cluster_by_keys = config.get('cluster_by', default=none) -%}\n    {%- set enable_automatic_clustering = config.get('automatic_clustering', default=false) -%}\n    {%- set copy_grants = config.get('copy_grants', default=false) -%}\n\n    {%- if cluster_by_keys is not none and cluster_by_keys is string -%}\n      {%- set cluster_by_keys = [cluster_by_keys] -%}\n    {%- endif -%}\n    {%- if cluster_by_keys is not none -%}\n      {%- set cluster_by_string = cluster_by_keys|join(\", \")-%}\n    {% else %}\n      {%- set cluster_by_string = none -%}\n    {%- endif -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none }}\n\n        create or replace {{ materialization_prefix }} table {{ relation }}\n        {%- if relation.is_iceberg_format %}\n          {#\n            Valid DDL in CTAS statements. Plain create statements have a different order.\n            https://docs.snowflake.com/en/sql-reference/sql/create-iceberg-table\n          #}\n          {{ relation.get_iceberg_ddl_options(config.model.config) }}\n        {%- endif -%}\n\n        {%- set contract_config = config.get('contract') -%}\n        {%- if contract_config.enforced -%}\n          {{ get_assert_columns_equivalent(sql) }}\n          {{ get_table_columns_and_constraints() }}\n          {% set compiled_code = get_select_subquery(compiled_code) %}\n        {% endif %}\n        {% if copy_grants and not temporary -%} copy grants {%- endif %} as\n        (\n          {%- if cluster_by_string is not none -%}\n            select * from (\n              {{ compiled_code }}\n              ) order by ({{ cluster_by_string }})\n          {%- else -%}\n            {{ compiled_code }}\n          {%- endif %}\n        );\n      {% if cluster_by_string is not none and not temporary -%}\n        alter {{ alter_prefix }} table {{relation}} cluster by ({{cluster_by_string}});\n      {%- endif -%}\n      {% if enable_automatic_clustering and cluster_by_string is not none and not temporary %}\n        alter {{ alter_prefix }} table {{relation}} resume recluster;\n      {%- endif -%}\n\n  {%- elif language == 'python' -%}\n    {%- if relation.is_iceberg_format %}\n      {% do exceptions.raise_compiler_error('Iceberg is incompatible with Python models. Please use a SQL model for the iceberg format.') %}\n    {%- endif %}\n    {{ py_write_table(compiled_code=compiled_code, target_relation=relation, table_type=relation.get_ddl_prefix_for_create(config.model.config, temporary)) }}\n  {%- else -%}\n      {% do exceptions.raise_compiler_error(\"snowflake__create_table_as macro didn't get supported language, it got %s\" % language) %}\n  {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt.get_select_subquery", "macro.dbt_snowflake.py_write_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7797165, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_rename_table_sql": {"name": "snowflake__get_rename_table_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/table/rename.sql", "original_file_path": "macros/relations/table/rename.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_rename_table_sql", "macro_sql": "{%- macro snowflake__get_rename_table_sql(relation, new_name) -%}\n    /*\n    Rename or move a table to the new name.\n\n    Args:\n        relation: SnowflakeRelation - relation to be renamed\n        new_name: Union[str, SnowflakeRelation] - new name for `relation`\n            if providing a string, the default database/schema will be used if that string is just an identifier\n            if providing a SnowflakeRelation, `render` will be used to produce a fully qualified name\n    Returns: templated string\n    */\n    alter table {{ relation }} rename to {{ new_name }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7800546, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_drop_table_sql": {"name": "snowflake__get_drop_table_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/table/drop.sql", "original_file_path": "macros/relations/table/drop.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_drop_table_sql", "macro_sql": "{% macro snowflake__get_drop_table_sql(relation) %}\n    drop table if exists {{ relation }} cascade\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.780256, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_replace_view_sql": {"name": "snowflake__get_replace_view_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_replace_view_sql", "macro_sql": "{% macro snowflake__get_replace_view_sql(relation, sql) %}\n    {{ snowflake__create_view_as(relation, sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7805119, "supported_languages": null}, "macro.dbt_snowflake.snowflake__create_view_as_with_temp_flag": {"name": "snowflake__create_view_as_with_temp_flag", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt_snowflake.snowflake__create_view_as_with_temp_flag", "macro_sql": "{% macro snowflake__create_view_as_with_temp_flag(relation, sql, is_temporary=False) -%}\n  {%- set secure = config.get('secure', default=false) -%}\n  {%- set copy_grants = config.get('copy_grants', default=false) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create or replace {% if secure -%}\n    secure\n  {%- endif %} {% if is_temporary -%}\n    temporary\n  {%- endif %} view {{ relation }}\n  {% if config.persist_column_docs() -%}\n    {% set model_columns = model.columns %}\n    {% set query_columns = get_columns_in_query(sql) %}\n    {{ get_persist_docs_column_list(model_columns, query_columns) }}\n\n  {%- endif %}\n  {%- set contract_config = config.get('contract') -%}\n  {%- if contract_config.enforced -%}\n    {{ get_assert_columns_equivalent(sql) }}\n  {%- endif %}\n  {% if copy_grants -%} copy grants {%- endif %} as (\n    {{ sql }}\n  );\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_columns_in_query", "macro.dbt_snowflake.get_persist_docs_column_list", "macro.dbt.get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.782149, "supported_languages": null}, "macro.dbt_snowflake.snowflake__create_view_as": {"name": "snowflake__create_view_as", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt_snowflake.snowflake__create_view_as", "macro_sql": "{% macro snowflake__create_view_as(relation, sql) -%}\n  {{ snowflake__create_view_as_with_temp_flag(relation, sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__create_view_as_with_temp_flag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.782348, "supported_languages": null}, "macro.dbt_snowflake.snowflake__create_or_replace_view": {"name": "snowflake__create_or_replace_view", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt_snowflake.snowflake__create_or_replace_view", "macro_sql": "{% macro snowflake__create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and not old_relation.is_view -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {% set should_revoke = should_revoke(exists_as_view, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.783694, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_rename_view_sql": {"name": "snowflake__get_rename_view_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/view/rename.sql", "original_file_path": "macros/relations/view/rename.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_rename_view_sql", "macro_sql": "{%- macro snowflake__get_rename_view_sql(relation, new_name) -%}\n    /*\n    Rename or move a view to the new name.\n\n    Args:\n        relation: SnowflakeRelation - relation to be renamed\n        new_name: Union[str, SnowflakeRelation] - new name for `relation`\n            if providing a string, the default database/schema will be used if that string is just an identifier\n            if providing a SnowflakeRelation, `render` will be used to produce a fully qualified name\n    Returns: templated string\n    */\n    alter view {{ relation }} rename to {{ new_name }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7840047, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_drop_view_sql": {"name": "snowflake__get_drop_view_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/view/drop.sql", "original_file_path": "macros/relations/view/drop.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_drop_view_sql", "macro_sql": "{% macro snowflake__get_drop_view_sql(relation) %}\n    drop view if exists {{ relation }} cascade\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.784205, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_alter_dynamic_table_as_sql": {"name": "snowflake__get_alter_dynamic_table_as_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/dynamic_table/alter.sql", "original_file_path": "macros/relations/dynamic_table/alter.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_alter_dynamic_table_as_sql", "macro_sql": "{% macro snowflake__get_alter_dynamic_table_as_sql(\n    existing_relation,\n    configuration_changes,\n    target_relation,\n    sql\n) -%}\n    {{- log('Applying ALTER to: ' ~ existing_relation) -}}\n\n    {% if configuration_changes.requires_full_refresh %}\n        {{- get_replace_sql(existing_relation, target_relation, sql) -}}\n\n    {% else %}\n\n        {%- set target_lag = configuration_changes.target_lag -%}\n        {%- if target_lag -%}{{- log('Applying UPDATE TARGET_LAG to: ' ~ existing_relation) -}}{%- endif -%}\n        {%- set snowflake_warehouse = configuration_changes.snowflake_warehouse -%}\n        {%- if snowflake_warehouse -%}{{- log('Applying UPDATE WAREHOUSE to: ' ~ existing_relation) -}}{%- endif -%}\n\n        alter dynamic table {{ existing_relation }} set\n            {% if target_lag %}target_lag = '{{ target_lag.context }}'{% endif %}\n            {% if snowflake_warehouse %}warehouse = {{ snowflake_warehouse.context }}{% endif %}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_replace_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.785348, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_replace_dynamic_table_sql": {"name": "snowflake__get_replace_dynamic_table_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/dynamic_table/replace.sql", "original_file_path": "macros/relations/dynamic_table/replace.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_replace_dynamic_table_sql", "macro_sql": "{% macro snowflake__get_replace_dynamic_table_sql(relation, sql) -%}\n{#-\n--  Produce DDL that replaces a dynamic table with a new dynamic table\n--\n--  Args:\n--  - relation: Union[SnowflakeRelation, str]\n--      - SnowflakeRelation - required for relation.render()\n--      - str - is already the rendered relation name\n--  - sql: str - the code defining the model\n--  Globals:\n--  - config: NodeConfig - contains the attribution required to produce a SnowflakeDynamicTableConfig\n--  Returns:\n--      A valid DDL statement which will result in a new dynamic table.\n-#}\n\n    {%- set dynamic_table = relation.from_config(config.model) -%}\n\n    {%- if dynamic_table.catalog.table_format == 'iceberg' -%}\n        {{ _get_replace_dynamic_iceberg_table_as_sql(dynamic_table, relation, sql) }}\n    {%- else -%}\n        {{ _get_replace_dynamic_standard_table_as_sql(dynamic_table, relation, sql) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake._get_replace_dynamic_iceberg_table_as_sql", "macro.dbt_snowflake._get_replace_dynamic_standard_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7862542, "supported_languages": null}, "macro.dbt_snowflake._get_replace_dynamic_standard_table_as_sql": {"name": "_get_replace_dynamic_standard_table_as_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/dynamic_table/replace.sql", "original_file_path": "macros/relations/dynamic_table/replace.sql", "unique_id": "macro.dbt_snowflake._get_replace_dynamic_standard_table_as_sql", "macro_sql": "{% macro _get_replace_dynamic_standard_table_as_sql(dynamic_table, relation, sql) -%}\n{#-\n--  Produce DDL that replaces a standard dynamic table with a new standard dynamic table\n--\n--  This follows the syntax outlined here:\n--  https://docs.snowflake.com/en/sql-reference/sql/create-dynamic-table#syntax\n--\n--  Args:\n--  - dynamic_table: SnowflakeDynamicTableConfig - contains all of the configuration for the dynamic table\n--  - relation: Union[SnowflakeRelation, str]\n--      - SnowflakeRelation - required for relation.render()\n--      - str - is already the rendered relation name\n--  - sql: str - the code defining the model\n--  Returns:\n--      A valid DDL statement which will result in a new dynamic standard table.\n-#}\n\n    create or replace dynamic table {{ relation }}\n        target_lag = '{{ dynamic_table.target_lag }}'\n        warehouse = {{ dynamic_table.snowflake_warehouse }}\n        {{ optional('refresh_mode', dynamic_table.refresh_mode) }}\n        {{ optional('initialize', dynamic_table.initialize) }}\n        as (\n            {{ sql }}\n        )\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.optional"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7867053, "supported_languages": null}, "macro.dbt_snowflake._get_replace_dynamic_iceberg_table_as_sql": {"name": "_get_replace_dynamic_iceberg_table_as_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/dynamic_table/replace.sql", "original_file_path": "macros/relations/dynamic_table/replace.sql", "unique_id": "macro.dbt_snowflake._get_replace_dynamic_iceberg_table_as_sql", "macro_sql": "{% macro _get_replace_dynamic_iceberg_table_as_sql(dynamic_table, relation, sql) -%}\n{#-\n--  Produce DDL that replaces a dynamic iceberg table with a new dynamic iceberg table\n--\n--  This follows the syntax outlined here:\n--  https://docs.snowflake.com/en/sql-reference/sql/create-dynamic-table#create-dynamic-iceberg-table\n--\n--  Args:\n--  - dynamic_table: SnowflakeDynamicTableConfig - contains all of the configuration for the dynamic table\n--  - relation: Union[SnowflakeRelation, str]\n--      - SnowflakeRelation - required for relation.render()\n--      - str - is already the rendered relation name\n--  - sql: str - the code defining the model\n--  Returns:\n--      A valid DDL statement which will result in a new dynamic iceberg table.\n-#}\n\n    create or replace dynamic iceberg table {{ relation }}\n        target_lag = '{{ dynamic_table.target_lag }}'\n        warehouse = {{ dynamic_table.snowflake_warehouse }}\n        {{ optional('external_volume', dynamic_table.catalog.external_volume) }}\n        {{ optional('catalog', dynamic_table.catalog.name) }}\n        base_location = '{{ dynamic_table.catalog.base_location }}'\n        {{ optional('refresh_mode', dynamic_table.refresh_mode) }}\n        {{ optional('initialize', dynamic_table.initialize) }}\n        as (\n            {{ sql }}\n        )\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.optional"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7873285, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_create_dynamic_table_as_sql": {"name": "snowflake__get_create_dynamic_table_as_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/dynamic_table/create.sql", "original_file_path": "macros/relations/dynamic_table/create.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_create_dynamic_table_as_sql", "macro_sql": "{% macro snowflake__get_create_dynamic_table_as_sql(relation, sql) -%}\n{#-\n--  Produce DDL that creates a dynamic table\n--\n--  Args:\n--  - relation: Union[SnowflakeRelation, str]\n--      - SnowflakeRelation - required for relation.render()\n--      - str - is already the rendered relation name\n--  - sql: str - the code defining the model\n--  Globals:\n--  - config: NodeConfig - contains the attribution required to produce a SnowflakeDynamicTableConfig\n--  Returns:\n--      A valid DDL statement which will result in a new dynamic table.\n-#}\n\n    {%- set dynamic_table = relation.from_config(config.model) -%}\n\n    {%- if dynamic_table.catalog.table_format == 'iceberg' -%}\n        {{ _get_create_dynamic_iceberg_table_as_sql(dynamic_table, relation, sql) }}\n    {%- else -%}\n        {{ _get_create_dynamic_standard_table_as_sql(dynamic_table, relation, sql) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake._get_create_dynamic_iceberg_table_as_sql", "macro.dbt_snowflake._get_create_dynamic_standard_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7882066, "supported_languages": null}, "macro.dbt_snowflake._get_create_dynamic_standard_table_as_sql": {"name": "_get_create_dynamic_standard_table_as_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/dynamic_table/create.sql", "original_file_path": "macros/relations/dynamic_table/create.sql", "unique_id": "macro.dbt_snowflake._get_create_dynamic_standard_table_as_sql", "macro_sql": "{% macro _get_create_dynamic_standard_table_as_sql(dynamic_table, relation, sql) -%}\n{#-\n--  Produce DDL that creates a standard dynamic table\n--\n--  This follows the syntax outlined here:\n--  https://docs.snowflake.com/en/sql-reference/sql/create-dynamic-table#syntax\n--\n--  Args:\n--  - dynamic_table: SnowflakeDynamicTableConfig - contains all of the configuration for the dynamic table\n--  - relation: Union[SnowflakeRelation, str]\n--      - SnowflakeRelation - required for relation.render()\n--      - str - is already the rendered relation name\n--  - sql: str - the code defining the model\n--  Returns:\n--      A valid DDL statement which will result in a new dynamic standard table.\n-#}\n\n    create dynamic table {{ relation }}\n        target_lag = '{{ dynamic_table.target_lag }}'\n        warehouse = {{ dynamic_table.snowflake_warehouse }}\n        {{ optional('refresh_mode', dynamic_table.refresh_mode) }}\n        {{ optional('initialize', dynamic_table.initialize) }}\n        as (\n            {{ sql }}\n        )\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.optional"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.788658, "supported_languages": null}, "macro.dbt_snowflake._get_create_dynamic_iceberg_table_as_sql": {"name": "_get_create_dynamic_iceberg_table_as_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/dynamic_table/create.sql", "original_file_path": "macros/relations/dynamic_table/create.sql", "unique_id": "macro.dbt_snowflake._get_create_dynamic_iceberg_table_as_sql", "macro_sql": "{% macro _get_create_dynamic_iceberg_table_as_sql(dynamic_table, relation, sql) -%}\n{#-\n--  Produce DDL that creates a dynamic iceberg table\n--\n--  This follows the syntax outlined here:\n--  https://docs.snowflake.com/en/sql-reference/sql/create-dynamic-table#create-dynamic-iceberg-table\n--\n--  Args:\n--  - dynamic_table: SnowflakeDynamicTableConfig - contains all of the configuration for the dynamic table\n--  - relation: Union[SnowflakeRelation, str]\n--      - SnowflakeRelation - required for relation.render()\n--      - str - is already the rendered relation name\n--  - sql: str - the code defining the model\n--  Returns:\n--      A valid DDL statement which will result in a new dynamic iceberg table.\n-#}\n\n    create dynamic iceberg table {{ relation }}\n        target_lag = '{{ dynamic_table.target_lag }}'\n        warehouse = {{ dynamic_table.snowflake_warehouse }}\n        {{ optional('external_volume', dynamic_table.catalog.external_volume) }}\n        {{ optional('catalog', dynamic_table.catalog.name) }}\n        base_location = '{{ dynamic_table.catalog.base_location }}'\n        {{ optional('refresh_mode', dynamic_table.refresh_mode) }}\n        {{ optional('initialize', dynamic_table.initialize) }}\n        as (\n            {{ sql }}\n        )\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.optional"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7892935, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_drop_dynamic_table_sql": {"name": "snowflake__get_drop_dynamic_table_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/dynamic_table/drop.sql", "original_file_path": "macros/relations/dynamic_table/drop.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_drop_dynamic_table_sql", "macro_sql": "{% macro snowflake__get_drop_dynamic_table_sql(relation) %}\n    drop dynamic table if exists {{ relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7895057, "supported_languages": null}, "macro.dbt_snowflake.snowflake__describe_dynamic_table": {"name": "snowflake__describe_dynamic_table", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/dynamic_table/describe.sql", "original_file_path": "macros/relations/dynamic_table/describe.sql", "unique_id": "macro.dbt_snowflake.snowflake__describe_dynamic_table", "macro_sql": "{% macro snowflake__describe_dynamic_table(relation) %}\n{#-\n--  Get all relevant metadata about a dynamic table\n--\n--  Args:\n--  - relation: SnowflakeRelation - the relation to describe\n--  Returns:\n--      A dictionary with one or two entries depending on whether iceberg is enabled:\n--      - dynamic_table: the metadata associated with a standard dynamic table\n--      - catalog: the metadata associated with the iceberg catalog\n-#}\n    {%- set _dynamic_table_sql -%}\n        show dynamic tables\n            like '{{ relation.identifier }}'\n            in schema {{ relation.database }}.{{ relation.schema }}\n        ;\n        select\n            \"name\",\n            \"schema_name\",\n            \"database_name\",\n            \"text\",\n            \"target_lag\",\n            \"warehouse\",\n            \"refresh_mode\"\n        from table(result_scan(last_query_id()))\n    {%- endset %}\n    {% set results = {'dynamic_table': run_query(_dynamic_table_sql)} %}\n\n    {% if adapter.behavior.enable_iceberg_materializations.no_warn %}\n        {% set _ = results.update({'catalog': run_query(_get_describe_iceberg_catalog_sql(relation))}) %}\n    {% endif %}\n\n    {% do return(results) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt_snowflake._get_describe_iceberg_catalog_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7906117, "supported_languages": null}, "macro.dbt_snowflake._get_describe_iceberg_catalog_sql": {"name": "_get_describe_iceberg_catalog_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/dynamic_table/describe.sql", "original_file_path": "macros/relations/dynamic_table/describe.sql", "unique_id": "macro.dbt_snowflake._get_describe_iceberg_catalog_sql", "macro_sql": "{% macro _get_describe_iceberg_catalog_sql(relation) %}\n{#-\n--  Produce DQL that returns all relevant metadata about an iceberg catalog\n--\n--  Args:\n--  - relation: SnowflakeRelation - the relation to describe\n--  Returns:\n--      A valid DQL statement that will return metadata associated with an iceberg catalog\n-#}\n    show iceberg tables\n        like '{{ relation.identifier }}'\n        in schema {{ relation.database }}.{{ relation.schema }}\n    ;\n    select\n        \"catalog_name\",\n        \"external_volume_name\",\n        \"base_location\"\n    from table(result_scan(last_query_id()))\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7908785, "supported_languages": null}, "macro.dbt_snowflake.snowflake__refresh_dynamic_table": {"name": "snowflake__refresh_dynamic_table", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/dynamic_table/refresh.sql", "original_file_path": "macros/relations/dynamic_table/refresh.sql", "unique_id": "macro.dbt_snowflake.snowflake__refresh_dynamic_table", "macro_sql": "{% macro snowflake__refresh_dynamic_table(relation) -%}\n    {{- log('Applying REFRESH to: ' ~ relation) -}}\n\n    alter dynamic table {{ relation }} refresh\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7911608, "supported_languages": null}, "macro.dbt.convert_datetime": {"name": "convert_datetime", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7920794, "supported_languages": null}, "macro.dbt.dates_in_range": {"name": "dates_in_range", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partition start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7937138, "supported_languages": null}, "macro.dbt.partition_range": {"name": "partition_range", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.794659, "supported_languages": null}, "macro.dbt.py_current_timestring": {"name": "py_current_timestring", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7949593, "supported_languages": null}, "macro.dbt.statement": {"name": "statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.statement", "macro_sql": "\n{%- macro statement(name=None, fetch_result=False, auto_begin=True, language='sql') -%}\n  {%- if execute: -%}\n    {%- set compiled_code = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime {} for node \"{}\"'.format(language, model['unique_id'])) }}\n      {{ write(compiled_code) }}\n    {%- endif -%}\n    {%- if language == 'sql'-%}\n      {%- set res, table = adapter.execute(compiled_code, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- elif language == 'python' -%}\n      {%- set res = submit_python_job(model, compiled_code) -%}\n      {#-- TODO: What should table be for python models? --#}\n      {%- set table = None -%}\n    {%- else -%}\n      {% do exceptions.raise_compiler_error(\"statement macro didn't get supported language\") %}\n    {%- endif -%}\n\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7965977, "supported_languages": null}, "macro.dbt.noop_statement": {"name": "noop_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7973177, "supported_languages": null}, "macro.dbt.run_query": {"name": "run_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.7977073, "supported_languages": null}, "macro.dbt.get_fixture_sql": {"name": "get_fixture_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.get_fixture_sql", "macro_sql": "{% macro get_fixture_sql(rows, column_name_to_data_types) %}\n-- Fixture for {{ model.name }}\n{% set default_row = {} %}\n\n{%- if not column_name_to_data_types -%}\n{#-- Use defer_relation IFF it is available in the manifest and 'this' is missing from the database --#}\n{%-   set this_or_defer_relation = defer_relation if (defer_relation and not load_relation(this)) else this -%}\n{%-   set columns_in_relation = adapter.get_columns_in_relation(this_or_defer_relation) -%}\n\n{%-   set column_name_to_data_types = {} -%}\n{%-   for column in columns_in_relation -%}\n{#-- This needs to be a case-insensitive comparison --#}\n{%-     do column_name_to_data_types.update({column.name|lower: column.data_type}) -%}\n{%-   endfor -%}\n{%- endif -%}\n\n{%- if not column_name_to_data_types -%}\n    {{ exceptions.raise_compiler_error(\"Not able to get columns for unit test '\" ~ model.name ~ \"' from relation \" ~ this ~ \" because the relation doesn't exist\") }}\n{%- endif -%}\n\n{%- for column_name, column_type in column_name_to_data_types.items() -%}\n    {%- do default_row.update({column_name: (safe_cast(\"null\", column_type) | trim )}) -%}\n{%- endfor -%}\n\n{{ validate_fixture_rows(rows, row_number) }}\n\n{%- for row in rows -%}\n{%-   set formatted_row = format_row(row, column_name_to_data_types) -%}\n{%-   set default_row_copy = default_row.copy() -%}\n{%-   do default_row_copy.update(formatted_row) -%}\nselect\n{%-   for column_name, column_value in default_row_copy.items() %} {{ column_value }} as {{ column_name }}{% if not loop.last -%}, {%- endif %}\n{%-   endfor %}\n{%-   if not loop.last %}\nunion all\n{%    endif %}\n{%- endfor -%}\n\n{%- if (rows | length) == 0 -%}\n    select\n    {%- for column_name, column_value in default_row.items() %} {{ column_value }} as {{ column_name }}{% if not loop.last -%},{%- endif %}\n    {%- endfor %}\n    limit 0\n{%- endif -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.safe_cast", "macro.dbt.validate_fixture_rows", "macro.dbt.format_row"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8007317, "supported_languages": null}, "macro.dbt.get_expected_sql": {"name": "get_expected_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.get_expected_sql", "macro_sql": "{% macro get_expected_sql(rows, column_name_to_data_types) %}\n\n{%- if (rows | length) == 0 -%}\n    select * from dbt_internal_unit_test_actual\n    limit 0\n{%- else -%}\n{%- for row in rows -%}\n{%- set formatted_row = format_row(row, column_name_to_data_types) -%}\nselect\n{%- for column_name, column_value in formatted_row.items() %} {{ column_value }} as {{ column_name }}{% if not loop.last -%}, {%- endif %}\n{%- endfor %}\n{%- if not loop.last %}\nunion all\n{% endif %}\n{%- endfor -%}\n{%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.format_row"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.801462, "supported_languages": null}, "macro.dbt.format_row": {"name": "format_row", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.format_row", "macro_sql": "\n\n{%- macro format_row(row, column_name_to_data_types) -%}\n    {#-- generate case-insensitive formatted row --#}\n    {% set formatted_row = {} %}\n    {%- for column_name, column_value in row.items() -%}\n        {% set column_name = column_name|lower %}\n\n        {%- if column_name not in column_name_to_data_types %}\n            {#-- if user-provided row contains column name that relation does not contain, raise an error --#}\n            {% set fixture_name = \"expected output\" if model.resource_type == 'unit_test' else (\"'\" ~ model.name ~ \"'\") %}\n            {{ exceptions.raise_compiler_error(\n                \"Invalid column name: '\" ~ column_name ~ \"' in unit test fixture for \" ~ fixture_name ~ \".\"\n                \"\\nAccepted columns for \" ~ fixture_name ~ \" are: \" ~ (column_name_to_data_types.keys()|list)\n            ) }}\n        {%- endif -%}\n\n        {%- set column_type = column_name_to_data_types[column_name] %}\n\n        {#-- sanitize column_value: wrap yaml strings in quotes, apply cast --#}\n        {%- set column_value_clean = column_value -%}\n        {%- if column_value is string -%}\n            {%- set column_value_clean = dbt.string_literal(dbt.escape_single_quotes(column_value)) -%}\n        {%- elif column_value is none -%}\n            {%- set column_value_clean = 'null' -%}\n        {%- endif -%}\n\n        {%- set row_update = {column_name: safe_cast(column_value_clean, column_type) } -%}\n        {%- do formatted_row.update(row_update) -%}\n    {%- endfor -%}\n    {{ return(formatted_row) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.string_literal", "macro.dbt.escape_single_quotes", "macro.dbt.safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8028767, "supported_languages": null}, "macro.dbt.validate_fixture_rows": {"name": "validate_fixture_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.validate_fixture_rows", "macro_sql": "{%- macro validate_fixture_rows(rows, row_number) -%}\n  {{ return(adapter.dispatch('validate_fixture_rows', 'dbt')(rows, row_number)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__validate_fixture_rows"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.803147, "supported_languages": null}, "macro.dbt.default__validate_fixture_rows": {"name": "default__validate_fixture_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.default__validate_fixture_rows", "macro_sql": "{%- macro default__validate_fixture_rows(rows, row_number) -%}\n  {# This is an abstract method for adapter overrides as needed #}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.803283, "supported_languages": null}, "macro.dbt.generate_database_name": {"name": "generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "unique_id": "macro.dbt.generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8037674, "supported_languages": null}, "macro.dbt.default__generate_database_name": {"name": "default__generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "unique_id": "macro.dbt.default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8041077, "supported_languages": null}, "macro.dbt.generate_alias_name": {"name": "generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "unique_id": "macro.dbt.generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8045902, "supported_languages": null}, "macro.dbt.default__generate_alias_name": {"name": "default__generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "unique_id": "macro.dbt.default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- elif node.version -%}\n\n        {{ return(node.name ~ \"_v\" ~ (node.version | replace(\".\", \"_\"))) }}\n\n    {%- else -%}\n\n        {{ node.name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.805086, "supported_languages": null}, "macro.dbt.generate_schema_name": {"name": "generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name=none, node=none) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8056517, "supported_languages": null}, "macro.dbt.default__generate_schema_name": {"name": "default__generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.805998, "supported_languages": null}, "macro.dbt.generate_schema_name_for_env": {"name": "generate_schema_name_for_env", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.806379, "supported_languages": null}, "macro.dbt.current_timestamp": {"name": "current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp", "macro_sql": "{%- macro current_timestamp() -%}\n    {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8069587, "supported_languages": null}, "macro.dbt.default__current_timestamp": {"name": "default__current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter ' + adapter.type()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8071651, "supported_languages": null}, "macro.dbt.snapshot_get_time": {"name": "snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.snapshot_get_time", "macro_sql": "\n\n{%- macro snapshot_get_time() -%}\n    {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8073566, "supported_languages": null}, "macro.dbt.default__snapshot_get_time": {"name": "default__snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() %}\n    {{ current_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8075259, "supported_languages": null}, "macro.dbt.get_snapshot_get_time_data_type": {"name": "get_snapshot_get_time_data_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.get_snapshot_get_time_data_type", "macro_sql": "{% macro get_snapshot_get_time_data_type() %}\n    {% set snapshot_time = adapter.dispatch('snapshot_get_time', 'dbt')() %}\n    {% set time_data_type_sql = 'select ' ~ snapshot_time ~ ' as dbt_snapshot_time' %}\n    {% set snapshot_time_column_schema = get_column_schema_from_query(time_data_type_sql) %}\n    {% set time_data_type = snapshot_time_column_schema[0].dtype %}\n    {{ return(time_data_type or none) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt_snowflake.snowflake__snapshot_get_time", "macro.dbt.get_column_schema_from_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8080537, "supported_languages": null}, "macro.dbt.current_timestamp_backcompat": {"name": "current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp_backcompat", "macro_sql": "{% macro current_timestamp_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8082685, "supported_languages": null}, "macro.dbt.default__current_timestamp_backcompat": {"name": "default__current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_backcompat", "macro_sql": "{% macro default__current_timestamp_backcompat() %}\n    current_timestamp::timestamp\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8083973, "supported_languages": null}, "macro.dbt.current_timestamp_in_utc_backcompat": {"name": "current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp_in_utc_backcompat", "macro_sql": "{% macro current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_in_utc_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__current_timestamp_in_utc_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8086078, "supported_languages": null}, "macro.dbt.default__current_timestamp_in_utc_backcompat": {"name": "default__current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro default__current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp_backcompat", "macro.dbt_snowflake.snowflake__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8088233, "supported_languages": null}, "macro.dbt.alter_column_comment": {"name": "alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8093379, "supported_languages": null}, "macro.dbt.default__alter_column_comment": {"name": "default__alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8097017, "supported_languages": null}, "macro.dbt.alter_relation_comment": {"name": "alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8099594, "supported_languages": null}, "macro.dbt.default__alter_relation_comment": {"name": "default__alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8101752, "supported_languages": null}, "macro.dbt.persist_docs": {"name": "persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8105044, "supported_languages": null}, "macro.dbt.default__persist_docs": {"name": "default__persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8110802, "supported_languages": null}, "macro.dbt.get_columns_in_relation": {"name": "get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8124282, "supported_languages": null}, "macro.dbt.default__get_columns_in_relation": {"name": "default__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8126478, "supported_languages": null}, "macro.dbt.sql_convert_columns_in_relation": {"name": "sql_convert_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8130815, "supported_languages": null}, "macro.dbt.get_empty_subquery_sql": {"name": "get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_empty_subquery_sql", "macro_sql": "{% macro get_empty_subquery_sql(select_sql, select_sql_header=none) -%}\n  {{ return(adapter.dispatch('get_empty_subquery_sql', 'dbt')(select_sql, select_sql_header)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8133674, "supported_languages": null}, "macro.dbt.default__get_empty_subquery_sql": {"name": "default__get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_empty_subquery_sql", "macro_sql": "{% macro default__get_empty_subquery_sql(select_sql, select_sql_header=none) %}\n    {%- if select_sql_header is not none -%}\n    {{ select_sql_header }}\n    {%- endif -%}\n    select * from (\n        {{ select_sql }}\n    ) as __dbt_sbq\n    where false\n    limit 0\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8136396, "supported_languages": null}, "macro.dbt.get_empty_schema_sql": {"name": "get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_empty_schema_sql", "macro_sql": "{% macro get_empty_schema_sql(columns) -%}\n  {{ return(adapter.dispatch('get_empty_schema_sql', 'dbt')(columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_empty_schema_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8138707, "supported_languages": null}, "macro.dbt.default__get_empty_schema_sql": {"name": "default__get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_empty_schema_sql", "macro_sql": "{% macro default__get_empty_schema_sql(columns) %}\n    {%- set col_err = [] -%}\n    {%- set col_naked_numeric = [] -%}\n    select\n    {% for i in columns %}\n      {%- set col = columns[i] -%}\n      {%- if col['data_type'] is not defined -%}\n        {%- do col_err.append(col['name']) -%}\n      {#-- If this column's type is just 'numeric' then it is missing precision/scale, raise a warning --#}\n      {%- elif col['data_type'].strip().lower() in ('numeric', 'decimal', 'number') -%}\n        {%- do col_naked_numeric.append(col['name']) -%}\n      {%- endif -%}\n      {% set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] %}\n      {{ cast('null', col['data_type']) }} as {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n    {%- if (col_err | length) > 0 -%}\n      {{ exceptions.column_type_missing(column_names=col_err) }}\n    {%- elif (col_naked_numeric | length) > 0 -%}\n      {{ exceptions.warn(\"Detected columns with numeric type and unspecified precision/scale, this can lead to unintended rounding: \" ~ col_naked_numeric ~ \"`\") }}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8152928, "supported_languages": null}, "macro.dbt.get_column_schema_from_query": {"name": "get_column_schema_from_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_column_schema_from_query", "macro_sql": "{% macro get_column_schema_from_query(select_sql, select_sql_header=none) -%}\n    {% set columns = [] %}\n    {# -- Using an 'empty subquery' here to get the same schema as the given select_sql statement, without necessitating a data scan.#}\n    {% set sql = get_empty_subquery_sql(select_sql, select_sql_header) %}\n    {% set column_schema = adapter.get_column_schema_from_query(sql) %}\n    {{ return(column_schema) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8157532, "supported_languages": null}, "macro.dbt.get_columns_in_query": {"name": "get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8159864, "supported_languages": null}, "macro.dbt.default__get_columns_in_query": {"name": "default__get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        {{ get_empty_subquery_sql(select_sql) }}\n    {% endcall %}\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8164217, "supported_languages": null}, "macro.dbt.alter_column_type": {"name": "alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8167105, "supported_languages": null}, "macro.dbt.default__alter_column_type": {"name": "default__alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation.render() }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation.render() }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation.render() }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation.render() }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8175085, "supported_languages": null}, "macro.dbt.alter_relation_add_remove_columns": {"name": "alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.817817, "supported_languages": null}, "macro.dbt.default__alter_relation_add_remove_columns": {"name": "default__alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation.render() }}\n\n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if add_columns and remove_columns }}\n\n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n\n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.818826, "supported_languages": null}, "macro.dbt.get_show_sql": {"name": "get_show_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.get_show_sql", "macro_sql": "{% macro get_show_sql(compiled_code, sql_header, limit) -%}\n  {%- if sql_header is not none -%}\n  {{ sql_header }}\n  {%- endif %}\n  {{ get_limit_subquery_sql(compiled_code, limit) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_limit_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8193462, "supported_languages": null}, "macro.dbt.get_limit_subquery_sql": {"name": "get_limit_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.get_limit_subquery_sql", "macro_sql": "\n{%- macro get_limit_subquery_sql(sql, limit) -%}\n  {{ adapter.dispatch('get_limit_sql', 'dbt')(sql, limit) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_limit_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8196044, "supported_languages": null}, "macro.dbt.default__get_limit_sql": {"name": "default__get_limit_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.default__get_limit_sql", "macro_sql": "{% macro default__get_limit_sql(sql, limit) %}\n  {{ sql }}\n  {% if limit is not none %}\n  limit {{ limit }}\n  {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8198624, "supported_languages": null}, "macro.dbt.get_create_index_sql": {"name": "get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8204536, "supported_languages": null}, "macro.dbt.default__get_create_index_sql": {"name": "default__get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8206334, "supported_languages": null}, "macro.dbt.create_indexes": {"name": "create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8208504, "supported_languages": null}, "macro.dbt.default__create_indexes": {"name": "default__create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8214812, "supported_languages": null}, "macro.dbt.get_drop_index_sql": {"name": "get_drop_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_drop_index_sql", "macro_sql": "{% macro get_drop_index_sql(relation, index_name) -%}\n    {{ adapter.dispatch('get_drop_index_sql', 'dbt')(relation, index_name) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_drop_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8217154, "supported_languages": null}, "macro.dbt.default__get_drop_index_sql": {"name": "default__get_drop_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_drop_index_sql", "macro_sql": "{% macro default__get_drop_index_sql(relation, index_name) -%}\n    {{ exceptions.raise_compiler_error(\"`get_drop_index_sql has not been implemented for this adapter.\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8218925, "supported_languages": null}, "macro.dbt.get_show_indexes_sql": {"name": "get_show_indexes_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_show_indexes_sql", "macro_sql": "{% macro get_show_indexes_sql(relation) -%}\n    {{ adapter.dispatch('get_show_indexes_sql', 'dbt')(relation) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_show_indexes_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8220856, "supported_languages": null}, "macro.dbt.default__get_show_indexes_sql": {"name": "default__get_show_indexes_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_show_indexes_sql", "macro_sql": "{% macro default__get_show_indexes_sql(relation) -%}\n    {{ exceptions.raise_compiler_error(\"`get_show_indexes_sql has not been implemented for this adapter.\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8222473, "supported_languages": null}, "macro.dbt.create_schema": {"name": "create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8226671, "supported_languages": null}, "macro.dbt.default__create_schema": {"name": "default__create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8229163, "supported_languages": null}, "macro.dbt.drop_schema": {"name": "drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.823122, "supported_languages": null}, "macro.dbt.default__drop_schema": {"name": "default__drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8233573, "supported_languages": null}, "macro.dbt.collect_freshness": {"name": "collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8239136, "supported_languages": null}, "macro.dbt.default__collect_freshness": {"name": "default__collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8244295, "supported_languages": null}, "macro.dbt.collect_freshness_custom_sql": {"name": "collect_freshness_custom_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.collect_freshness_custom_sql", "macro_sql": "{% macro collect_freshness_custom_sql(source, loaded_at_query) %}\n  {{ return(adapter.dispatch('collect_freshness_custom_sql', 'dbt')(source, loaded_at_query))}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__collect_freshness_custom_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8246865, "supported_languages": null}, "macro.dbt.default__collect_freshness_custom_sql": {"name": "default__collect_freshness_custom_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.default__collect_freshness_custom_sql", "macro_sql": "{% macro default__collect_freshness_custom_sql(source, loaded_at_query) %}\n  {% call statement('collect_freshness_custom_sql', fetch_result=True, auto_begin=False) -%}\n  with source_query as (\n    {{ loaded_at_query }}\n  )\n  select\n    (select * from source_query) as max_loaded_at,\n    {{ current_timestamp() }} as snapshotted_at\n  {% endcall %}\n  {{ return(load_result('collect_freshness_custom_sql')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.825077, "supported_languages": null}, "macro.dbt.make_intermediate_relation": {"name": "make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_intermediate_relation", "macro_sql": "{% macro make_intermediate_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_intermediate_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_intermediate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8259177, "supported_languages": null}, "macro.dbt.default__make_intermediate_relation": {"name": "default__make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_intermediate_relation", "macro_sql": "{% macro default__make_intermediate_relation(base_relation, suffix) %}\n    {{ return(default__make_temp_relation(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.826127, "supported_languages": null}, "macro.dbt.make_temp_relation": {"name": "make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {#-- This ensures microbatch batches get unique temp relations to avoid clobbering --#}\n  {% if suffix == '__dbt_tmp' and model.batch %}\n    {% set suffix = suffix ~ '_' ~ model.batch.id %}\n  {% endif %}\n\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8266149, "supported_languages": null}, "macro.dbt.default__make_temp_relation": {"name": "default__make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {%- set temp_identifier = base_relation.identifier ~ suffix -%}\n    {%- set temp_relation = base_relation.incorporate(\n                                path={\"identifier\": temp_identifier}) -%}\n\n    {{ return(temp_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8269744, "supported_languages": null}, "macro.dbt.make_backup_relation": {"name": "make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_backup_relation", "macro_sql": "{% macro make_backup_relation(base_relation, backup_relation_type, suffix='__dbt_backup') %}\n    {{ return(adapter.dispatch('make_backup_relation', 'dbt')(base_relation, backup_relation_type, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_backup_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8272789, "supported_languages": null}, "macro.dbt.default__make_backup_relation": {"name": "default__make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_backup_relation", "macro_sql": "{% macro default__make_backup_relation(base_relation, backup_relation_type, suffix) %}\n    {%- set backup_identifier = base_relation.identifier ~ suffix -%}\n    {%- set backup_relation = base_relation.incorporate(\n                                  path={\"identifier\": backup_identifier},\n                                  type=backup_relation_type\n    ) -%}\n    {{ return(backup_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8277085, "supported_languages": null}, "macro.dbt.truncate_relation": {"name": "truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8279355, "supported_languages": null}, "macro.dbt.default__truncate_relation": {"name": "default__truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation.render() }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8281646, "supported_languages": null}, "macro.dbt.get_or_create_relation": {"name": "get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) -%}\n  {{ return(adapter.dispatch('get_or_create_relation', 'dbt')(database, schema, identifier, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_or_create_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.828484, "supported_languages": null}, "macro.dbt.default__get_or_create_relation": {"name": "default__get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__get_or_create_relation", "macro_sql": "{% macro default__get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8291535, "supported_languages": null}, "macro.dbt.load_cached_relation": {"name": "load_cached_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.load_cached_relation", "macro_sql": "{% macro load_cached_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8294506, "supported_languages": null}, "macro.dbt.load_relation": {"name": "load_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.load_relation", "macro_sql": "{% macro load_relation(relation) %}\n    {{ return(load_cached_relation(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8296382, "supported_languages": null}, "macro.dbt.validate_sql": {"name": "validate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/validate_sql.sql", "original_file_path": "macros/adapters/validate_sql.sql", "unique_id": "macro.dbt.validate_sql", "macro_sql": "{% macro validate_sql(sql) -%}\n  {{ return(adapter.dispatch('validate_sql', 'dbt')(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__validate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8299913, "supported_languages": null}, "macro.dbt.default__validate_sql": {"name": "default__validate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/validate_sql.sql", "original_file_path": "macros/adapters/validate_sql.sql", "unique_id": "macro.dbt.default__validate_sql", "macro_sql": "{% macro default__validate_sql(sql) -%}\n  {% call statement('validate_sql') -%}\n    explain {{ sql }}\n  {% endcall %}\n  {{ return(load_result('validate_sql')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8302755, "supported_languages": null}, "macro.dbt.get_catalog_relations": {"name": "get_catalog_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_catalog_relations", "macro_sql": "{% macro get_catalog_relations(information_schema, relations) -%}\n  {{ return(adapter.dispatch('get_catalog_relations', 'dbt')(information_schema, relations)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_catalog_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8312485, "supported_languages": null}, "macro.dbt.default__get_catalog_relations": {"name": "default__get_catalog_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_catalog_relations", "macro_sql": "{% macro default__get_catalog_relations(information_schema, relations) -%}\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog_relations not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8317475, "supported_languages": null}, "macro.dbt.get_catalog": {"name": "get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8320112, "supported_languages": null}, "macro.dbt.default__get_catalog": {"name": "default__get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.832354, "supported_languages": null}, "macro.dbt.information_schema_name": {"name": "information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.832612, "supported_languages": null}, "macro.dbt.default__information_schema_name": {"name": "default__information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8328366, "supported_languages": null}, "macro.dbt.list_schemas": {"name": "list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8330684, "supported_languages": null}, "macro.dbt.default__list_schemas": {"name": "default__list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8333874, "supported_languages": null}, "macro.dbt.check_schema_exists": {"name": "check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.833635, "supported_languages": null}, "macro.dbt.default__check_schema_exists": {"name": "default__check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8340144, "supported_languages": null}, "macro.dbt.list_relations_without_caching": {"name": "list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8342505, "supported_languages": null}, "macro.dbt.default__list_relations_without_caching": {"name": "default__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.834473, "supported_languages": null}, "macro.dbt.get_catalog_for_single_relation": {"name": "get_catalog_for_single_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_catalog_for_single_relation", "macro_sql": "{% macro get_catalog_for_single_relation(relation) %}\n  {{ return(adapter.dispatch('get_catalog_for_single_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_catalog_for_single_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.834697, "supported_languages": null}, "macro.dbt.default__get_catalog_for_single_relation": {"name": "default__get_catalog_for_single_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_catalog_for_single_relation", "macro_sql": "{% macro default__get_catalog_for_single_relation(relation) %}\n  {{ exceptions.raise_not_implemented(\n    'get_catalog_for_single_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8349023, "supported_languages": null}, "macro.dbt.get_relations": {"name": "get_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_relations", "macro_sql": "{% macro get_relations() %}\n  {{ return(adapter.dispatch('get_relations', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8351014, "supported_languages": null}, "macro.dbt.default__get_relations": {"name": "default__get_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_relations", "macro_sql": "{% macro default__get_relations() %}\n  {{ exceptions.raise_not_implemented(\n    'get_relations macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.835298, "supported_languages": null}, "macro.dbt.get_relation_last_modified": {"name": "get_relation_last_modified", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_relation_last_modified", "macro_sql": "{% macro get_relation_last_modified(information_schema, relations) %}\n  {{ return(adapter.dispatch('get_relation_last_modified', 'dbt')(information_schema, relations)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_relation_last_modified"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8355646, "supported_languages": null}, "macro.dbt.default__get_relation_last_modified": {"name": "default__get_relation_last_modified", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_relation_last_modified", "macro_sql": "{% macro default__get_relation_last_modified(information_schema, relations) %}\n  {{ exceptions.raise_not_implemented(\n    'get_relation_last_modified macro not implemented for adapter ' + adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.835781, "supported_languages": null}, "macro.dbt.copy_grants": {"name": "copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.copy_grants", "macro_sql": "{% macro copy_grants() %}\n    {{ return(adapter.dispatch('copy_grants', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8371212, "supported_languages": null}, "macro.dbt.default__copy_grants": {"name": "default__copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__copy_grants", "macro_sql": "{% macro default__copy_grants() %}\n    {{ return(True) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8372855, "supported_languages": null}, "macro.dbt.support_multiple_grantees_per_dcl_statement": {"name": "support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.support_multiple_grantees_per_dcl_statement", "macro_sql": "{% macro support_multiple_grantees_per_dcl_statement() %}\n    {{ return(adapter.dispatch('support_multiple_grantees_per_dcl_statement', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8375087, "supported_languages": null}, "macro.dbt.default__support_multiple_grantees_per_dcl_statement": {"name": "default__support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__support_multiple_grantees_per_dcl_statement", "macro_sql": "\n\n{%- macro default__support_multiple_grantees_per_dcl_statement() -%}\n    {{ return(True) }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8376625, "supported_languages": null}, "macro.dbt.should_revoke": {"name": "should_revoke", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.should_revoke", "macro_sql": "{% macro should_revoke(existing_relation, full_refresh_mode=True) %}\n\n    {% if not existing_relation %}\n        {#-- The table doesn't already exist, so no grants to copy over --#}\n        {{ return(False) }}\n    {% elif full_refresh_mode %}\n        {#-- The object is being REPLACED -- whether grants are copied over depends on the value of user config --#}\n        {{ return(copy_grants()) }}\n    {% else %}\n        {#-- The table is being merged/upserted/inserted -- grants will be carried over --#}\n        {{ return(True) }}\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8380942, "supported_languages": null}, "macro.dbt.get_show_grant_sql": {"name": "get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_show_grant_sql", "macro_sql": "{% macro get_show_grant_sql(relation) %}\n    {{ return(adapter.dispatch(\"get_show_grant_sql\", \"dbt\")(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_show_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8383276, "supported_languages": null}, "macro.dbt.default__get_show_grant_sql": {"name": "default__get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_show_grant_sql", "macro_sql": "{% macro default__get_show_grant_sql(relation) %}\n    show grants on {{ relation.render() }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8384986, "supported_languages": null}, "macro.dbt.get_grant_sql": {"name": "get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_grant_sql", "macro_sql": "{% macro get_grant_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_grant_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8387613, "supported_languages": null}, "macro.dbt.default__get_grant_sql": {"name": "default__get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_grant_sql", "macro_sql": "\n\n{%- macro default__get_grant_sql(relation, privilege, grantees) -%}\n    grant {{ privilege }} on {{ relation.render() }} to {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8390205, "supported_languages": null}, "macro.dbt.get_revoke_sql": {"name": "get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_revoke_sql", "macro_sql": "{% macro get_revoke_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_revoke_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_revoke_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8394334, "supported_languages": null}, "macro.dbt.default__get_revoke_sql": {"name": "default__get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_revoke_sql", "macro_sql": "\n\n{%- macro default__get_revoke_sql(relation, privilege, grantees) -%}\n    revoke {{ privilege }} on {{ relation.render() }} from {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8397205, "supported_languages": null}, "macro.dbt.get_dcl_statement_list": {"name": "get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_dcl_statement_list", "macro_sql": "{% macro get_dcl_statement_list(relation, grant_config, get_dcl_macro) %}\n    {{ return(adapter.dispatch('get_dcl_statement_list', 'dbt')(relation, grant_config, get_dcl_macro)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_dcl_statement_list"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.84, "supported_languages": null}, "macro.dbt.default__get_dcl_statement_list": {"name": "default__get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_dcl_statement_list", "macro_sql": "\n\n{%- macro default__get_dcl_statement_list(relation, grant_config, get_dcl_macro) -%}\n    {#\n      -- Unpack grant_config into specific privileges and the set of users who need them granted/revoked.\n      -- Depending on whether this database supports multiple grantees per statement, pass in the list of\n      -- all grantees per privilege, or (if not) template one statement per privilege-grantee pair.\n      -- `get_dcl_macro` will be either `get_grant_sql` or `get_revoke_sql`\n    #}\n    {%- set dcl_statements = [] -%}\n    {%- for privilege, grantees in grant_config.items() %}\n        {%- if support_multiple_grantees_per_dcl_statement() and grantees -%}\n          {%- set dcl = get_dcl_macro(relation, privilege, grantees) -%}\n          {%- do dcl_statements.append(dcl) -%}\n        {%- else -%}\n          {%- for grantee in grantees -%}\n              {% set dcl = get_dcl_macro(relation, privilege, [grantee]) %}\n              {%- do dcl_statements.append(dcl) -%}\n          {% endfor -%}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return(dcl_statements) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8408663, "supported_languages": null}, "macro.dbt.call_dcl_statements": {"name": "call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.call_dcl_statements", "macro_sql": "{% macro call_dcl_statements(dcl_statement_list) %}\n    {{ return(adapter.dispatch(\"call_dcl_statements\", \"dbt\")(dcl_statement_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.841095, "supported_languages": null}, "macro.dbt.default__call_dcl_statements": {"name": "default__call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__call_dcl_statements", "macro_sql": "{% macro default__call_dcl_statements(dcl_statement_list) %}\n    {#\n      -- By default, supply all grant + revoke statements in a single semicolon-separated block,\n      -- so that they're all processed together.\n\n      -- Some databases do not support this. Those adapters will need to override this macro\n      -- to run each statement individually.\n    #}\n    {% call statement('grants') %}\n        {% for dcl_statement in dcl_statement_list %}\n            {{ dcl_statement }};\n        {% endfor %}\n    {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.841428, "supported_languages": null}, "macro.dbt.apply_grants": {"name": "apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.apply_grants", "macro_sql": "{% macro apply_grants(relation, grant_config, should_revoke) %}\n    {{ return(adapter.dispatch(\"apply_grants\", \"dbt\")(relation, grant_config, should_revoke)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8417094, "supported_languages": null}, "macro.dbt.default__apply_grants": {"name": "default__apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__apply_grants", "macro_sql": "{% macro default__apply_grants(relation, grant_config, should_revoke=True) %}\n    {#-- If grant_config is {} or None, this is a no-op --#}\n    {% if grant_config %}\n        {% if should_revoke %}\n            {#-- We think previous grants may have carried over --#}\n            {#-- Show current grants and calculate diffs --#}\n            {% set current_grants_table = run_query(get_show_grant_sql(relation)) %}\n            {% set current_grants_dict = adapter.standardize_grants_dict(current_grants_table) %}\n            {% set needs_granting = diff_of_two_dicts(grant_config, current_grants_dict) %}\n            {% set needs_revoking = diff_of_two_dicts(current_grants_dict, grant_config) %}\n            {% if not (needs_granting or needs_revoking) %}\n                {{ log('On ' ~ relation.render() ~': All grants are in place, no revocation or granting needed.')}}\n            {% endif %}\n        {% else %}\n            {#-- We don't think there's any chance of previous grants having carried over. --#}\n            {#-- Jump straight to granting what the user has configured. --#}\n            {% set needs_revoking = {} %}\n            {% set needs_granting = grant_config %}\n        {% endif %}\n        {% if needs_granting or needs_revoking %}\n            {% set revoke_statement_list = get_dcl_statement_list(relation, needs_revoking, get_revoke_sql) %}\n            {% set grant_statement_list = get_dcl_statement_list(relation, needs_granting, get_grant_sql) %}\n            {% set dcl_statement_list = revoke_statement_list + grant_statement_list %}\n            {% if dcl_statement_list %}\n                {{ call_dcl_statements(dcl_statement_list) }}\n            {% endif %}\n        {% endif %}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.get_show_grant_sql", "macro.dbt.get_dcl_statement_list", "macro.dbt.call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8430905, "supported_languages": null}, "macro.dbt.length": {"name": "length", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "unique_id": "macro.dbt.length", "macro_sql": "{% macro length(expression) -%}\n    {{ return(adapter.dispatch('length', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__length"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8434613, "supported_languages": null}, "macro.dbt.default__length": {"name": "default__length", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "unique_id": "macro.dbt.default__length", "macro_sql": "{% macro default__length(expression) %}\n\n    length(\n        {{ expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8436165, "supported_languages": null}, "macro.dbt.datediff": {"name": "datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt.datediff", "macro_sql": "{% macro datediff(first_date, second_date, datepart) %}\n  {{ return(adapter.dispatch('datediff', 'dbt')(first_date, second_date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.844003, "supported_languages": null}, "macro.dbt.default__datediff": {"name": "default__datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt.default__datediff", "macro_sql": "{% macro default__datediff(first_date, second_date, datepart) -%}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.844221, "supported_languages": null}, "macro.dbt.get_powers_of_two": {"name": "get_powers_of_two", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.844771, "supported_languages": null}, "macro.dbt.default__get_powers_of_two": {"name": "default__get_powers_of_two", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.845318, "supported_languages": null}, "macro.dbt.generate_series": {"name": "generate_series", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.845571, "supported_languages": null}, "macro.dbt.default__generate_series": {"name": "default__generate_series", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8462179, "supported_languages": null}, "macro.dbt.intersect": {"name": "intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt.intersect", "macro_sql": "{% macro intersect() %}\n  {{ return(adapter.dispatch('intersect', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__intersect"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.846529, "supported_languages": null}, "macro.dbt.default__intersect": {"name": "default__intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt.default__intersect", "macro_sql": "{% macro default__intersect() %}\n\n    intersect\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8466368, "supported_languages": null}, "macro.dbt.bool_or": {"name": "bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt.bool_or", "macro_sql": "{% macro bool_or(expression) -%}\n    {{ return(adapter.dispatch('bool_or', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__bool_or"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8469653, "supported_languages": null}, "macro.dbt.default__bool_or": {"name": "default__bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt.default__bool_or", "macro_sql": "{% macro default__bool_or(expression) -%}\n\n    bool_or({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8471124, "supported_languages": null}, "macro.dbt.any_value": {"name": "any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt.any_value", "macro_sql": "{% macro any_value(expression) -%}\n    {{ return(adapter.dispatch('any_value', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__any_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8474233, "supported_languages": null}, "macro.dbt.default__any_value": {"name": "default__any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt.default__any_value", "macro_sql": "{% macro default__any_value(expression) -%}\n\n    any_value({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8475661, "supported_languages": null}, "macro.dbt.safe_cast": {"name": "safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt.safe_cast", "macro_sql": "{% macro safe_cast(field, type) %}\n  {{ return(adapter.dispatch('safe_cast', 'dbt') (field, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8479145, "supported_languages": null}, "macro.dbt.default__safe_cast": {"name": "default__safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt.default__safe_cast", "macro_sql": "{% macro default__safe_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8480976, "supported_languages": null}, "macro.dbt.split_part": {"name": "split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt.split_part", "macro_sql": "{% macro split_part(string_text, delimiter_text, part_number) %}\n  {{ return(adapter.dispatch('split_part', 'dbt') (string_text, delimiter_text, part_number)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8485625, "supported_languages": null}, "macro.dbt.default__split_part": {"name": "default__split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt.default__split_part", "macro_sql": "{% macro default__split_part(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n        {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.848796, "supported_languages": null}, "macro.dbt._split_part_negative": {"name": "_split_part_negative", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt._split_part_negative", "macro_sql": "{% macro _split_part_negative(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n          length({{ string_text }})\n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 2 + {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8492048, "supported_languages": null}, "macro.dbt.replace": {"name": "replace", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "unique_id": "macro.dbt.replace", "macro_sql": "{% macro replace(field, old_chars, new_chars) -%}\n    {{ return(adapter.dispatch('replace', 'dbt') (field, old_chars, new_chars)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__replace"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8496222, "supported_languages": null}, "macro.dbt.default__replace": {"name": "default__replace", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "unique_id": "macro.dbt.default__replace", "macro_sql": "{% macro default__replace(field, old_chars, new_chars) %}\n\n    replace(\n        {{ field }},\n        {{ old_chars }},\n        {{ new_chars }}\n    )\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.849843, "supported_languages": null}, "macro.dbt.array_construct": {"name": "array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt.array_construct", "macro_sql": "{% macro array_construct(inputs=[], data_type=api.Column.translate_type('integer')) -%}\n  {{ return(adapter.dispatch('array_construct', 'dbt')(inputs, data_type)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8502996, "supported_languages": null}, "macro.dbt.default__array_construct": {"name": "default__array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt.default__array_construct", "macro_sql": "{% macro default__array_construct(inputs, data_type) -%}\n    {% if inputs|length > 0 %}\n    array[ {{ inputs|join(' , ') }} ]\n    {% else %}\n    array[]::{{data_type}}[]\n    {% endif %}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8506272, "supported_languages": null}, "macro.dbt.right": {"name": "right", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt.right", "macro_sql": "{% macro right(string_text, length_expression) -%}\n    {{ return(adapter.dispatch('right', 'dbt') (string_text, length_expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__right"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8509877, "supported_languages": null}, "macro.dbt.default__right": {"name": "default__right", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt.default__right", "macro_sql": "{% macro default__right(string_text, length_expression) %}\n\n    right(\n        {{ string_text }},\n        {{ length_expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8511734, "supported_languages": null}, "macro.dbt.hash": {"name": "hash", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt.hash", "macro_sql": "{% macro hash(field) -%}\n  {{ return(adapter.dispatch('hash', 'dbt') (field)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8515043, "supported_languages": null}, "macro.dbt.default__hash": {"name": "default__hash", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt.default__hash", "macro_sql": "{% macro default__hash(field) -%}\n    md5(cast({{ field }} as {{ api.Column.translate_type('string') }}))\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8517153, "supported_languages": null}, "macro.dbt.type_string": {"name": "type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_string", "macro_sql": "\n\n{%- macro type_string() -%}\n  {{ return(adapter.dispatch('type_string', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8525546, "supported_languages": null}, "macro.dbt.default__type_string": {"name": "default__type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_string", "macro_sql": "{% macro default__type_string() %}\n    {{ return(api.Column.translate_type(\"string\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.852773, "supported_languages": null}, "macro.dbt.type_timestamp": {"name": "type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_timestamp", "macro_sql": "\n\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8529859, "supported_languages": null}, "macro.dbt.default__type_timestamp": {"name": "default__type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() %}\n    {{ return(api.Column.translate_type(\"timestamp\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.853181, "supported_languages": null}, "macro.dbt.type_float": {"name": "type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_float", "macro_sql": "\n\n{%- macro type_float() -%}\n  {{ return(adapter.dispatch('type_float', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_float"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8533978, "supported_languages": null}, "macro.dbt.default__type_float": {"name": "default__type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_float", "macro_sql": "{% macro default__type_float() %}\n    {{ return(api.Column.translate_type(\"float\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8535938, "supported_languages": null}, "macro.dbt.type_numeric": {"name": "type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_numeric", "macro_sql": "\n\n{%- macro type_numeric() -%}\n  {{ return(adapter.dispatch('type_numeric', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8538015, "supported_languages": null}, "macro.dbt.default__type_numeric": {"name": "default__type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_numeric", "macro_sql": "{% macro default__type_numeric() %}\n    {{ return(api.Column.numeric_type(\"numeric\", 28, 6)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.854027, "supported_languages": null}, "macro.dbt.type_bigint": {"name": "type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_bigint", "macro_sql": "\n\n{%- macro type_bigint() -%}\n  {{ return(adapter.dispatch('type_bigint', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8542302, "supported_languages": null}, "macro.dbt.default__type_bigint": {"name": "default__type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_bigint", "macro_sql": "{% macro default__type_bigint() %}\n    {{ return(api.Column.translate_type(\"bigint\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8544383, "supported_languages": null}, "macro.dbt.type_int": {"name": "type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_int", "macro_sql": "\n\n{%- macro type_int() -%}\n  {{ return(adapter.dispatch('type_int', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8546462, "supported_languages": null}, "macro.dbt.default__type_int": {"name": "default__type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_int", "macro_sql": "{%- macro default__type_int() -%}\n  {{ return(api.Column.translate_type(\"integer\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8548322, "supported_languages": null}, "macro.dbt.type_boolean": {"name": "type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_boolean", "macro_sql": "\n\n{%- macro type_boolean() -%}\n  {{ return(adapter.dispatch('type_boolean', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_boolean"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8550282, "supported_languages": null}, "macro.dbt.default__type_boolean": {"name": "default__type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_boolean", "macro_sql": "{%- macro default__type_boolean() -%}\n  {{ return(api.Column.translate_type(\"boolean\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.855211, "supported_languages": null}, "macro.dbt.array_concat": {"name": "array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt.array_concat", "macro_sql": "{% macro array_concat(array_1, array_2) -%}\n  {{ return(adapter.dispatch('array_concat', 'dbt')(array_1, array_2)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__array_concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8555686, "supported_languages": null}, "macro.dbt.default__array_concat": {"name": "default__array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt.default__array_concat", "macro_sql": "{% macro default__array_concat(array_1, array_2) -%}\n    array_cat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8557458, "supported_languages": null}, "macro.dbt.date": {"name": "date", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date.sql", "original_file_path": "macros/utils/date.sql", "unique_id": "macro.dbt.date", "macro_sql": "{% macro date(year, month, day) %}\n  {{ return(adapter.dispatch('date', 'dbt') (year, month, day)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__date"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8561466, "supported_languages": null}, "macro.dbt.default__date": {"name": "default__date", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date.sql", "original_file_path": "macros/utils/date.sql", "unique_id": "macro.dbt.default__date", "macro_sql": "{% macro default__date(year, month, day) -%}\n    {%- set dt = modules.datetime.date(year, month, day) -%}\n    {%- set iso_8601_formatted_date = dt.strftime('%Y-%m-%d') -%}\n    to_date('{{ iso_8601_formatted_date }}', 'YYYY-MM-DD')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8566496, "supported_languages": null}, "macro.dbt.position": {"name": "position", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt.position", "macro_sql": "{% macro position(substring_text, string_text) -%}\n    {{ return(adapter.dispatch('position', 'dbt') (substring_text, string_text)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__position"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.857028, "supported_languages": null}, "macro.dbt.default__position": {"name": "default__position", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt.default__position", "macro_sql": "{% macro default__position(substring_text, string_text) %}\n\n    position(\n        {{ substring_text }} in {{ string_text }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8572128, "supported_languages": null}, "macro.dbt.cast_bool_to_text": {"name": "cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "unique_id": "macro.dbt.cast_bool_to_text", "macro_sql": "{% macro cast_bool_to_text(field) %}\n  {{ adapter.dispatch('cast_bool_to_text', 'dbt') (field) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8575408, "supported_languages": null}, "macro.dbt.default__cast_bool_to_text": {"name": "default__cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "unique_id": "macro.dbt.default__cast_bool_to_text", "macro_sql": "{% macro default__cast_bool_to_text(field) %}\n    cast({{ field }} as {{ api.Column.translate_type('string') }})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8577435, "supported_languages": null}, "macro.dbt.last_day": {"name": "last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.last_day", "macro_sql": "{% macro last_day(date, datepart) %}\n  {{ return(adapter.dispatch('last_day', 'dbt') (date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8581197, "supported_languages": null}, "macro.dbt.default_last_day": {"name": "default_last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.default_last_day", "macro_sql": "\n\n{%- macro default_last_day(date, datepart) -%}\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd(datepart, '1', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.858452, "supported_languages": null}, "macro.dbt.default__last_day": {"name": "default__last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.default__last_day", "macro_sql": "{% macro default__last_day(date, datepart) -%}\n    {{dbt.default_last_day(date, datepart)}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8586476, "supported_languages": null}, "macro.dbt.escape_single_quotes": {"name": "escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt.escape_single_quotes", "macro_sql": "{% macro escape_single_quotes(expression) %}\n      {{ return(adapter.dispatch('escape_single_quotes', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__escape_single_quotes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8589911, "supported_languages": null}, "macro.dbt.default__escape_single_quotes": {"name": "default__escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt.default__escape_single_quotes", "macro_sql": "{% macro default__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\",\"''\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8591752, "supported_languages": null}, "macro.dbt.except": {"name": "except", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt.except", "macro_sql": "{% macro except() %}\n  {{ return(adapter.dispatch('except', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.859465, "supported_languages": null}, "macro.dbt.default__except": {"name": "default__except", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt.default__except", "macro_sql": "{% macro default__except() %}\n\n    except\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8595774, "supported_languages": null}, "macro.dbt.string_literal": {"name": "string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "unique_id": "macro.dbt.string_literal", "macro_sql": "{%- macro string_literal(value) -%}\n  {{ return(adapter.dispatch('string_literal', 'dbt') (value)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.859893, "supported_languages": null}, "macro.dbt.default__string_literal": {"name": "default__string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "unique_id": "macro.dbt.default__string_literal", "macro_sql": "{% macro default__string_literal(value) -%}\n    '{{ value }}'\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8600373, "supported_languages": null}, "macro.dbt.equals": {"name": "equals", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/equals.sql", "original_file_path": "macros/utils/equals.sql", "unique_id": "macro.dbt.equals", "macro_sql": "{% macro equals(expr1, expr2) %}\n    {{ return(adapter.dispatch('equals', 'dbt') (expr1, expr2)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__equals"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8604467, "supported_languages": null}, "macro.dbt.default__equals": {"name": "default__equals", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/equals.sql", "original_file_path": "macros/utils/equals.sql", "unique_id": "macro.dbt.default__equals", "macro_sql": "{% macro default__equals(expr1, expr2) -%}\n{%- if adapter.behavior.enable_truthy_nulls_equals_macro.no_warn %}\n    case when (({{ expr1 }} = {{ expr2 }}) or ({{ expr1 }} is null and {{ expr2 }} is null))\n        then 0\n        else 1\n    end = 0\n{%- else -%}\n    ({{ expr1 }} = {{ expr2 }})\n{%- endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8608308, "supported_languages": null}, "macro.dbt.concat": {"name": "concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "unique_id": "macro.dbt.concat", "macro_sql": "{% macro concat(fields) -%}\n  {{ return(adapter.dispatch('concat', 'dbt')(fields)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8611293, "supported_languages": null}, "macro.dbt.default__concat": {"name": "default__concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "unique_id": "macro.dbt.default__concat", "macro_sql": "{% macro default__concat(fields) -%}\n    {{ fields|join(' || ') }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8612943, "supported_languages": null}, "macro.dbt.array_append": {"name": "array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt.array_append", "macro_sql": "{% macro array_append(array, new_element) -%}\n  {{ return(adapter.dispatch('array_append', 'dbt')(array, new_element)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__array_append"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8616674, "supported_languages": null}, "macro.dbt.default__array_append": {"name": "default__array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt.default__array_append", "macro_sql": "{% macro default__array_append(array, new_element) -%}\n    array_append({{ array }}, {{ new_element }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.861844, "supported_languages": null}, "macro.dbt.listagg": {"name": "listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt.listagg", "macro_sql": "{% macro listagg(measure, delimiter_text=\"','\", order_by_clause=none, limit_num=none) -%}\n    {{ return(adapter.dispatch('listagg', 'dbt') (measure, delimiter_text, order_by_clause, limit_num)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__listagg"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8623917, "supported_languages": null}, "macro.dbt.default__listagg": {"name": "default__listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt.default__listagg", "macro_sql": "{% macro default__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        array_slice(\n            array_agg(\n                {{ measure }}\n            ){% if order_by_clause -%}\n            within group ({{ order_by_clause }})\n            {%- endif %}\n            ,0\n            ,{{ limit_num }}\n        ),\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    listagg(\n        {{ measure }},\n        {{ delimiter_text }}\n        )\n        {% if order_by_clause -%}\n        within group ({{ order_by_clause }})\n        {%- endif %}\n    {%- endif %}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8629353, "supported_languages": null}, "macro.dbt.get_intervals_between": {"name": "get_intervals_between", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8635669, "supported_languages": null}, "macro.dbt.default__get_intervals_between": {"name": "default__get_intervals_between", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{ dbt.datediff(start_date, end_date, datepart) }}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8643107, "supported_languages": null}, "macro.dbt.date_spine": {"name": "date_spine", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8647451, "supported_languages": null}, "macro.dbt.default__date_spine": {"name": "default__date_spine", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n\n    {# call as follows:\n\n    date_spine(\n        \"day\",\n        \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n        \"dbt.dateadd(week, 1, current_date)\"\n    ) #}\n\n\n    with rawdata as (\n\n        {{dbt.generate_series(\n            dbt.get_intervals_between(start_date, end_date, datepart)\n        )}}\n\n    ),\n\n    all_periods as (\n\n        select (\n            {{\n                dbt.dateadd(\n                    datepart,\n                    \"row_number() over (order by 1) - 1\",\n                    start_date\n                )\n            }}\n        ) as date_{{datepart}}\n        from rawdata\n\n    ),\n\n    filtered as (\n\n        select *\n        from all_periods\n        where date_{{datepart}} <= {{ end_date }}\n\n    )\n\n    select * from filtered\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.generate_series", "macro.dbt.get_intervals_between", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8652039, "supported_languages": null}, "macro.dbt.cast": {"name": "cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast.sql", "original_file_path": "macros/utils/cast.sql", "unique_id": "macro.dbt.cast", "macro_sql": "{% macro cast(field, type) %}\n  {{ return(adapter.dispatch('cast', 'dbt') (field, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8655775, "supported_languages": null}, "macro.dbt.default__cast": {"name": "default__cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast.sql", "original_file_path": "macros/utils/cast.sql", "unique_id": "macro.dbt.default__cast", "macro_sql": "{% macro default__cast(field, type) %}\n    cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.865747, "supported_languages": null}, "macro.dbt.date_trunc": {"name": "date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt.date_trunc", "macro_sql": "{% macro date_trunc(datepart, date) -%}\n  {{ return(adapter.dispatch('date_trunc', 'dbt') (datepart, date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8660913, "supported_languages": null}, "macro.dbt.default__date_trunc": {"name": "default__date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt.default__date_trunc", "macro_sql": "{% macro default__date_trunc(datepart, date) -%}\n    date_trunc('{{datepart}}', {{date}})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8662696, "supported_languages": null}, "macro.dbt.dateadd": {"name": "dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt.dateadd", "macro_sql": "{% macro dateadd(datepart, interval, from_date_or_timestamp) %}\n  {{ return(adapter.dispatch('dateadd', 'dbt')(datepart, interval, from_date_or_timestamp)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.866671, "supported_languages": null}, "macro.dbt.default__dateadd": {"name": "default__dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt.default__dateadd", "macro_sql": "{% macro default__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8668888, "supported_languages": null}, "macro.dbt.run_hooks": {"name": "run_hooks", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8679595, "supported_languages": null}, "macro.dbt.make_hook_config": {"name": "make_hook_config", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8682153, "supported_languages": null}, "macro.dbt.before_begin": {"name": "before_begin", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8684225, "supported_languages": null}, "macro.dbt.in_transaction": {"name": "in_transaction", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8686106, "supported_languages": null}, "macro.dbt.after_commit": {"name": "after_commit", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8688102, "supported_languages": null}, "macro.dbt.set_sql_header": {"name": "set_sql_header", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.869212, "supported_languages": null}, "macro.dbt.should_full_refresh": {"name": "should_full_refresh", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8696282, "supported_languages": null}, "macro.dbt.should_store_failures": {"name": "should_store_failures", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8700109, "supported_languages": null}, "macro.dbt.materialization_seed_default": {"name": "materialization_seed_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/seed.sql", "original_file_path": "macros/materializations/seeds/seed.sql", "unique_id": "macro.dbt.materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set grant_config = config.get('grants') -%}\n  {%- set agate_table = load_agate_table() -%}\n  -- grab current tables grants config for comparison later on\n\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation.render())) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ get_csv_sql(create_table_sql, sql) }};\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n\n  {% set should_revoke = should_revoke(old_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.get_csv_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.873039, "supported_languages": ["sql"]}, "macro.dbt.create_csv_table": {"name": "create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8742137, "supported_languages": null}, "macro.dbt.default__create_csv_table": {"name": "default__create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8753521, "supported_languages": null}, "macro.dbt.reset_csv_table": {"name": "reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.default__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8756611, "supported_languages": null}, "macro.dbt.default__reset_csv_table": {"name": "default__reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation.render() %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8762953, "supported_languages": null}, "macro.dbt.get_csv_sql": {"name": "get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_csv_sql", "macro_sql": "{% macro get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ adapter.dispatch('get_csv_sql', 'dbt')(create_or_truncate_sql, insert_sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_csv_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8765514, "supported_languages": null}, "macro.dbt.default__get_csv_sql": {"name": "default__get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_csv_sql", "macro_sql": "{% macro default__get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ create_or_truncate_sql }};\n    -- dbt seed --\n    {{ insert_sql }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8767478, "supported_languages": null}, "macro.dbt.get_binding_char": {"name": "get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8769362, "supported_languages": null}, "macro.dbt.default__get_binding_char": {"name": "default__get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.877094, "supported_languages": null}, "macro.dbt.get_batch_size": {"name": "get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8774402, "supported_languages": null}, "macro.dbt.default__get_batch_size": {"name": "default__get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8776155, "supported_languages": null}, "macro.dbt.get_seed_column_quoted_csv": {"name": "get_seed_column_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.87824, "supported_languages": null}, "macro.dbt.load_csv_rows": {"name": "load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8784852, "supported_languages": null}, "macro.dbt.default__load_csv_rows": {"name": "default__load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8799834, "supported_languages": null}, "macro.dbt.snapshot_merge_sql": {"name": "snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "unique_id": "macro.dbt.snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8805385, "supported_languages": null}, "macro.dbt.default__snapshot_merge_sql": {"name": "default__snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "unique_id": "macro.dbt.default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    {%- set columns = config.get(\"snapshot_table_column_names\") or get_snapshot_table_column_names() -%}\n\n    merge into {{ target.render() }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.{{ columns.dbt_scd_id }} = DBT_INTERNAL_DEST.{{ columns.dbt_scd_id }}\n\n    when matched\n     {% if config.get(\"dbt_valid_to_current\") %}\n\t{% set source_unique_key = (\"DBT_INTERNAL_DEST.\" ~ columns.dbt_valid_to) | trim %}\n\t{% set target_unique_key = config.get('dbt_valid_to_current') | trim %}\n\tand ({{ equals(source_unique_key, target_unique_key) }} or {{ source_unique_key }} is null)\n\n     {% else %}\n       and DBT_INTERNAL_DEST.{{ columns.dbt_valid_to }} is null\n     {% endif %}\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set {{ columns.dbt_valid_to }} = DBT_INTERNAL_SOURCE.{{ columns.dbt_valid_to }}\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_snapshot_table_column_names", "macro.dbt.equals"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8815584, "supported_languages": null}, "macro.dbt.strategy_dispatch": {"name": "strategy_dispatch", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8840675, "supported_languages": null}, "macro.dbt.snapshot_hash_arguments": {"name": "snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8842998, "supported_languages": null}, "macro.dbt.default__snapshot_hash_arguments": {"name": "default__snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8846142, "supported_languages": null}, "macro.dbt.snapshot_timestamp_strategy": {"name": "snapshot_timestamp_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, model_config, target_exists) %}\n    {# The model_config parameter is no longer used, but is passed in anyway for compatibility. #}\n    {% set primary_key = config.get('unique_key') %}\n    {% set updated_at = config.get('updated_at') %}\n    {% set hard_deletes = adapter.get_hard_deletes_behavior(config) %}\n    {% set invalidate_hard_deletes = hard_deletes == 'invalidate' %}\n    {% set columns = config.get(\"snapshot_table_column_names\") or get_snapshot_table_column_names() %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt-core/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.{{ columns.dbt_valid_from }} < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_args = api.Relation.scd_args(primary_key, updated_at) %}\n    {% set scd_id_expr = snapshot_hash_arguments(scd_args) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes,\n        \"hard_deletes\": hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_snapshot_table_column_names", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.885818, "supported_languages": null}, "macro.dbt.snapshot_string_as_time": {"name": "snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8860347, "supported_languages": null}, "macro.dbt.default__snapshot_string_as_time": {"name": "default__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8863134, "supported_languages": null}, "macro.dbt.snapshot_check_all_get_existing_columns": {"name": "snapshot_check_all_get_existing_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) -%}\n    {%- if not target_exists -%}\n        {#-- no table yet -> return whatever the query does --#}\n        {{ return((false, query_columns)) }}\n    {%- endif -%}\n\n    {#-- handle any schema changes --#}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=node.alias) -%}\n\n    {% if check_cols_config == 'all' %}\n        {%- set query_columns = get_columns_in_query(node['compiled_code']) -%}\n\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {#-- query for proper casing/quoting, to support comparison below --#}\n        {%- set select_check_cols_from_target -%}\n            {#-- N.B. The whitespace below is necessary to avoid edge case issue with comments --#}\n            {#-- See: https://github.com/dbt-labs/dbt-core/issues/6781 --#}\n            select {{ check_cols_config | join(', ') }} from (\n                {{ node['compiled_code'] }}\n            ) subq\n        {%- endset -%}\n        {% set query_columns = get_columns_in_query(select_check_cols_from_target) %}\n\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set existing_cols = adapter.get_columns_in_relation(target_relation) | map(attribute = 'name') | list -%}\n    {%- set ns = namespace() -%} {#-- handle for-loop scoping with a namespace --#}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(adapter.quote(col)) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return((ns.column_added, intersection)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8880515, "supported_languages": null}, "macro.dbt.snapshot_check_strategy": {"name": "snapshot_check_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, model_config, target_exists) %}\n    {# The model_config parameter is no longer used, but is passed in anyway for compatibility. #}\n    {% set check_cols_config = config.get('check_cols') %}\n    {% set primary_key = config.get('unique_key') %}\n    {% set hard_deletes = adapter.get_hard_deletes_behavior(config) %}\n    {% set invalidate_hard_deletes = hard_deletes == 'invalidate' %}\n    {% set updated_at = config.get('updated_at') or snapshot_get_time() %}\n\n    {% set column_added = false %}\n\n    {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        {{ get_true_sql() }}\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_args = api.Relation.scd_args(primary_key, updated_at) %}\n    {% set scd_id_expr = snapshot_hash_arguments(scd_args) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes,\n        \"hard_deletes\": hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.get_true_sql", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.889837, "supported_languages": null}, "macro.dbt.materialization_snapshot_default": {"name": "materialization_snapshot_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot.sql", "original_file_path": "macros/materializations/snapshots/snapshot.sql", "unique_id": "macro.dbt.materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n  -- grab current tables grants config for comparision later on\n  {%- set grant_config = config.get('grants') -%}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {# The model['config'] parameter below is no longer used, but passing anyway for compatibility #}\n  {# It was a dictionary of config, instead of the config object from the context #}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", model['config'], target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_code']) %}\n      {% set build_or_select_sql = build_sql %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {% set columns = config.get(\"snapshot_table_column_names\") or get_snapshot_table_column_names() %}\n\n      {{ adapter.assert_valid_snapshot_target_given_strategy(target_relation, columns, strategy) }}\n\n      {% set build_or_select_sql = snapshot_staging_table(strategy, sql, target_relation) %}\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set remove_columns = ['dbt_change_type', 'DBT_CHANGE_TYPE', 'dbt_unique_key', 'DBT_UNIQUE_KEY'] %}\n      {% if unique_key | is_list %}\n          {% for key in strategy.unique_key %}\n              {{ remove_columns.append('dbt_unique_key_' + loop.index|string) }}\n              {{ remove_columns.append('DBT_UNIQUE_KEY_' + loop.index|string) }}\n          {% endfor %}\n      {% endif %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'in', remove_columns)\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'in', remove_columns)\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n\n  {{ check_time_data_types(build_or_select_sql) }}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% set should_revoke = should_revoke(target_relation_exists, full_refresh_mode=False) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.get_snapshot_table_column_names", "macro.dbt.snapshot_staging_table", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.check_time_data_types", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8948069, "supported_languages": ["sql"]}, "macro.dbt.create_columns": {"name": "create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8970652, "supported_languages": null}, "macro.dbt.default__create_columns": {"name": "default__create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation.render() }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.897458, "supported_languages": null}, "macro.dbt.post_snapshot": {"name": "post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8976824, "supported_languages": null}, "macro.dbt.default__post_snapshot": {"name": "default__post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8978107, "supported_languages": null}, "macro.dbt.get_true_sql": {"name": "get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_true_sql", "macro_sql": "{% macro get_true_sql() %}\n  {{ adapter.dispatch('get_true_sql', 'dbt')() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_true_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8979983, "supported_languages": null}, "macro.dbt.default__get_true_sql": {"name": "default__get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__get_true_sql", "macro_sql": "{% macro default__get_true_sql() %}\n    {{ return('TRUE') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.89815, "supported_languages": null}, "macro.dbt.snapshot_staging_table": {"name": "snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n  {{ adapter.dispatch('snapshot_staging_table', 'dbt')(strategy, source_sql, target_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_staging_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.898408, "supported_languages": null}, "macro.dbt.get_snapshot_table_column_names": {"name": "get_snapshot_table_column_names", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_snapshot_table_column_names", "macro_sql": "{% macro get_snapshot_table_column_names() %}\n    {{ return({'dbt_valid_to': 'dbt_valid_to', 'dbt_valid_from': 'dbt_valid_from', 'dbt_scd_id': 'dbt_scd_id', 'dbt_updated_at': 'dbt_updated_at', 'dbt_is_deleted': 'dbt_is_deleted'}) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.8987024, "supported_languages": null}, "macro.dbt.default__snapshot_staging_table": {"name": "default__snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__snapshot_staging_table", "macro_sql": "{% macro default__snapshot_staging_table(strategy, source_sql, target_relation) -%}\n    {% set columns = config.get('snapshot_table_column_names') or get_snapshot_table_column_names() %}\n    {% if strategy.hard_deletes == 'new_record' %}\n        {% set new_scd_id = snapshot_hash_arguments([columns.dbt_scd_id, snapshot_get_time()]) %}\n    {% endif %}\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *, {{ unique_key_fields(strategy.unique_key) }}\n        from {{ target_relation }}\n        where\n            {% if config.get('dbt_valid_to_current') %}\n\t\t{% set source_unique_key = columns.dbt_valid_to | trim %}\n\t\t{% set target_unique_key = config.get('dbt_valid_to_current') | trim %}\n\n\t\t{# The exact equals semantics between NULL values depends on the current behavior flag set. Also, update records if the source field is null #}\n                ( {{ equals(source_unique_key, target_unique_key) }} or {{ source_unique_key }} is null )\n            {% else %}\n                {{ columns.dbt_valid_to }} is null\n            {% endif %}\n\n    ),\n\n    insertions_source_data as (\n\n        select *, {{ unique_key_fields(strategy.unique_key) }},\n            {{ strategy.updated_at }} as {{ columns.dbt_updated_at }},\n            {{ strategy.updated_at }} as {{ columns.dbt_valid_from }},\n            {{ get_dbt_valid_to_current(strategy, columns) }},\n            {{ strategy.scd_id }} as {{ columns.dbt_scd_id }}\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select *, {{ unique_key_fields(strategy.unique_key) }},\n            {{ strategy.updated_at }} as {{ columns.dbt_updated_at }},\n            {{ strategy.updated_at }} as {{ columns.dbt_valid_from }},\n            {{ strategy.updated_at }} as {{ columns.dbt_valid_to }}\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.hard_deletes == 'invalidate' or strategy.hard_deletes == 'new_record' %}\n\n    deletes_source_data as (\n\n        select *, {{ unique_key_fields(strategy.unique_key) }}\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n          {%- if strategy.hard_deletes == 'new_record' -%}\n            ,'False' as {{ columns.dbt_is_deleted }}\n          {%- endif %}\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data\n            on {{ unique_key_join_on(strategy.unique_key, \"snapshotted_data\", \"source_data\") }}\n            where {{ unique_key_is_null(strategy.unique_key, \"snapshotted_data\") }}\n            or ({{ unique_key_is_not_null(strategy.unique_key, \"snapshotted_data\") }} and ({{ strategy.row_changed }})\n\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.{{ columns.dbt_scd_id }}\n          {%- if strategy.hard_deletes == 'new_record' -%}\n            , snapshotted_data.{{ columns.dbt_is_deleted }}\n          {%- endif %}\n\n        from updates_source_data as source_data\n        join snapshotted_data\n            on {{ unique_key_join_on(strategy.unique_key, \"snapshotted_data\", \"source_data\") }}\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.hard_deletes == 'invalidate' or strategy.hard_deletes == 'new_record' %}\n    ,\n    deletes as (\n\n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as {{ columns.dbt_valid_from }},\n            {{ snapshot_get_time() }} as {{ columns.dbt_updated_at }},\n            {{ snapshot_get_time() }} as {{ columns.dbt_valid_to }},\n            snapshotted_data.{{ columns.dbt_scd_id }}\n          {%- if strategy.hard_deletes == 'new_record' -%}\n            , snapshotted_data.{{ columns.dbt_is_deleted }}\n          {%- endif %}\n        from snapshotted_data\n        left join deletes_source_data as source_data\n            on {{ unique_key_join_on(strategy.unique_key, \"snapshotted_data\", \"source_data\") }}\n            where {{ unique_key_is_null(strategy.unique_key, \"source_data\") }}\n    )\n    {%- endif %}\n\n    {%- if strategy.hard_deletes == 'new_record' %}\n        {% set source_sql_cols = get_column_schema_from_query(source_sql) %}\n    ,\n    deletion_records as (\n\n        select\n            'insert' as dbt_change_type,\n            {%- for col in source_sql_cols -%}\n            snapshotted_data.{{ adapter.quote(col.column) }},\n            {% endfor -%}\n            {%- if strategy.unique_key | is_list -%}\n                {%- for key in strategy.unique_key -%}\n            snapshotted_data.{{ key }} as dbt_unique_key_{{ loop.index }},\n                {% endfor -%}\n            {%- else -%}\n            snapshotted_data.dbt_unique_key as dbt_unique_key,\n            {% endif -%}\n            {{ snapshot_get_time() }} as {{ columns.dbt_valid_from }},\n            {{ snapshot_get_time() }} as {{ columns.dbt_updated_at }},\n            snapshotted_data.{{ columns.dbt_valid_to }} as {{ columns.dbt_valid_to }},\n            {{ new_scd_id }} as {{ columns.dbt_scd_id }},\n            'True' as {{ columns.dbt_is_deleted }}\n        from snapshotted_data\n        left join deletes_source_data as source_data\n            on {{ unique_key_join_on(strategy.unique_key, \"snapshotted_data\", \"source_data\") }}\n        where {{ unique_key_is_null(strategy.unique_key, \"source_data\") }}\n\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.hard_deletes == 'invalidate' or strategy.hard_deletes == 'new_record' %}\n    union all\n    select * from deletes\n    {%- endif %}\n    {%- if strategy.hard_deletes == 'new_record' %}\n    union all\n    select * from deletion_records\n    {%- endif %}\n\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_snapshot_table_column_names", "macro.dbt.snapshot_hash_arguments", "macro.dbt.snapshot_get_time", "macro.dbt.unique_key_fields", "macro.dbt.equals", "macro.dbt.get_dbt_valid_to_current", "macro.dbt.unique_key_join_on", "macro.dbt.unique_key_is_null", "macro.dbt.unique_key_is_not_null", "macro.dbt.get_column_schema_from_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9030163, "supported_languages": null}, "macro.dbt.build_snapshot_table": {"name": "build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) -%}\n  {{ adapter.dispatch('build_snapshot_table', 'dbt')(strategy, sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__build_snapshot_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9033005, "supported_languages": null}, "macro.dbt.default__build_snapshot_table": {"name": "default__build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__build_snapshot_table", "macro_sql": "{% macro default__build_snapshot_table(strategy, sql) %}\n    {% set columns = config.get('snapshot_table_column_names') or get_snapshot_table_column_names() %}\n\n    select *,\n        {{ strategy.scd_id }} as {{ columns.dbt_scd_id }},\n        {{ strategy.updated_at }} as {{ columns.dbt_updated_at }},\n        {{ strategy.updated_at }} as {{ columns.dbt_valid_from }},\n        {{ get_dbt_valid_to_current(strategy, columns) }}\n      {%- if strategy.hard_deletes == 'new_record' -%}\n        , 'False' as {{ columns.dbt_is_deleted }}\n      {% endif -%}\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_snapshot_table_column_names", "macro.dbt.get_dbt_valid_to_current"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9039514, "supported_languages": null}, "macro.dbt.build_snapshot_staging_table": {"name": "build_snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set temp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, temp_relation, select) }}\n    {% endcall %}\n\n    {% do return(temp_relation) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9044929, "supported_languages": null}, "macro.dbt.get_updated_at_column_data_type": {"name": "get_updated_at_column_data_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_updated_at_column_data_type", "macro_sql": "{% macro get_updated_at_column_data_type(snapshot_sql) %}\n    {% set snapshot_sql_column_schema = get_column_schema_from_query(snapshot_sql) %}\n    {% set dbt_updated_at_data_type = null %}\n    {% set ns = namespace() -%} {#-- handle for-loop scoping with a namespace --#}\n    {% set ns.dbt_updated_at_data_type = null -%}\n    {% for column in snapshot_sql_column_schema %}\n    {%   if ((column.column == 'dbt_updated_at') or (column.column == 'DBT_UPDATED_AT')) %}\n    {%     set ns.dbt_updated_at_data_type = column.dtype %}\n    {%   endif %}\n    {% endfor %}\n    {{ return(ns.dbt_updated_at_data_type or none)  }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_column_schema_from_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9053137, "supported_languages": null}, "macro.dbt.check_time_data_types": {"name": "check_time_data_types", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.check_time_data_types", "macro_sql": "{% macro check_time_data_types(sql) %}\n  {% set dbt_updated_at_data_type = get_updated_at_column_data_type(sql) %}\n  {% set snapshot_get_time_data_type = get_snapshot_get_time_data_type() %}\n  {% if snapshot_get_time_data_type is not none and dbt_updated_at_data_type is not none and snapshot_get_time_data_type != dbt_updated_at_data_type %}\n  {%   if exceptions.warn_snapshot_timestamp_data_types %}\n  {{     exceptions.warn_snapshot_timestamp_data_types(snapshot_get_time_data_type, dbt_updated_at_data_type) }}\n  {%   endif %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_updated_at_column_data_type", "macro.dbt.get_snapshot_get_time_data_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9058688, "supported_languages": null}, "macro.dbt.get_dbt_valid_to_current": {"name": "get_dbt_valid_to_current", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_dbt_valid_to_current", "macro_sql": "{% macro get_dbt_valid_to_current(strategy, columns) %}\n  {% set dbt_valid_to_current = config.get('dbt_valid_to_current') or \"null\" %}\n  coalesce(nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}), {{dbt_valid_to_current}})\n  as {{ columns.dbt_valid_to }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9062238, "supported_languages": null}, "macro.dbt.unique_key_fields": {"name": "unique_key_fields", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.unique_key_fields", "macro_sql": "{% macro unique_key_fields(unique_key) %}\n    {% if unique_key | is_list %}\n        {% for key in unique_key %}\n            {{ key }} as dbt_unique_key_{{ loop.index }}\n            {%- if not loop.last %} , {%- endif %}\n        {% endfor %}\n    {% else %}\n        {{ unique_key }} as dbt_unique_key\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9066715, "supported_languages": null}, "macro.dbt.unique_key_join_on": {"name": "unique_key_join_on", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.unique_key_join_on", "macro_sql": "{% macro unique_key_join_on(unique_key, identifier, from_identifier) %}\n    {% if unique_key | is_list %}\n        {% for key in unique_key %}\n\t    {% set source_unique_key = (identifier ~ \".dbt_unique_key_\" ~ loop.index) | trim %}\n\t    {% set target_unique_key = (from_identifier ~ \".dbt_unique_key_\" ~ loop.index) | trim %}\n\t    {{ equals(source_unique_key, target_unique_key) }}\n            {%- if not loop.last %} and {%- endif %}\n        {% endfor %}\n    {% else %}\n        {{ identifier }}.dbt_unique_key = {{ from_identifier }}.dbt_unique_key\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.equals"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.907371, "supported_languages": null}, "macro.dbt.unique_key_is_null": {"name": "unique_key_is_null", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.unique_key_is_null", "macro_sql": "{% macro unique_key_is_null(unique_key, identifier) %}\n    {% if unique_key | is_list %}\n        {{ identifier }}.dbt_unique_key_1 is null\n    {% else %}\n        {{ identifier }}.dbt_unique_key is null\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.907645, "supported_languages": null}, "macro.dbt.unique_key_is_not_null": {"name": "unique_key_is_not_null", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.unique_key_is_not_null", "macro_sql": "{% macro unique_key_is_not_null(unique_key, identifier) %}\n    {% if unique_key | is_list %}\n        {{ identifier }}.dbt_unique_key_1 is not null\n    {% else %}\n        {{ identifier }}.dbt_unique_key is not null\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.907907, "supported_languages": null}, "macro.dbt.materialization_materialized_view_default": {"name": "materialization_materialized_view_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialization_materialized_view_default", "macro_sql": "{% materialization materialized_view, default %}\n    {% set existing_relation = load_cached_relation(this) %}\n    {% set target_relation = this.incorporate(type=this.MaterializedView) %}\n    {% set intermediate_relation = make_intermediate_relation(target_relation) %}\n    {% set backup_relation_type = target_relation.MaterializedView if existing_relation is none else existing_relation.type %}\n    {% set backup_relation = make_backup_relation(target_relation, backup_relation_type) %}\n\n    {{ materialized_view_setup(backup_relation, intermediate_relation, pre_hooks) }}\n\n        {% set build_sql = materialized_view_get_build_sql(existing_relation, target_relation, backup_relation, intermediate_relation) %}\n\n        {% if build_sql == '' %}\n            {{ materialized_view_execute_no_op(target_relation) }}\n        {% else %}\n            {{ materialized_view_execute_build_sql(build_sql, existing_relation, target_relation, post_hooks) }}\n        {% endif %}\n\n    {{ materialized_view_teardown(backup_relation, intermediate_relation, post_hooks) }}\n\n    {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.materialized_view_setup", "macro.dbt.materialized_view_get_build_sql", "macro.dbt.materialized_view_execute_no_op", "macro.dbt.materialized_view_execute_build_sql", "macro.dbt.materialized_view_teardown"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9098237, "supported_languages": ["sql"]}, "macro.dbt.materialized_view_setup": {"name": "materialized_view_setup", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_setup", "macro_sql": "{% macro materialized_view_setup(backup_relation, intermediate_relation, pre_hooks) %}\n\n    -- backup_relation and intermediate_relation should not already exist in the database\n    -- it's possible these exist because of a previous run that exited unexpectedly\n    {% set preexisting_backup_relation = load_cached_relation(backup_relation) %}\n    {% set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) %}\n\n    -- drop the temp relations if they exist already in the database\n    {{ drop_relation_if_exists(preexisting_backup_relation) }}\n    {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n\n    {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9103165, "supported_languages": null}, "macro.dbt.materialized_view_teardown": {"name": "materialized_view_teardown", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_teardown", "macro_sql": "{% macro materialized_view_teardown(backup_relation, intermediate_relation, post_hooks) %}\n\n    -- drop the temp relations if they exist to leave the database clean for the next run\n    {{ drop_relation_if_exists(backup_relation) }}\n    {{ drop_relation_if_exists(intermediate_relation) }}\n\n    {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9106658, "supported_languages": null}, "macro.dbt.materialized_view_get_build_sql": {"name": "materialized_view_get_build_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_get_build_sql", "macro_sql": "{% macro materialized_view_get_build_sql(existing_relation, target_relation, backup_relation, intermediate_relation) %}\n\n    {% set full_refresh_mode = should_full_refresh() %}\n\n    -- determine the scenario we're in: create, full_refresh, alter, refresh data\n    {% if existing_relation is none %}\n        {% set build_sql = get_create_materialized_view_as_sql(target_relation, sql) %}\n    {% elif full_refresh_mode or not existing_relation.is_materialized_view %}\n        {% set build_sql = get_replace_sql(existing_relation, target_relation, sql) %}\n    {% else %}\n\n        -- get config options\n        {% set on_configuration_change = config.get('on_configuration_change') %}\n        {% set configuration_changes = get_materialized_view_configuration_changes(existing_relation, config) %}\n\n        {% if configuration_changes is none %}\n            {% set build_sql = refresh_materialized_view(target_relation) %}\n\n        {% elif on_configuration_change == 'apply' %}\n            {% set build_sql = get_alter_materialized_view_as_sql(target_relation, configuration_changes, sql, existing_relation, backup_relation, intermediate_relation) %}\n        {% elif on_configuration_change == 'continue' %}\n            {% set build_sql = '' %}\n            {{ exceptions.warn(\"Configuration changes were identified and `on_configuration_change` was set to `continue` for `\" ~ target_relation.render() ~ \"`\") }}\n        {% elif on_configuration_change == 'fail' %}\n            {{ exceptions.raise_fail_fast_error(\"Configuration changes were identified and `on_configuration_change` was set to `fail` for `\" ~ target_relation.render() ~ \"`\") }}\n\n        {% else %}\n            -- this only happens if the user provides a value other than `apply`, 'skip', 'fail'\n            {{ exceptions.raise_compiler_error(\"Unexpected configuration scenario\") }}\n\n        {% endif %}\n\n    {% endif %}\n\n    {% do return(build_sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.get_create_materialized_view_as_sql", "macro.dbt.get_replace_sql", "macro.dbt.get_materialized_view_configuration_changes", "macro.dbt.refresh_materialized_view", "macro.dbt.get_alter_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9122589, "supported_languages": null}, "macro.dbt.materialized_view_execute_no_op": {"name": "materialized_view_execute_no_op", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_execute_no_op", "macro_sql": "{% macro materialized_view_execute_no_op(target_relation) %}\n    {% do store_raw_result(\n        name=\"main\",\n        message=\"skip \" ~ target_relation,\n        code=\"skip\",\n        rows_affected=\"-1\"\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9125624, "supported_languages": null}, "macro.dbt.materialized_view_execute_build_sql": {"name": "materialized_view_execute_build_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_execute_build_sql", "macro_sql": "{% macro materialized_view_execute_build_sql(build_sql, existing_relation, target_relation, post_hooks) %}\n\n    -- `BEGIN` happens here:\n    {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n    {% set grant_config = config.get('grants') %}\n\n    {% call statement(name=\"main\") %}\n        {{ build_sql }}\n    {% endcall %}\n\n    {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n    {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n    {% do persist_docs(target_relation, model) %}\n\n    {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n    {{ adapter.commit() }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.913378, "supported_languages": null}, "macro.dbt.materialization_view_default": {"name": "materialization_view_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view.sql", "original_file_path": "macros/materializations/models/view.sql", "unique_id": "macro.dbt.materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='view') -%}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"existing_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the existing_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the existing_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if existing_relation is not none %}\n     /* Do the equivalent of rename_if_exists. 'existing_relation' could have been dropped\n        since the variable was first set. */\n    {% set existing_relation = load_cached_relation(existing_relation) %}\n    {% if existing_relation is not none %}\n        {{ adapter.rename_relation(existing_relation, backup_relation) }}\n    {% endif %}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9159322, "supported_languages": ["sql"]}, "macro.dbt.materialization_table_default": {"name": "materialization_table_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table.sql", "original_file_path": "macros/materializations/models/table.sql", "unique_id": "macro.dbt.materialization_table_default", "macro_sql": "{% materialization table, default %}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') %}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_table_as_sql(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  {% do create_indexes(intermediate_relation) %}\n\n  -- cleanup\n  {% if existing_relation is not none %}\n     /* Do the equivalent of rename_if_exists. 'existing_relation' could have been dropped\n        since the variable was first set. */\n    {% set existing_relation = load_cached_relation(existing_relation) %}\n    {% if existing_relation is not none %}\n        {{ adapter.rename_relation(existing_relation, backup_relation) }}\n    {% endif %}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.get_create_table_as_sql", "macro.dbt.create_indexes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.918474, "supported_languages": ["sql"]}, "macro.dbt.get_quoted_csv": {"name": "get_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9195137, "supported_languages": null}, "macro.dbt.diff_columns": {"name": "diff_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n\n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.920199, "supported_languages": null}, "macro.dbt.diff_column_data_types": {"name": "diff_column_data_types", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type and not sc.can_expand_to(other_column=tc) %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9210155, "supported_languages": null}, "macro.dbt.get_merge_update_columns": {"name": "get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.get_merge_update_columns", "macro_sql": "{% macro get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {{ return(adapter.dispatch('get_merge_update_columns', 'dbt')(merge_update_columns, merge_exclude_columns, dest_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9212976, "supported_languages": null}, "macro.dbt.default__get_merge_update_columns": {"name": "default__get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.default__get_merge_update_columns", "macro_sql": "{% macro default__get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {%- set default_cols = dest_columns | map(attribute=\"quoted\") | list -%}\n\n  {%- if merge_update_columns and merge_exclude_columns -%}\n    {{ exceptions.raise_compiler_error(\n        'Model cannot specify merge_update_columns and merge_exclude_columns. Please update model to use only one config'\n    )}}\n  {%- elif merge_update_columns -%}\n    {%- set update_columns = merge_update_columns -%}\n  {%- elif merge_exclude_columns -%}\n    {%- set update_columns = [] -%}\n    {%- for column in dest_columns -%}\n      {% if column.column | lower not in merge_exclude_columns | map(\"lower\") | list %}\n        {%- do update_columns.append(column.quoted) -%}\n      {% endif %}\n    {%- endfor -%}\n  {%- else -%}\n    {%- set update_columns = default_cols -%}\n  {%- endif -%}\n\n  {{ return(update_columns) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9222, "supported_languages": null}, "macro.dbt.materialization_incremental_default": {"name": "materialization_incremental_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/incremental.sql", "original_file_path": "macros/materializations/models/incremental/incremental.sql", "unique_id": "macro.dbt.materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  -- relations\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {%- set intermediate_relation = make_intermediate_relation(target_relation)-%}\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n\n  -- configs\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()  or existing_relation.is_view) -%}\n  {%- set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') -%}\n\n  -- the temp_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation)-%}\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n   -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {% set incremental_strategy = config.get('incremental_strategy') or 'default' %}\n  {% set strategy_sql_macro_func = adapter.get_incremental_strategy_macro(context, incremental_strategy) %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = get_create_table_as_sql(False, target_relation, sql) %}\n      {% set relation_for_indexes = target_relation %}\n  {% elif full_refresh_mode %}\n      {% set build_sql = get_create_table_as_sql(False, intermediate_relation, sql) %}\n      {% set relation_for_indexes = intermediate_relation %}\n      {% set need_swap = true %}\n  {% else %}\n    {% do run_query(get_create_table_as_sql(True, temp_relation, sql)) %}\n    {% set relation_for_indexes = temp_relation %}\n    {% set contract_config = config.get('contract') %}\n    {% if not contract_config or not contract_config.enforced %}\n      {% do adapter.expand_target_column_types(\n               from_relation=temp_relation,\n               to_relation=target_relation) %}\n    {% endif %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, temp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n\n    {#-- Get the incremental_strategy, the macro to use for the strategy, and build the sql --#}\n    {% set incremental_predicates = config.get('predicates', none) or config.get('incremental_predicates', none) %}\n    {% set strategy_arg_dict = ({'target_relation': target_relation, 'temp_relation': temp_relation, 'unique_key': unique_key, 'dest_columns': dest_columns, 'incremental_predicates': incremental_predicates }) %}\n    {% set build_sql = strategy_sql_macro_func(strategy_arg_dict) %}\n\n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(relation_for_indexes) %}\n  {% endif %}\n\n  {% if need_swap %}\n      {% do adapter.rename_relation(target_relation, backup_relation) %}\n      {% do adapter.rename_relation(intermediate_relation, target_relation) %}\n      {% do to_drop.append(backup_relation) %}\n  {% endif %}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_temp_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.get_create_table_as_sql", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.statement", "macro.dbt.create_indexes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.927737, "supported_languages": ["sql"]}, "macro.dbt.incremental_validate_on_schema_change": {"name": "incremental_validate_on_schema_change", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n\n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n\n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n\n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n\n   {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9292488, "supported_languages": null}, "macro.dbt.check_for_schema_changes": {"name": "check_for_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n\n  {% set schema_changed = False %}\n\n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n\n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n\n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'source_columns': source_columns,\n    'target_columns': target_columns,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9307485, "supported_languages": null}, "macro.dbt.sync_column_schemas": {"name": "sync_column_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n\n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n\n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n\n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(schema_change_message) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.932245, "supported_languages": null}, "macro.dbt.process_schema_changes": {"name": "process_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n\n    {% if on_schema_change == 'ignore' %}\n\n     {{ return({}) }}\n\n    {% else %}\n\n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n\n      {% if schema_changes_dict['schema_changed'] %}\n\n        {% if on_schema_change == 'fail' %}\n\n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways:\n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n\n              Additional troubleshooting context:\n                 Source columns not in target: {{ schema_changes_dict['source_not_in_target'] }}\n                 Target columns not in source: {{ schema_changes_dict['target_not_in_source'] }}\n                 New column types: {{ schema_changes_dict['new_target_types'] }}\n          {% endset %}\n\n          {% do exceptions.raise_compiler_error(fail_msg) %}\n\n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n\n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n        {% endif %}\n\n      {% endif %}\n\n      {{ return(schema_changes_dict['source_columns']) }}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9333088, "supported_languages": null}, "macro.dbt.get_merge_sql": {"name": "get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n   -- back compat for old kwarg name\n  {% set incremental_predicates = kwargs.get('predicates', incremental_predicates) %}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.934591, "supported_languages": null}, "macro.dbt.default__get_merge_sql": {"name": "default__get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n    {%- set predicates = [] if incremental_predicates is none else [] + incremental_predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set merge_update_columns = config.get('merge_update_columns') -%}\n    {%- set merge_exclude_columns = config.get('merge_exclude_columns') -%}\n    {%- set update_columns = get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not mapping and unique_key is not string %}\n            {% for key in unique_key %}\n                {% set this_key_match %}\n                    DBT_INTERNAL_SOURCE.{{ key }} = DBT_INTERNAL_DEST.{{ key }}\n                {% endset %}\n                {% do predicates.append(this_key_match) %}\n            {% endfor %}\n        {% else %}\n            {% set source_unique_key = (\"DBT_INTERNAL_SOURCE.\" ~ unique_key) | trim %}\n\t    {% set target_unique_key = (\"DBT_INTERNAL_DEST.\" ~ unique_key) | trim %}\n\t    {% set unique_key_match = equals(source_unique_key, target_unique_key) | trim %}\n            {% do predicates.append(unique_key_match) %}\n        {% endif %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{\"(\" ~ predicates | join(\") and (\") ~ \")\"}}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt.get_merge_update_columns", "macro.dbt.equals"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9367418, "supported_languages": null}, "macro.dbt.get_delete_insert_merge_sql": {"name": "get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9370704, "supported_languages": null}, "macro.dbt.default__get_delete_insert_merge_sql": {"name": "default__get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key %}\n        {% if unique_key is string %}\n        {% set unique_key = [unique_key] %}\n        {% endif %}\n\n        {%- set unique_key_str = unique_key|join(', ') -%}\n\n        delete from {{ target }} as DBT_INTERNAL_DEST\n        where ({{ unique_key_str }}) in (\n            select distinct {{ unique_key_str }}\n            from {{ source }} as DBT_INTERNAL_SOURCE\n        )\n        {%- if incremental_predicates %}\n            {% for predicate in incremental_predicates %}\n                and {{ predicate }}\n            {% endfor %}\n        {%- endif -%};\n\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9379797, "supported_languages": null}, "macro.dbt.get_insert_overwrite_merge_sql": {"name": "get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.93829, "supported_languages": null}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"name": "default__get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {#-- The only time include_sql_header is True: --#}\n    {#-- BigQuery + insert_overwrite strategy + \"static\" partitions config --#}\n    {#-- We should consider including the sql header at the materialization level instead --#}\n\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9391077, "supported_languages": null}, "macro.dbt.get_incremental_append_sql": {"name": "get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_append_sql", "macro_sql": "{% macro get_incremental_append_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_append_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9399226, "supported_languages": null}, "macro.dbt.default__get_incremental_append_sql": {"name": "default__get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_append_sql", "macro_sql": "{% macro default__get_incremental_append_sql(arg_dict) %}\n\n  {% do return(get_insert_into_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_into_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9402173, "supported_languages": null}, "macro.dbt.get_incremental_delete_insert_sql": {"name": "get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_delete_insert_sql", "macro_sql": "{% macro get_incremental_delete_insert_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_delete_insert_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_delete_insert_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9404674, "supported_languages": null}, "macro.dbt.default__get_incremental_delete_insert_sql": {"name": "default__get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_delete_insert_sql", "macro_sql": "{% macro default__get_incremental_delete_insert_sql(arg_dict) %}\n\n  {% do return(get_delete_insert_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9408228, "supported_languages": null}, "macro.dbt.get_incremental_merge_sql": {"name": "get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_merge_sql", "macro_sql": "{% macro get_incremental_merge_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_merge_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.941048, "supported_languages": null}, "macro.dbt.default__get_incremental_merge_sql": {"name": "default__get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_merge_sql", "macro_sql": "{% macro default__get_incremental_merge_sql(arg_dict) %}\n\n  {% do return(get_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9413903, "supported_languages": null}, "macro.dbt.get_incremental_insert_overwrite_sql": {"name": "get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_insert_overwrite_sql", "macro_sql": "{% macro get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_insert_overwrite_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_insert_overwrite_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.94162, "supported_languages": null}, "macro.dbt.default__get_incremental_insert_overwrite_sql": {"name": "default__get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_insert_overwrite_sql", "macro_sql": "{% macro default__get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {% do return(get_insert_overwrite_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9419253, "supported_languages": null}, "macro.dbt.get_incremental_default_sql": {"name": "get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_default_sql", "macro_sql": "{% macro get_incremental_default_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_default_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_incremental_default_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9421456, "supported_languages": null}, "macro.dbt.default__get_incremental_default_sql": {"name": "default__get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_default_sql", "macro_sql": "{% macro default__get_incremental_default_sql(arg_dict) %}\n\n  {% do return(get_incremental_append_sql(arg_dict)) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9423306, "supported_languages": null}, "macro.dbt.get_incremental_microbatch_sql": {"name": "get_incremental_microbatch_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_microbatch_sql", "macro_sql": "{% macro get_incremental_microbatch_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_microbatch_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_incremental_microbatch_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9425642, "supported_languages": null}, "macro.dbt.default__get_incremental_microbatch_sql": {"name": "default__get_incremental_microbatch_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_microbatch_sql", "macro_sql": "{% macro default__get_incremental_microbatch_sql(arg_dict) %}\n\n  {{ exceptions.raise_not_implemented('microbatch materialization strategy not implemented for adapter ' + adapter.type()) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9427674, "supported_languages": null}, "macro.dbt.get_insert_into_sql": {"name": "get_insert_into_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_insert_into_sql", "macro_sql": "{% macro get_insert_into_sql(target_relation, temp_relation, dest_columns) %}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    insert into {{ target_relation }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ temp_relation }}\n    )\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.943116, "supported_languages": null}, "macro.dbt.is_incremental": {"name": "is_incremental", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/is_incremental.sql", "original_file_path": "macros/materializations/models/incremental/is_incremental.sql", "unique_id": "macro.dbt.is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.9438815, "supported_languages": null}, "macro.dbt.create_or_replace_clone": {"name": "create_or_replace_clone", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/create_or_replace_clone.sql", "original_file_path": "macros/materializations/models/clone/create_or_replace_clone.sql", "unique_id": "macro.dbt.create_or_replace_clone", "macro_sql": "{% macro create_or_replace_clone(this_relation, defer_relation) %}\n    {{ return(adapter.dispatch('create_or_replace_clone', 'dbt')(this_relation, defer_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.snowflake__create_or_replace_clone"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557615.944255, "supported_languages": null}, "macro.dbt.default__create_or_replace_clone": {"name": "default__create_or_replace_clone", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/create_or_replace_clone.sql", "original_file_path": "macros/materializations/models/clone/create_or_replace_clone.sql", "unique_id": "macro.dbt.default__create_or_replace_clone", "macro_sql": "{% macro default__create_or_replace_clone(this_relation, defer_relation) %}\n    create or replace table {{ this_relation.render() }} clone {{ defer_relation.render() }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.016963, "supported_languages": null}, "macro.dbt.can_clone_table": {"name": "can_clone_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/can_clone_table.sql", "original_file_path": "macros/materializations/models/clone/can_clone_table.sql", "unique_id": "macro.dbt.can_clone_table", "macro_sql": "{% macro can_clone_table() %}\n    {{ return(adapter.dispatch('can_clone_table', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__can_clone_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0174413, "supported_languages": null}, "macro.dbt.default__can_clone_table": {"name": "default__can_clone_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/can_clone_table.sql", "original_file_path": "macros/materializations/models/clone/can_clone_table.sql", "unique_id": "macro.dbt.default__can_clone_table", "macro_sql": "{% macro default__can_clone_table() %}\n    {{ return(False) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0176268, "supported_languages": null}, "macro.dbt.materialization_clone_default": {"name": "materialization_clone_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/clone.sql", "original_file_path": "macros/materializations/models/clone/clone.sql", "unique_id": "macro.dbt.materialization_clone_default", "macro_sql": "{%- materialization clone, default -%}\n\n  {%- set relations = {'relations': []} -%}\n\n  {%- if not defer_relation -%}\n      -- nothing to do\n      {{ log(\"No relation found in state manifest for \" ~ model.unique_id, info=True) }}\n      {{ return(relations) }}\n  {%- endif -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n\n  {%- if existing_relation and not flags.FULL_REFRESH -%}\n      -- noop!\n      {{ log(\"Relation \" ~ existing_relation ~ \" already exists\", info=True) }}\n      {{ return(relations) }}\n  {%- endif -%}\n\n  {%- set other_existing_relation = load_cached_relation(defer_relation) -%}\n\n  -- If this is a database that can do zero-copy cloning of tables, and the other relation is a table, then this will be a table\n  -- Otherwise, this will be a view\n\n  {% set can_clone_table = can_clone_table() %}\n\n  {%- if other_existing_relation and other_existing_relation.type == 'table' and can_clone_table -%}\n\n      {%- set target_relation = this.incorporate(type='table') -%}\n      {% if existing_relation is not none and not existing_relation.is_table %}\n        {{ log(\"Dropping relation \" ~ existing_relation.render() ~ \" because it is of type \" ~ existing_relation.type) }}\n        {{ drop_relation_if_exists(existing_relation) }}\n      {% endif %}\n\n      -- as a general rule, data platforms that can clone tables can also do atomic 'create or replace'\n      {% call statement('main') %}\n          {% if target_relation and defer_relation and target_relation == defer_relation %}\n              {{ log(\"Target relation and defer relation are the same, skipping clone for relation: \" ~ target_relation.render()) }}\n          {% else %}\n              {{ create_or_replace_clone(target_relation, defer_relation) }}\n          {% endif %}\n\n      {% endcall %}\n\n      {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n      {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n      {% do persist_docs(target_relation, model) %}\n\n      {{ return({'relations': [target_relation]}) }}\n\n  {%- else -%}\n\n      {%- set target_relation = this.incorporate(type='view') -%}\n\n      -- reuse the view materialization\n      -- TODO: support actual dispatch for materialization macros\n      -- Tracking ticket: https://github.com/dbt-labs/dbt-core/issues/7799\n      {% set search_name = \"materialization_view_\" ~ adapter.type() %}\n      {% if not search_name in context %}\n          {% set search_name = \"materialization_view_default\" %}\n      {% endif %}\n      {% set materialization_macro = context[search_name] %}\n      {% set relations = materialization_macro() %}\n      {{ return(relations) }}\n\n  {%- endif -%}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.can_clone_table", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_or_replace_clone", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.020752, "supported_languages": ["sql"]}, "macro.dbt.materialization_test_default": {"name": "materialization_test_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/test.sql", "original_file_path": "macros/materializations/tests/test.sql", "unique_id": "macro.dbt.materialization_test_default", "macro_sql": "{%- materialization test, default -%}\n\n  {% set relations = [] %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n    {% set store_failures_as = config.get('store_failures_as') %}\n    -- if `--store-failures` is invoked via command line and `store_failures_as` is not set,\n    -- config.get('store_failures_as', 'table') returns None, not 'table'\n    {% if store_failures_as == none %}{% set store_failures_as = 'table' %}{% endif %}\n    {% if store_failures_as not in ['table', 'view'] %}\n        {{ exceptions.raise_compiler_error(\n            \"'\" ~ store_failures_as ~ \"' is not a valid value for `store_failures_as`. \"\n            \"Accepted values are: ['ephemeral', 'table', 'view']\"\n        ) }}\n    {% endif %}\n\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type=store_failures_as) -%} %}\n\n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n\n    {% call statement(auto_begin=True) %}\n        {{ get_create_sql(target_relation, sql) }}\n    {% endcall %}\n\n    {% do relations.append(target_relation) %}\n\n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n\n    {{ adapter.commit() }}\n\n  {% else %}\n\n      {% set main_sql = sql %}\n\n  {% endif %}\n\n  {% set limit = config.get('limit') %}\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit)}}\n\n  {%- endcall %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.get_create_sql", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0233934, "supported_languages": ["sql"]}, "macro.dbt.get_where_subquery": {"name": "get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "unique_id": "macro.dbt.get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery', 'dbt')(relation)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.023856, "supported_languages": null}, "macro.dbt.default__get_where_subquery": {"name": "default__get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "unique_id": "macro.dbt.default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.024384, "supported_languages": null}, "macro.dbt.materialization_unit_default": {"name": "materialization_unit_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/unit.sql", "original_file_path": "macros/materializations/tests/unit.sql", "unique_id": "macro.dbt.materialization_unit_default", "macro_sql": "{%- materialization unit, default -%}\n\n  {% set relations = [] %}\n\n  {% set expected_rows = config.get('expected_rows') %}\n  {% set expected_sql = config.get('expected_sql') %}\n  {% set tested_expected_column_names = expected_rows[0].keys() if (expected_rows | length ) > 0 else get_columns_in_query(sql) %} %}\n\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {% do run_query(get_create_table_as_sql(True, temp_relation, get_empty_subquery_sql(sql))) %}\n  {%- set columns_in_relation = adapter.get_columns_in_relation(temp_relation) -%}\n  {%- set column_name_to_data_types = {} -%}\n  {%- for column in columns_in_relation -%}\n  {%-   do column_name_to_data_types.update({column.name|lower: column.data_type}) -%}\n  {%- endfor -%}\n\n  {% if not expected_sql %}\n  {%   set expected_sql = get_expected_sql(expected_rows, column_name_to_data_types) %}\n  {% endif %}\n  {% set unit_test_sql = get_unit_test_sql(sql, expected_sql, tested_expected_column_names) %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ unit_test_sql }}\n\n  {%- endcall %}\n\n  {% do adapter.drop_relation(temp_relation) %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.get_columns_in_query", "macro.dbt.make_temp_relation", "macro.dbt.run_query", "macro.dbt.get_create_table_as_sql", "macro.dbt.get_empty_subquery_sql", "macro.dbt.get_expected_sql", "macro.dbt.get_unit_test_sql", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0263407, "supported_languages": ["sql"]}, "macro.dbt.get_test_sql": {"name": "get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0270514, "supported_languages": null}, "macro.dbt.default__get_test_sql": {"name": "default__get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0274706, "supported_languages": null}, "macro.dbt.get_unit_test_sql": {"name": "get_unit_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.get_unit_test_sql", "macro_sql": "{% macro get_unit_test_sql(main_sql, expected_fixture_sql, expected_column_names) -%}\n  {{ adapter.dispatch('get_unit_test_sql', 'dbt')(main_sql, expected_fixture_sql, expected_column_names) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_unit_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0277393, "supported_languages": null}, "macro.dbt.default__get_unit_test_sql": {"name": "default__get_unit_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.default__get_unit_test_sql", "macro_sql": "{% macro default__get_unit_test_sql(main_sql, expected_fixture_sql, expected_column_names) -%}\n-- Build actual result given inputs\nwith dbt_internal_unit_test_actual as (\n  select\n    {% for expected_column_name in expected_column_names %}{{expected_column_name}}{% if not loop.last -%},{% endif %}{%- endfor -%}, {{ dbt.string_literal(\"actual\") }} as {{ adapter.quote(\"actual_or_expected\") }}\n  from (\n    {{ main_sql }}\n  ) _dbt_internal_unit_test_actual\n),\n-- Build expected result\ndbt_internal_unit_test_expected as (\n  select\n    {% for expected_column_name in expected_column_names %}{{expected_column_name}}{% if not loop.last -%}, {% endif %}{%- endfor -%}, {{ dbt.string_literal(\"expected\") }} as {{ adapter.quote(\"actual_or_expected\") }}\n  from (\n    {{ expected_fixture_sql }}\n  ) _dbt_internal_unit_test_expected\n)\n-- Union actual and expected results\nselect * from dbt_internal_unit_test_actual\nunion all\nselect * from dbt_internal_unit_test_expected\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0285335, "supported_languages": null}, "macro.dbt.default__test_unique": {"name": "default__test_unique", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/unique.sql", "original_file_path": "macros/generic_test_sql/unique.sql", "unique_id": "macro.dbt.default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0288687, "supported_languages": null}, "macro.dbt.default__test_not_null": {"name": "default__test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/not_null.sql", "original_file_path": "macros/generic_test_sql/not_null.sql", "unique_id": "macro.dbt.default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else column_name %}\n\nselect {{ column_list }}\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.029245, "supported_languages": null}, "macro.dbt.default__test_accepted_values": {"name": "default__test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/accepted_values.sql", "original_file_path": "macros/generic_test_sql/accepted_values.sql", "unique_id": "macro.dbt.default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.029928, "supported_languages": null}, "macro.dbt.default__test_relationships": {"name": "default__test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/relationships.sql", "original_file_path": "macros/generic_test_sql/relationships.sql", "unique_id": "macro.dbt.default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0303233, "supported_languages": null}, "macro.dbt.resolve_model_name": {"name": "resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.resolve_model_name", "macro_sql": "{% macro resolve_model_name(input_model_name) %}\n    {{ return(adapter.dispatch('resolve_model_name', 'dbt')(input_model_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0312274, "supported_languages": null}, "macro.dbt.default__resolve_model_name": {"name": "default__resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.default__resolve_model_name", "macro_sql": "\n\n{%- macro default__resolve_model_name(input_model_name) -%}\n    {{  input_model_name | string | replace('\"', '\\\"') }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0314531, "supported_languages": null}, "macro.dbt.build_ref_function": {"name": "build_ref_function", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_ref_function", "macro_sql": "{% macro build_ref_function(model) %}\n\n    {%- set ref_dict = {} -%}\n    {%- for _ref in model.refs -%}\n        {% set _ref_args = [_ref.get('package'), _ref['name']] if _ref.get('package') else [_ref['name'],] %}\n        {%- set resolved = ref(*_ref_args, v=_ref.get('version')) -%}\n\n        {#\n            We want to get the string of the returned relation by calling .render() in order to skip sample/empty\n            mode rendering logic. However, people override the default ref macro, and often return a string instead\n            of a relation (like the ref macro does by default). Thus, to make sure we dont blow things up, we have\n            to ensure the resolved relation has a .render() method.\n        #}\n        {%- if resolved.render is defined and resolved.render is callable -%}\n            {%- set resolved = resolved.render() -%}\n        {%- endif -%}\n\n        {%- if _ref.get('version') -%}\n            {% do _ref_args.extend([\"v\" ~ _ref['version']]) %}\n        {%- endif -%}\n       {%- do ref_dict.update({_ref_args | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef ref(*args, **kwargs):\n    refs = {{ ref_dict | tojson }}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0328004, "supported_languages": null}, "macro.dbt.build_source_function": {"name": "build_source_function", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_source_function", "macro_sql": "{% macro build_source_function(model) %}\n\n    {%- set source_dict = {} -%}\n    {%- for _source in model.sources -%}\n        {%- set resolved = source(*_source) -%}\n        {%- do source_dict.update({_source | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef source(*args, dbt_load_df_function):\n    sources = {{ source_dict | tojson }}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0333366, "supported_languages": null}, "macro.dbt.build_config_dict": {"name": "build_config_dict", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_config_dict", "macro_sql": "{% macro build_config_dict(model) %}\n    {%- set config_dict = {} -%}\n    {% set config_dbt_used = zip(model.config.config_keys_used, model.config.config_keys_defaults) | list %}\n    {%- for key, default in config_dbt_used -%}\n        {# weird type testing with enum, would be much easier to write this logic in Python! #}\n        {%- if key == \"language\" -%}\n          {%- set value = \"python\" -%}\n        {%- endif -%}\n        {%- set value = model.config.get(key, default) -%}\n        {%- do config_dict.update({key: value}) -%}\n    {%- endfor -%}\nconfig_dict = {{ config_dict }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0340948, "supported_languages": null}, "macro.dbt.py_script_postfix": {"name": "py_script_postfix", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.py_script_postfix", "macro_sql": "{% macro py_script_postfix(model) %}\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\n{{ build_ref_function(model ) }}\n{{ build_source_function(model ) }}\n{{ build_config_dict(model) }}\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"{{ this.database }}\"\n    schema = \"{{ this.schema }}\"\n    identifier = \"{{ this.identifier }}\"\n    {% set this_relation_name = resolve_model_name(this) %}\n    def __repr__(self):\n        return '{{ this_relation_name  }}'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = {{ is_incremental() }}\n\n# COMMAND ----------\n{{py_script_comment()}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.build_ref_function", "macro.dbt.build_source_function", "macro.dbt.build_config_dict", "macro.dbt.resolve_model_name", "macro.dbt.is_incremental", "macro.dbt.py_script_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0347114, "supported_languages": null}, "macro.dbt.py_script_comment": {"name": "py_script_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.py_script_comment", "macro_sql": "{%macro py_script_comment()%}\n{%endmacro%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0348208, "supported_languages": null}, "macro.dbt.get_create_backup_sql": {"name": "get_create_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_backup.sql", "original_file_path": "macros/relations/create_backup.sql", "unique_id": "macro.dbt.get_create_backup_sql", "macro_sql": "{%- macro get_create_backup_sql(relation) -%}\n    {{- log('Applying CREATE BACKUP to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_backup_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_create_backup_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0352483, "supported_languages": null}, "macro.dbt.default__get_create_backup_sql": {"name": "default__get_create_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_backup.sql", "original_file_path": "macros/relations/create_backup.sql", "unique_id": "macro.dbt.default__get_create_backup_sql", "macro_sql": "{%- macro default__get_create_backup_sql(relation) -%}\n\n    -- get the standard backup name\n    {% set backup_relation = make_backup_relation(relation, relation.type) %}\n\n    -- drop any pre-existing backup\n    {{ get_drop_sql(backup_relation) }};\n\n    {{ get_rename_sql(relation, backup_relation.identifier) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_backup_relation", "macro.dbt.get_drop_sql", "macro.dbt.get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0356185, "supported_languages": null}, "macro.dbt.drop_schema_named": {"name": "drop_schema_named", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/schema.sql", "original_file_path": "macros/relations/schema.sql", "unique_id": "macro.dbt.drop_schema_named", "macro_sql": "{% macro drop_schema_named(schema_name) %}\n    {{ return(adapter.dispatch('drop_schema_named', 'dbt') (schema_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_schema_named"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0359664, "supported_languages": null}, "macro.dbt.default__drop_schema_named": {"name": "default__drop_schema_named", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/schema.sql", "original_file_path": "macros/relations/schema.sql", "unique_id": "macro.dbt.default__drop_schema_named", "macro_sql": "{% macro default__drop_schema_named(schema_name) %}\n  {% set schema_relation = api.Relation.create(schema=schema_name) %}\n  {{ adapter.drop_schema(schema_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.036245, "supported_languages": null}, "macro.dbt.get_drop_backup_sql": {"name": "get_drop_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop_backup.sql", "original_file_path": "macros/relations/drop_backup.sql", "unique_id": "macro.dbt.get_drop_backup_sql", "macro_sql": "{%- macro get_drop_backup_sql(relation) -%}\n    {{- log('Applying DROP BACKUP to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_drop_backup_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_drop_backup_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0366611, "supported_languages": null}, "macro.dbt.default__get_drop_backup_sql": {"name": "default__get_drop_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop_backup.sql", "original_file_path": "macros/relations/drop_backup.sql", "unique_id": "macro.dbt.default__get_drop_backup_sql", "macro_sql": "{%- macro default__get_drop_backup_sql(relation) -%}\n\n    -- get the standard backup name\n    {% set backup_relation = make_backup_relation(relation, relation.type) %}\n\n    {{ get_drop_sql(backup_relation) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_backup_relation", "macro.dbt.get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0369377, "supported_languages": null}, "macro.dbt.get_replace_sql": {"name": "get_replace_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/replace.sql", "original_file_path": "macros/relations/replace.sql", "unique_id": "macro.dbt.get_replace_sql", "macro_sql": "{% macro get_replace_sql(existing_relation, target_relation, sql) %}\n    {{- log('Applying REPLACE to: ' ~ existing_relation) -}}\n    {{- adapter.dispatch('get_replace_sql', 'dbt')(existing_relation, target_relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_replace_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.037623, "supported_languages": null}, "macro.dbt.default__get_replace_sql": {"name": "default__get_replace_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/replace.sql", "original_file_path": "macros/relations/replace.sql", "unique_id": "macro.dbt.default__get_replace_sql", "macro_sql": "{% macro default__get_replace_sql(existing_relation, target_relation, sql) %}\n\n    {# /* use a create or replace statement if possible */ #}\n\n    {% set is_replaceable = existing_relation.type == target_relation.type and existing_relation.can_be_replaced %}\n\n    {% if is_replaceable and existing_relation.is_view %}\n        {{ get_replace_view_sql(target_relation, sql) }}\n\n    {% elif is_replaceable and existing_relation.is_table %}\n        {{ get_replace_table_sql(target_relation, sql) }}\n\n    {% elif is_replaceable and existing_relation.is_materialized_view %}\n        {{ get_replace_materialized_view_sql(target_relation, sql) }}\n\n    {# /* a create or replace statement is not possible, so try to stage and/or backup to be safe */ #}\n\n    {# /* create target_relation as an intermediate relation, then swap it out with the existing one using a backup */ #}\n    {%- elif target_relation.can_be_renamed and existing_relation.can_be_renamed -%}\n        {{ get_create_intermediate_sql(target_relation, sql) }};\n        {{ get_create_backup_sql(existing_relation) }};\n        {{ get_rename_intermediate_sql(target_relation) }};\n        {{ get_drop_backup_sql(existing_relation) }}\n\n    {# /* create target_relation as an intermediate relation, then swap it out with the existing one without using a backup */ #}\n    {%- elif target_relation.can_be_renamed -%}\n        {{ get_create_intermediate_sql(target_relation, sql) }};\n        {{ get_drop_sql(existing_relation) }};\n        {{ get_rename_intermediate_sql(target_relation) }}\n\n    {# /* create target_relation in place by first backing up the existing relation */ #}\n    {%- elif existing_relation.can_be_renamed -%}\n        {{ get_create_backup_sql(existing_relation) }};\n        {{ get_create_sql(target_relation, sql) }};\n        {{ get_drop_backup_sql(existing_relation) }}\n\n    {# /* no renaming is allowed, so just drop and create */ #}\n    {%- else -%}\n        {{ get_drop_sql(existing_relation) }};\n        {{ get_create_sql(target_relation, sql) }}\n\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_replace_view_sql", "macro.dbt.get_replace_table_sql", "macro.dbt.get_replace_materialized_view_sql", "macro.dbt.get_create_intermediate_sql", "macro.dbt.get_create_backup_sql", "macro.dbt.get_rename_intermediate_sql", "macro.dbt.get_drop_backup_sql", "macro.dbt.get_drop_sql", "macro.dbt.get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0390592, "supported_languages": null}, "macro.dbt.get_rename_intermediate_sql": {"name": "get_rename_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename_intermediate.sql", "original_file_path": "macros/relations/rename_intermediate.sql", "unique_id": "macro.dbt.get_rename_intermediate_sql", "macro_sql": "{%- macro get_rename_intermediate_sql(relation) -%}\n    {{- log('Applying RENAME INTERMEDIATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_rename_intermediate_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_rename_intermediate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0394871, "supported_languages": null}, "macro.dbt.default__get_rename_intermediate_sql": {"name": "default__get_rename_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename_intermediate.sql", "original_file_path": "macros/relations/rename_intermediate.sql", "unique_id": "macro.dbt.default__get_rename_intermediate_sql", "macro_sql": "{%- macro default__get_rename_intermediate_sql(relation) -%}\n\n    -- get the standard intermediate name\n    {% set intermediate_relation = make_intermediate_relation(relation) %}\n\n    {{ get_rename_sql(intermediate_relation, relation.identifier) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_intermediate_relation", "macro.dbt.get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.039762, "supported_languages": null}, "macro.dbt.get_create_sql": {"name": "get_create_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create.sql", "original_file_path": "macros/relations/create.sql", "unique_id": "macro.dbt.get_create_sql", "macro_sql": "{%- macro get_create_sql(relation, sql) -%}\n    {{- log('Applying CREATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_sql', 'dbt')(relation, sql) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0402296, "supported_languages": null}, "macro.dbt.default__get_create_sql": {"name": "default__get_create_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create.sql", "original_file_path": "macros/relations/create.sql", "unique_id": "macro.dbt.default__get_create_sql", "macro_sql": "{%- macro default__get_create_sql(relation, sql) -%}\n\n    {%- if relation.is_view -%}\n        {{ get_create_view_as_sql(relation, sql) }}\n\n    {%- elif relation.is_table -%}\n        {{ get_create_table_as_sql(False, relation, sql) }}\n\n    {%- elif relation.is_materialized_view -%}\n        {{ get_create_materialized_view_as_sql(relation, sql) }}\n\n    {%- else -%}\n        {{- exceptions.raise_compiler_error(\"`get_create_sql` has not been implemented for: \" ~ relation.type ) -}}\n\n    {%- endif -%}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.get_create_view_as_sql", "macro.dbt.get_create_table_as_sql", "macro.dbt.get_create_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0407972, "supported_languages": null}, "macro.dbt.get_rename_sql": {"name": "get_rename_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.get_rename_sql", "macro_sql": "{%- macro get_rename_sql(relation, new_name) -%}\n    {{- log('Applying RENAME to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_rename_sql', 'dbt')(relation, new_name) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.041373, "supported_languages": null}, "macro.dbt.default__get_rename_sql": {"name": "default__get_rename_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.default__get_rename_sql", "macro_sql": "{%- macro default__get_rename_sql(relation, new_name) -%}\n\n    {%- if relation.is_view -%}\n        {{ get_rename_view_sql(relation, new_name) }}\n\n    {%- elif relation.is_table -%}\n        {{ get_rename_table_sql(relation, new_name) }}\n\n    {%- elif relation.is_materialized_view -%}\n        {{ get_rename_materialized_view_sql(relation, new_name) }}\n\n    {%- else -%}\n        {{- exceptions.raise_compiler_error(\"`get_rename_sql` has not been implemented for: \" ~ relation.type ) -}}\n\n    {%- endif -%}\n\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.get_rename_view_sql", "macro.dbt.get_rename_table_sql", "macro.dbt.get_rename_materialized_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0419157, "supported_languages": null}, "macro.dbt.rename_relation": {"name": "rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0421731, "supported_languages": null}, "macro.dbt.default__rename_relation": {"name": "default__rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation.render() }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0425627, "supported_languages": null}, "macro.dbt.get_drop_sql": {"name": "get_drop_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.get_drop_sql", "macro_sql": "{%- macro get_drop_sql(relation) -%}\n    {{- log('Applying DROP to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_drop_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0431085, "supported_languages": null}, "macro.dbt.default__get_drop_sql": {"name": "default__get_drop_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.default__get_drop_sql", "macro_sql": "{%- macro default__get_drop_sql(relation) -%}\n\n    {%- if relation.is_view -%}\n        {{ drop_view(relation) }}\n\n    {%- elif relation.is_table -%}\n        {{ drop_table(relation) }}\n\n    {%- elif relation.is_materialized_view -%}\n        {{ drop_materialized_view(relation) }}\n\n    {%- else -%}\n        drop {{ relation.type }} if exists {{ relation.render() }} cascade\n\n    {%- endif -%}\n\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.drop_view", "macro.dbt.drop_table", "macro.dbt.drop_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0436203, "supported_languages": null}, "macro.dbt.drop_relation": {"name": "drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n    {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0438519, "supported_languages": null}, "macro.dbt.default__drop_relation": {"name": "default__drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n    {% call statement('drop_relation', auto_begin=False) -%}\n        {{ get_drop_sql(relation) }}\n    {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.044104, "supported_languages": null}, "macro.dbt.drop_relation_if_exists": {"name": "drop_relation_if_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.04435, "supported_languages": null}, "macro.dbt.get_create_intermediate_sql": {"name": "get_create_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_intermediate.sql", "original_file_path": "macros/relations/create_intermediate.sql", "unique_id": "macro.dbt.get_create_intermediate_sql", "macro_sql": "{%- macro get_create_intermediate_sql(relation, sql) -%}\n    {{- log('Applying CREATE INTERMEDIATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_intermediate_sql', 'dbt')(relation, sql) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_create_intermediate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0448074, "supported_languages": null}, "macro.dbt.default__get_create_intermediate_sql": {"name": "default__get_create_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_intermediate.sql", "original_file_path": "macros/relations/create_intermediate.sql", "unique_id": "macro.dbt.default__get_create_intermediate_sql", "macro_sql": "{%- macro default__get_create_intermediate_sql(relation, sql) -%}\n\n    -- get the standard intermediate name\n    {% set intermediate_relation = make_intermediate_relation(relation) %}\n\n    -- drop any pre-existing intermediate\n    {{ get_drop_sql(intermediate_relation) }};\n\n    {{ get_create_sql(intermediate_relation, sql) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_intermediate_relation", "macro.dbt.get_drop_sql", "macro.dbt.get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0451257, "supported_languages": null}, "macro.dbt.get_replace_table_sql": {"name": "get_replace_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/replace.sql", "original_file_path": "macros/relations/table/replace.sql", "unique_id": "macro.dbt.get_replace_table_sql", "macro_sql": "{% macro get_replace_table_sql(relation, sql) %}\n    {{- adapter.dispatch('get_replace_table_sql', 'dbt')(relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_replace_table_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.045472, "supported_languages": null}, "macro.dbt.default__get_replace_table_sql": {"name": "default__get_replace_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/replace.sql", "original_file_path": "macros/relations/table/replace.sql", "unique_id": "macro.dbt.default__get_replace_table_sql", "macro_sql": "{% macro default__get_replace_table_sql(relation, sql) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_replace_table_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0458343, "supported_languages": null}, "macro.dbt.get_create_table_as_sql": {"name": "get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.get_create_table_as_sql", "macro_sql": "{% macro get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ adapter.dispatch('get_create_table_as_sql', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0466259, "supported_languages": null}, "macro.dbt.default__get_create_table_as_sql": {"name": "default__get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__get_create_table_as_sql", "macro_sql": "{% macro default__get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ return(create_table_as(temporary, relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0468624, "supported_languages": null}, "macro.dbt.create_table_as": {"name": "create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, compiled_code, language='sql') -%}\n  {# backward compatibility for create_table_as that does not support language #}\n  {% if language == \"sql\" %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code)}}\n  {% else %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code, language) }}\n  {% endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.snowflake__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0474, "supported_languages": null}, "macro.dbt.default__create_table_as": {"name": "default__create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  {% set contract_config = config.get('contract') %}\n  {% if contract_config.enforced and (not temporary) %}\n    {{ get_assert_columns_equivalent(sql) }}\n    {{ get_table_columns_and_constraints() }}\n    {%- set sql = get_select_subquery(sql) %}\n  {% endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt.get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0482483, "supported_languages": null}, "macro.dbt.default__get_column_names": {"name": "default__get_column_names", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__get_column_names", "macro_sql": "{% macro default__get_column_names() %}\n  {#- loop through user_provided_columns to get column names -#}\n    {%- set user_provided_columns = model['columns'] -%}\n    {%- for i in user_provided_columns %}\n      {%- set col = user_provided_columns[i] -%}\n      {%- set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] -%}\n      {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.048853, "supported_languages": null}, "macro.dbt.get_select_subquery": {"name": "get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.get_select_subquery", "macro_sql": "{% macro get_select_subquery(sql) %}\n  {{ return(adapter.dispatch('get_select_subquery', 'dbt')(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0490906, "supported_languages": null}, "macro.dbt.default__get_select_subquery": {"name": "default__get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__get_select_subquery", "macro_sql": "{% macro default__get_select_subquery(sql) %}\n    select {{ adapter.dispatch('get_column_names', 'dbt')() }}\n    from (\n        {{ sql }}\n    ) as model_subq\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_column_names"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0493186, "supported_languages": null}, "macro.dbt.get_rename_table_sql": {"name": "get_rename_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/rename.sql", "original_file_path": "macros/relations/table/rename.sql", "unique_id": "macro.dbt.get_rename_table_sql", "macro_sql": "{% macro get_rename_table_sql(relation, new_name) %}\n    {{- adapter.dispatch('get_rename_table_sql', 'dbt')(relation, new_name) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_rename_table_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0497034, "supported_languages": null}, "macro.dbt.default__get_rename_table_sql": {"name": "default__get_rename_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/rename.sql", "original_file_path": "macros/relations/table/rename.sql", "unique_id": "macro.dbt.default__get_rename_table_sql", "macro_sql": "{% macro default__get_rename_table_sql(relation, new_name) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_rename_table_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0499032, "supported_languages": null}, "macro.dbt.drop_table": {"name": "drop_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/drop.sql", "original_file_path": "macros/relations/table/drop.sql", "unique_id": "macro.dbt.drop_table", "macro_sql": "{% macro drop_table(relation) -%}\n    {{- adapter.dispatch('drop_table', 'dbt')(relation) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0502086, "supported_languages": null}, "macro.dbt.default__drop_table": {"name": "default__drop_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/drop.sql", "original_file_path": "macros/relations/table/drop.sql", "unique_id": "macro.dbt.default__drop_table", "macro_sql": "{% macro default__drop_table(relation) -%}\n    drop table if exists {{ relation.render() }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0503814, "supported_languages": null}, "macro.dbt.get_replace_view_sql": {"name": "get_replace_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.get_replace_view_sql", "macro_sql": "{% macro get_replace_view_sql(relation, sql) %}\n    {{- adapter.dispatch('get_replace_view_sql', 'dbt')(relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_replace_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0510218, "supported_languages": null}, "macro.dbt.default__get_replace_view_sql": {"name": "default__get_replace_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.default__get_replace_view_sql", "macro_sql": "{% macro default__get_replace_view_sql(relation, sql) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_replace_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0512183, "supported_languages": null}, "macro.dbt.create_or_replace_view": {"name": "create_or_replace_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {% set should_revoke = should_revoke(exists_as_view, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0525775, "supported_languages": null}, "macro.dbt.handle_existing_table": {"name": "handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0528505, "supported_languages": null}, "macro.dbt.default__handle_existing_table": {"name": "default__handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation.render() ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0531523, "supported_languages": null}, "macro.dbt.get_create_view_as_sql": {"name": "get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.get_create_view_as_sql", "macro_sql": "{% macro get_create_view_as_sql(relation, sql) -%}\n  {{ adapter.dispatch('get_create_view_as_sql', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0536284, "supported_languages": null}, "macro.dbt.default__get_create_view_as_sql": {"name": "default__get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.default__get_create_view_as_sql", "macro_sql": "{% macro default__get_create_view_as_sql(relation, sql) -%}\n  {{ return(create_view_as(relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.053833, "supported_languages": null}, "macro.dbt.create_view_as": {"name": "create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0540552, "supported_languages": null}, "macro.dbt.default__create_view_as": {"name": "default__create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation.render() }}\n    {% set contract_config = config.get('contract') %}\n    {% if contract_config.enforced %}\n      {{ get_assert_columns_equivalent(sql) }}\n    {%- endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0546103, "supported_languages": null}, "macro.dbt.get_rename_view_sql": {"name": "get_rename_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/rename.sql", "original_file_path": "macros/relations/view/rename.sql", "unique_id": "macro.dbt.get_rename_view_sql", "macro_sql": "{% macro get_rename_view_sql(relation, new_name) %}\n    {{- adapter.dispatch('get_rename_view_sql', 'dbt')(relation, new_name) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_rename_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0549505, "supported_languages": null}, "macro.dbt.default__get_rename_view_sql": {"name": "default__get_rename_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/rename.sql", "original_file_path": "macros/relations/view/rename.sql", "unique_id": "macro.dbt.default__get_rename_view_sql", "macro_sql": "{% macro default__get_rename_view_sql(relation, new_name) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_rename_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0551462, "supported_languages": null}, "macro.dbt.drop_view": {"name": "drop_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/drop.sql", "original_file_path": "macros/relations/view/drop.sql", "unique_id": "macro.dbt.drop_view", "macro_sql": "{% macro drop_view(relation) -%}\n    {{- adapter.dispatch('drop_view', 'dbt')(relation) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0554838, "supported_languages": null}, "macro.dbt.default__drop_view": {"name": "default__drop_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/drop.sql", "original_file_path": "macros/relations/view/drop.sql", "unique_id": "macro.dbt.default__drop_view", "macro_sql": "{% macro default__drop_view(relation) -%}\n    drop view if exists {{ relation.render() }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0556567, "supported_languages": null}, "macro.dbt.get_table_columns_and_constraints": {"name": "get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.get_table_columns_and_constraints", "macro_sql": "{%- macro get_table_columns_and_constraints() -%}\n  {{ adapter.dispatch('get_table_columns_and_constraints', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0565357, "supported_languages": null}, "macro.dbt.default__get_table_columns_and_constraints": {"name": "default__get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_table_columns_and_constraints", "macro_sql": "{% macro default__get_table_columns_and_constraints() -%}\n  {{ return(table_columns_and_constraints()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0568478, "supported_languages": null}, "macro.dbt.table_columns_and_constraints": {"name": "table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.table_columns_and_constraints", "macro_sql": "{% macro table_columns_and_constraints() %}\n  {# loop through user_provided_columns to create DDL with data types and constraints #}\n    {%- set raw_column_constraints = adapter.render_raw_columns_constraints(raw_columns=model['columns']) -%}\n    {%- set raw_model_constraints = adapter.render_raw_model_constraints(raw_constraints=model['constraints']) -%}\n    (\n    {% for c in raw_column_constraints -%}\n      {{ c }}{{ \",\" if not loop.last or raw_model_constraints }}\n    {% endfor %}\n    {% for c in raw_model_constraints -%}\n        {{ c }}{{ \",\" if not loop.last }}\n    {% endfor -%}\n    )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0575523, "supported_languages": null}, "macro.dbt.get_assert_columns_equivalent": {"name": "get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.get_assert_columns_equivalent", "macro_sql": "\n\n{%- macro get_assert_columns_equivalent(sql) -%}\n  {{ adapter.dispatch('get_assert_columns_equivalent', 'dbt')(sql) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0577772, "supported_languages": null}, "macro.dbt.default__get_assert_columns_equivalent": {"name": "default__get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_assert_columns_equivalent", "macro_sql": "{% macro default__get_assert_columns_equivalent(sql) -%}\n  {{ return(assert_columns_equivalent(sql)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.057959, "supported_languages": null}, "macro.dbt.assert_columns_equivalent": {"name": "assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.assert_columns_equivalent", "macro_sql": "{% macro assert_columns_equivalent(sql) %}\n\n  {#-- First ensure the user has defined 'columns' in yaml specification --#}\n  {%- set user_defined_columns = model['columns'] -%}\n  {%- if not user_defined_columns -%}\n      {{ exceptions.raise_contract_error([], []) }}\n  {%- endif -%}\n\n  {#-- Obtain the column schema provided by sql file. #}\n  {%- set sql_file_provided_columns = get_column_schema_from_query(sql, config.get('sql_header', none)) -%}\n  {#--Obtain the column schema provided by the schema file by generating an 'empty schema' query from the model's columns. #}\n  {%- set schema_file_provided_columns = get_column_schema_from_query(get_empty_schema_sql(user_defined_columns)) -%}\n\n  {#-- create dictionaries with name and formatted data type and strings for exception #}\n  {%- set sql_columns = format_columns(sql_file_provided_columns) -%}\n  {%- set yaml_columns = format_columns(schema_file_provided_columns)  -%}\n\n  {%- if sql_columns|length != yaml_columns|length -%}\n    {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n  {%- endif -%}\n\n  {%- for sql_col in sql_columns -%}\n    {%- set yaml_col = [] -%}\n    {%- for this_col in yaml_columns -%}\n      {%- if this_col['name'] == sql_col['name'] -%}\n        {%- do yaml_col.append(this_col) -%}\n        {%- break -%}\n      {%- endif -%}\n    {%- endfor -%}\n    {%- if not yaml_col -%}\n      {#-- Column with name not found in yaml #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n    {%- if sql_col['formatted'] != yaml_col[0]['formatted'] -%}\n      {#-- Column data types don't match #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n  {%- endfor -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_column_schema_from_query", "macro.dbt.get_empty_schema_sql", "macro.dbt.format_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0595639, "supported_languages": null}, "macro.dbt.format_columns": {"name": "format_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.format_columns", "macro_sql": "{% macro format_columns(columns) %}\n  {% set formatted_columns = [] %}\n  {% for column in columns %}\n    {%- set formatted_column = adapter.dispatch('format_column', 'dbt')(column) -%}\n    {%- do formatted_columns.append(formatted_column) -%}\n  {% endfor %}\n  {{ return(formatted_columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__format_column"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0600655, "supported_languages": null}, "macro.dbt.default__format_column": {"name": "default__format_column", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__format_column", "macro_sql": "{% macro default__format_column(column) -%}\n  {% set data_type = column.dtype %}\n  {% set formatted = column.column.lower() ~ \" \" ~ data_type %}\n  {{ return({'name': column.name, 'data_type': data_type, 'formatted': formatted}) }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.060514, "supported_languages": null}, "macro.dbt.get_alter_materialized_view_as_sql": {"name": "get_alter_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.get_alter_materialized_view_as_sql", "macro_sql": "{% macro get_alter_materialized_view_as_sql(\n    relation,\n    configuration_changes,\n    sql,\n    existing_relation,\n    backup_relation,\n    intermediate_relation\n) %}\n    {{- log('Applying ALTER to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_alter_materialized_view_as_sql', 'dbt')(\n        relation,\n        configuration_changes,\n        sql,\n        existing_relation,\n        backup_relation,\n        intermediate_relation\n    ) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_alter_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0612037, "supported_languages": null}, "macro.dbt.default__get_alter_materialized_view_as_sql": {"name": "default__get_alter_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.default__get_alter_materialized_view_as_sql", "macro_sql": "{% macro default__get_alter_materialized_view_as_sql(\n    relation,\n    configuration_changes,\n    sql,\n    existing_relation,\n    backup_relation,\n    intermediate_relation\n) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0614638, "supported_languages": null}, "macro.dbt.get_materialized_view_configuration_changes": {"name": "get_materialized_view_configuration_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.get_materialized_view_configuration_changes", "macro_sql": "{% macro get_materialized_view_configuration_changes(existing_relation, new_config) %}\n    /* {#\n    It's recommended that configuration changes be formatted as follows:\n    {\"<change_category>\": [{\"action\": \"<name>\", \"context\": ...}]}\n\n    For example:\n    {\n        \"indexes\": [\n            {\"action\": \"drop\", \"context\": \"index_abc\"},\n            {\"action\": \"create\", \"context\": {\"columns\": [\"column_1\", \"column_2\"], \"type\": \"hash\", \"unique\": True}},\n        ],\n    }\n\n    Either way, `get_materialized_view_configuration_changes` needs to align with `get_alter_materialized_view_as_sql`.\n    #} */\n    {{- log('Determining configuration changes on: ' ~ existing_relation) -}}\n    {%- do return(adapter.dispatch('get_materialized_view_configuration_changes', 'dbt')(existing_relation, new_config)) -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_materialized_view_configuration_changes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0618167, "supported_languages": null}, "macro.dbt.default__get_materialized_view_configuration_changes": {"name": "default__get_materialized_view_configuration_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.default__get_materialized_view_configuration_changes", "macro_sql": "{% macro default__get_materialized_view_configuration_changes(existing_relation, new_config) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0620193, "supported_languages": null}, "macro.dbt.get_replace_materialized_view_sql": {"name": "get_replace_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/replace.sql", "original_file_path": "macros/relations/materialized_view/replace.sql", "unique_id": "macro.dbt.get_replace_materialized_view_sql", "macro_sql": "{% macro get_replace_materialized_view_sql(relation, sql) %}\n    {{- adapter.dispatch('get_replace_materialized_view_sql', 'dbt')(relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_replace_materialized_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0623724, "supported_languages": null}, "macro.dbt.default__get_replace_materialized_view_sql": {"name": "default__get_replace_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/replace.sql", "original_file_path": "macros/relations/materialized_view/replace.sql", "unique_id": "macro.dbt.default__get_replace_materialized_view_sql", "macro_sql": "{% macro default__get_replace_materialized_view_sql(relation, sql) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_replace_materialized_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0625694, "supported_languages": null}, "macro.dbt.get_create_materialized_view_as_sql": {"name": "get_create_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/create.sql", "original_file_path": "macros/relations/materialized_view/create.sql", "unique_id": "macro.dbt.get_create_materialized_view_as_sql", "macro_sql": "{% macro get_create_materialized_view_as_sql(relation, sql) -%}\n    {{- adapter.dispatch('get_create_materialized_view_as_sql', 'dbt')(relation, sql) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0629036, "supported_languages": null}, "macro.dbt.default__get_create_materialized_view_as_sql": {"name": "default__get_create_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/create.sql", "original_file_path": "macros/relations/materialized_view/create.sql", "unique_id": "macro.dbt.default__get_create_materialized_view_as_sql", "macro_sql": "{% macro default__get_create_materialized_view_as_sql(relation, sql) -%}\n    {{ exceptions.raise_compiler_error(\n        \"`get_create_materialized_view_as_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0630913, "supported_languages": null}, "macro.dbt.get_rename_materialized_view_sql": {"name": "get_rename_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/rename.sql", "original_file_path": "macros/relations/materialized_view/rename.sql", "unique_id": "macro.dbt.get_rename_materialized_view_sql", "macro_sql": "{% macro get_rename_materialized_view_sql(relation, new_name) %}\n    {{- adapter.dispatch('get_rename_materialized_view_sql', 'dbt')(relation, new_name) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_rename_materialized_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0634322, "supported_languages": null}, "macro.dbt.default__get_rename_materialized_view_sql": {"name": "default__get_rename_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/rename.sql", "original_file_path": "macros/relations/materialized_view/rename.sql", "unique_id": "macro.dbt.default__get_rename_materialized_view_sql", "macro_sql": "{% macro default__get_rename_materialized_view_sql(relation, new_name) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_rename_materialized_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0636208, "supported_languages": null}, "macro.dbt.drop_materialized_view": {"name": "drop_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/drop.sql", "original_file_path": "macros/relations/materialized_view/drop.sql", "unique_id": "macro.dbt.drop_materialized_view", "macro_sql": "{% macro drop_materialized_view(relation) -%}\n    {{- adapter.dispatch('drop_materialized_view', 'dbt')(relation) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0639334, "supported_languages": null}, "macro.dbt.default__drop_materialized_view": {"name": "default__drop_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/drop.sql", "original_file_path": "macros/relations/materialized_view/drop.sql", "unique_id": "macro.dbt.default__drop_materialized_view", "macro_sql": "{% macro default__drop_materialized_view(relation) -%}\n    drop materialized view if exists {{ relation.render() }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.064102, "supported_languages": null}, "macro.dbt.refresh_materialized_view": {"name": "refresh_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/refresh.sql", "original_file_path": "macros/relations/materialized_view/refresh.sql", "unique_id": "macro.dbt.refresh_materialized_view", "macro_sql": "{% macro refresh_materialized_view(relation) %}\n    {{- log('Applying REFRESH to: ' ~ relation) -}}\n    {{- adapter.dispatch('refresh_materialized_view', 'dbt')(relation) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__refresh_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0644734, "supported_languages": null}, "macro.dbt.default__refresh_materialized_view": {"name": "default__refresh_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/refresh.sql", "original_file_path": "macros/relations/materialized_view/refresh.sql", "unique_id": "macro.dbt.default__refresh_materialized_view", "macro_sql": "{% macro default__refresh_materialized_view(relation) %}\n    {{ exceptions.raise_compiler_error(\"`refresh_materialized_view` has not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0646474, "supported_languages": null}, "macro.dbt.test_unique": {"name": "test_unique", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0652, "supported_languages": null}, "macro.dbt.test_not_null": {"name": "test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0655377, "supported_languages": null}, "macro.dbt.test_accepted_values": {"name": "test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0659194, "supported_languages": null}, "macro.dbt.test_relationships": {"name": "test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.066277, "supported_languages": null}, "macro.zdp_dbt_utils.on_run_end": {"name": "on_run_end", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/on_run_end.sql", "original_file_path": "macros/on_run_end.sql", "unique_id": "macro.zdp_dbt_utils.on_run_end", "macro_sql": "{% macro on_run_end(results, invocation_id, cerebro_team=None, slack_channel=None) %}\n  \n    {{ zdp_dbt_utils.copy_failed_records(results, invocation_id, cerebro_team, slack_channel ) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.copy_failed_records"]}, "description": "Macros to run on on-run-end hook\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/on_run_end.yml", "arguments": [{"name": "results", "type": "List", "description": "Results object which contains the run results"}, {"name": "invocation_id", "type": "String", "description": "Invocation id for the dbt run."}, {"name": "cerebro_team", "type": "String", "description": "Cerebro team."}, {"name": "slack_channel", "type": "String", "description": "Slack channel."}], "created_at": 1746557619.817639, "supported_languages": null}, "macro.zdp_dbt_utils.get_cleansed_scd2_view": {"name": "get_cleansed_scd2_view", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/get_cleansed_scd2_view/get_cleansed_scd2_view.sql", "original_file_path": "macros/get_cleansed_scd2_view/get_cleansed_scd2_view.sql", "unique_id": "macro.zdp_dbt_utils.get_cleansed_scd2_view", "macro_sql": "{% macro get_cleansed_scd2_view(source, is_from_fivetran=true) -%}\nselect\n        {{ dbt_utils.star(\n            from=source,\n            except=[\n                \"_fivetran_synced\",\n                \"dbt_scd_id\",\n                \"dbt_updated_at\",\n                \"dbt_valid_from\",\n                \"dbt_valid_to\"],\n            quote_identifiers=True) }},\n        {% if is_from_fivetran %}_fivetran_synced,{% endif %}\n        dbt_scd_id,\n        dbt_updated_at,\n        dbt_valid_from as valid_from_timestamp,\n        {{ zdp_dbt_utils.get_scd2_dbt_valid_to() }} as valid_to_timestamp\nfrom {{ source }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.star", "macro.zdp_dbt_utils.get_scd2_dbt_valid_to"]}, "description": "Generate a view enriched with transformed metadata fields from our source SCD2 process", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/get_cleansed_scd2_view/get_cleansed_scd2_view.yml", "arguments": [{"name": "source", "type": "string", "description": "The output of the source() built-in"}, {"name": "is_from_fivetran", "type": "boolean", "description": "Optional parameter to include the _fivetran_synced column. Defaults to true."}], "created_at": 1746557619.8195534, "supported_languages": null}, "macro.zdp_dbt_utils.get_current_region": {"name": "get_current_region", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/data_quality/get_region.sql", "original_file_path": "macros/data_quality/get_region.sql", "unique_id": "macro.zdp_dbt_utils.get_current_region", "macro_sql": "{% macro get_current_region() %}\n    {% set result = run_query(\"SELECT CURRENT_REGION()\") %}\n    {% if execute %}\n        {% set region = result.columns[0].values()[0] %}\n    {% else %}\n        {% set region = 'Unknown' %}\n    {% endif %}\n    \n    {{ return(region) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "Returns the current region as defined by Snowflake's CURRENT_REGION() function. If during compilation or if the query cannot be run, it returns 'Unknown'.", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/data_quality/get_region.yml", "arguments": [], "created_at": 1746557619.8242214, "supported_languages": null}, "macro.zdp_dbt_utils.add_test_metadata_for_column_level_tests": {"name": "add_test_metadata_for_column_level_tests", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/data_quality/add_test_metadata_for_column_level_tests.sql", "original_file_path": "macros/data_quality/add_test_metadata_for_column_level_tests.sql", "unique_id": "macro.zdp_dbt_utils.add_test_metadata_for_column_level_tests", "macro_sql": "{% macro add_test_metadata_for_column_level_tests(model, column_name, zdp_meta_id_column=None) -%}\n    {%- if zdp_meta_id_column %}\n    {{ zdp_meta_id_column }} as zdp_meta_id,\n    {%- else -%}\n    zdp_meta_id,\n    {%- endif -%}\n    '{{ column_name }}' as column_name,\n    '{{ model.name }}' as model_name,\n    '{{ invocation_id }}' as test_batch_id\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "This macro adds metadata columns for column-level test results. The 'zdp_meta_id_column' and 'zdp_meta_batch_id_column' are optionally provided and will be aliased appropriately. If not provided, the default columns 'zdp_meta_id' and 'zdp_meta_batch_id' are used. It also includes 'test_batch_id' which is set to the current run's invocation ID.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/data_quality/add_test_metadata_for_column_level_tests.yml", "arguments": [{"name": "model", "type": "Relation", "description": "The dbt model being tested, passed as a Relation object."}, {"name": "column_name", "type": "String", "description": "name of the column for which the test was run"}, {"name": "zdp_meta_id_column", "type": "String", "description": "An optional column name to overwrite the default `zdp_meta_id` column."}], "created_at": 1746557619.8217003, "supported_languages": null}, "macro.zdp_dbt_utils.add_metadata_columns_for_models": {"name": "add_metadata_columns_for_models", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/data_quality/add_metadata_columns_for_models.sql", "original_file_path": "macros/data_quality/add_metadata_columns_for_models.sql", "unique_id": "macro.zdp_dbt_utils.add_metadata_columns_for_models", "macro_sql": "{% macro add_metadata_columns_for_models(zdp_meta_id_column=None) -%}\n    {%- if zdp_meta_id_column %}\n    {{ zdp_meta_id_column }} as zdp_meta_id\n    {%- else %}\n    uuid_string() as zdp_meta_id\n    {%- endif %}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "This macro adds 'zdp_meta_id' metadata column to models. If 'zdp_meta_id_column' is provided, its value will be aliased as 'zdp_meta_id'. Otherwise, a UUID is generated for 'zdp_meta_id'. \n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/data_quality/add_metadata_columns_for_models.yml", "arguments": [{"name": "zdp_meta_id_column", "type": "String", "description": "The column name to use for the zdp_meta_id. If not provided, a UUID will be generated."}], "created_at": 1746557619.8237982, "supported_languages": null}, "macro.zdp_dbt_utils.relationships": {"name": "relationships", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/data_quality/test_relationships.sql", "original_file_path": "macros/data_quality/test_relationships.sql", "unique_id": "macro.zdp_dbt_utils.relationships", "macro_sql": "{% macro relationships(model, column_name, to, field) %}\n\n{% set from_column_names = adapter.get_columns_in_relation(model) | map(attribute='name') | map('upper') | list %}\n{% set to_column_names = adapter.get_columns_in_relation(to) | map(attribute='name') | map('upper') | list %}\n{% set zdp_meta_id_column_name = 'ZDP_META_ID' %}\n\n{% if zdp_meta_id_column_name in from_column_names and zdp_meta_id_column_name in to_column_names %}\n\n    with child as (\n        select {{column_name}} as from_field, zdp_meta_id as from_zdp_meta_id\n        from {{model}}\n        where {{column_name}} is not null\n    ),\n    parent as (\n        select {{field}} as to_field, zdp_meta_id as to_zdp_meta_id\n        from {{to}}\n    )\n    select \n    {{ zdp_dbt_utils.add_test_metadata_for_column_level_tests(\n            model=model,\n            column_name=column_name,\n            zdp_meta_id_column='from_zdp_meta_id'\n        ) \n    }},\n    from_field AS From_Field\n    from child\n    left join parent\n        on child.from_field = parent.to_field\n    where parent.to_field is null\n\n{% else %}\n\n    with child as (\n        select {{ column_name }} as from_field\n        from {{ model }}\n        where {{ column_name }} is not null\n    ),\n\n    parent as (\n        select {{ field }} as to_field\n        from {{ to }}\n    )\n\n    select\n        from_field\n\n    from child\n    left join parent\n        on child.from_field = parent.to_field\n\n    where parent.to_field is null\n\n{% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.add_test_metadata_for_column_level_tests"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0701249, "supported_languages": null}, "macro.zdp_dbt_utils.get_current_role": {"name": "get_current_role", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/data_quality/get_role.sql", "original_file_path": "macros/data_quality/get_role.sql", "unique_id": "macro.zdp_dbt_utils.get_current_role", "macro_sql": "{% macro get_current_role() %}\n    {% set query = \"SELECT CURRENT_ROLE()\" %}\n    {% set result = run_query(query) %}\n\n    {% if execute %}\n        {% if result and result.columns is iterable and result.columns[0].values() %}\n            {% set role = result.columns[0].values()[0] %}\n        {% else %}\n            {% set role = 'Unknown' %}\n        {% endif %}\n    {% else %}\n        {% set role = 'Unknown' %}\n    {% endif %}\n\n    {{ return(role) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "Returns the current role or if the query cannot be run, it returns 'Unknown'.", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/data_quality/get_role.yml", "arguments": [], "created_at": 1746557619.8200643, "supported_languages": null}, "macro.zdp_dbt_utils.accepted_values": {"name": "accepted_values", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/data_quality/test_accepted_values.sql", "original_file_path": "macros/data_quality/test_accepted_values.sql", "unique_id": "macro.zdp_dbt_utils.accepted_values", "macro_sql": "{% macro accepted_values(model, column_name, values) %}\n\n{% set column_names = adapter.get_columns_in_relation(model) | map(attribute='name') | map('lower') | list %}\n{% set zdp_meta_id_column_name = 'zdp_meta_id' | lower %}\n\n{% if zdp_meta_id_column_name in column_names %}\n\n    select\n         {{ zdp_dbt_utils.add_test_metadata_for_column_level_tests(\n            model,\n            column_name\n          ) \n        }},\n        {{ column_name }} as value_field\n        from {{ model }}\n    where value_field not in (\n        {% for value in values %}\n            {{ \"'\" ~ value ~ \"'\" }}{% if not loop.last %}, {% endif %}\n        {% endfor %}\n    )\n\n{% else %}\n\n    with all_values as (\n\n        select\n            {{ column_name }} as value_field,\n            count(*) as n_records\n\n        from {{ model }}\n        group by {{ column_name }}\n\n    )\n\n    select *\n    from all_values\n    where value_field not in (\n        {% for value in values %}\n            {{ \"'\" ~ value ~ \"'\" }}{% if not loop.last %}, {% endif %}\n        {% endfor %}\n    )\n\n{% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.add_test_metadata_for_column_level_tests"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0724888, "supported_languages": null}, "macro.zdp_dbt_utils.copy_failed_records": {"name": "copy_failed_records", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/data_quality/copy_failed_records.sql", "original_file_path": "macros/data_quality/copy_failed_records.sql", "unique_id": "macro.zdp_dbt_utils.copy_failed_records", "macro_sql": "{% macro copy_failed_records(results, invocation_id, cerebro_team=None, slack_channel=None) %}\n    {% set valid_targets = ['prod', 'preprod'] %}\n\n    {% set account_name = zdp_dbt_utils.get_current_account_name() %}\n\n    {{ log(\"Account Name: \" ~ account_name, info=True) }}\n    {{ log(\"Target Name: \" ~ target.name, info=True) }}\n    {{ log(\"Role Name: \" ~ zdp_dbt_utils.get_current_role(), info=True) }}\n    {{ log(\"Dbt Project Name: \" ~ project_name, info=True) }}\n\n    {% if ((target.name in valid_targets) and (invocation_args_dict.which == 'test' or invocation_args_dict.which == 'build')) %}\n        {% set success_compiled_code_records = [] %}\n        {% set failed_compiled_code_records = [] %}\n\n        {% set target_database = \"ZDP\" %}\n        {% set target_schema = \"QUALITY\" %}\n        {% set region = zdp_dbt_utils.get_current_region() %}\n\n        {% for result in results %}\n            {% if result.node.unique_id.startswith('test.') %}\n                {% set meta_data = result.node.meta %}\n                {% if meta_data %}\n                    {% set test_dimension = meta_data.get('dimension', 'Validity') %}\n                    {% set slack_channel_name = meta_data.get('slack_channel', slack_channel) %}\n                    {% set pager_duty_team_name = meta_data.get('pager_duty_team_name', '') %}\n                    {% set is_model_level = meta_data.get('is_model_level_test', 'false') %}\n                    {% set test_description = meta_data.get('description', result.node.relation_name | default('No Description Provided')) %}\n                {% else %}\n                    {% set test_dimension = 'Validity' %}\n                    {% set slack_channel_name = slack_channel %}\n                    {% set pager_duty_team_name = '' %}\n                    {% set is_model_level = 'false' %}\n                    {% set test_description = result.node.relation_name | default('No Description Provided') %}\n                {% endif %}\n            {% endif %}\n\n            {% if result.node.unique_id.startswith('test.') and result.status == 'pass' and result.node.relation_name != None %}\n                {{ log(\"\", info=True) }}\n                {{ log(\"Storing success records for: \" ~ result.node.unique_id, info=True) }}\n\n                {% set model_name = 'unknown' %}\n\n                {% if result.node.refs and result.node.refs[0] %}\n                    {% set model_name = result.node.refs[0].name %}\n                {% endif %}\n\n                {% set relation_name = result.node.relation_name | lower %}\n                {% set is_model_level_test = 'false' %}\n                {% if is_model_level == 'true' or (relation_name and relation_name.endswith(model_name + '_')) %}\n                    {% set is_model_level_test = 'true' %}\n                {% endif %}\n\n                {% if result.node.config %}\n                    {% set store_failures_val = result.node.config.get('store_failures') %}\n                {% else %}\n                    {% set store_failures_val = False %}\n                {% endif %}\n\n                {{ log(\"Store_failures_val: \" ~ store_failures_val, info=True) }}\n\n                {% if store_failures_val %}\n                    {% set success_record = {\n                        'relation_name': result.node.relation_name | lower,\n                        'model_name': model_name,\n                        'database_name': result.node.database,\n                        'dimension_name': test_dimension,\n                        'is_model_level_test': is_model_level_test,\n                        'test_description': test_description,\n                        'slack_channel_name': slack_channel_name,\n                        'pager_duty_team_name': pager_duty_team_name,\n                        'test_name': account_name ~ '.' ~ project_name ~ '.' ~ split_part(relation_name, '.', 3),\n                        'compiled_code': result.node.compiled_code,\n                        'compiled_code_for_column': result.node.compiled_code | replace(\"'\", \"\")\n                    } %}\n\n                    {% do success_compiled_code_records.append(success_record) %}\n\n                    {% set insert_success_query %}\n                        INSERT INTO \"{{ target_database }}\".\"{{ target_schema }}\".Success_Events\n                        (zdp_meta_batch_id, project_name, database_name, model_name, column_name, is_model_level_test, test_name, target_name, region, account_name, datasource_type)\n                        SELECT\n                            '{{ invocation_id }}' AS zdp_meta_batch_id,\n                            '{{ project_name }}' AS project_name,\n                            '{{ success_record.database_name }}' AS database_name,\n                            '{{ success_record.model_name }}' AS model_name,\n                            CASE\n                                WHEN REGEXP_SUBSTR('{{ success_record.compiled_code_for_column }}', '(\\\\w+)\\\\s+as\\\\s+column_name', 1, 1, 'i', 1) IN ('null', NULL) THEN NULL\n                                ELSE REGEXP_SUBSTR('{{ success_record.compiled_code_for_column }}', '(\\\\w+)\\\\s+as\\\\s+column_name', 1, 1, 'i', 1)\n                            END AS column_name,\n                            '{{ success_record.is_model_level_test }}' AS is_model_level_test,\n                            '{{ account_name }}' || '.' || '{{ project_name }}' || '.' || SPLIT_PART('{{ success_record.relation_name }}', '.', 3) as test_name,\n                            '{{ target.name }}' AS target_name,\n                            '{{ region }}' AS region,\n                            '{{ account_name }}' AS account_name,\n                            'Snowflake' AS project_name\n                    {% endset %}\n\n                    {%- do run_query(insert_success_query) -%}\n\n                {% endif %}\n            {% endif %}\n            {% if result.node.unique_id.startswith('test.') and result.status == 'fail' and result.node.relation_name != None %}\n                {{ log(\"\", info=True) }}\n                {{ log(\"Storing failed records for: \" ~ result.node.unique_id, info=True) }}\n\n                {% set relation_name = result.node.relation_name | lower %}\n                {% set relational_database = relation_name.split('.')[0] | upper %}\n                {% set relational_schema = relation_name.split('.')[1] | lower %}\n                {% set relational_table = relation_name.split('.')[2] | lower %}\n\n                {{ log(\"relation_name \" ~ relation_name, info=True) }}\n                {{ log(\"relational_database \" ~ relational_database, info=True) }}\n\n                {% set get_model_name_query %}\n                    SELECT DISTINCT model_name\n                    FROM {{ relation_name }}\n                    WHERE test_batch_id = '{{ invocation_id }}' AND zdp_meta_id IS NOT NULL\n                {% endset %}\n\n                {% set model_name_result = run_query(get_model_name_query) %}\n                {% set model_name = model_name_result.columns[0][0] if model_name_result and model_name_result.columns[0] else 'Unknown' %}\n\n                {% set has_column_query %}\n                    SELECT\n                        MAX(CASE WHEN COLUMN_NAME ILIKE 'ZDP_META_ID' THEN 1 ELSE 0 END) AS has_zdp_meta_id,\n                        MAX(CASE WHEN COLUMN_NAME ILIKE 'MODEL_NAME' THEN 1 ELSE 0 END) AS has_model_name,\n                        MAX(CASE WHEN COLUMN_NAME ILIKE 'COLUMN_NAME' THEN 1 ELSE 0 END) AS has_column_name\n                    FROM \"{{ relational_database }}\".INFORMATION_SCHEMA.COLUMNS\n                    WHERE\n                        TABLE_CATALOG ILIKE '{{ relational_database }}'\n                        AND TABLE_SCHEMA ILIKE '{{ relational_schema }}'\n                        AND TABLE_NAME ILIKE '{{ relational_table }}'\n                {% endset %}\n\n                {% set has_column_query_result = run_query(has_column_query) %}\n                {# Check that all columns are present #}\n                {% set columns_exist =\n                    has_column_query_result and\n                    has_column_query_result.columns[0][0] > 0 and\n                    has_column_query_result.columns[1][0] > 0 and\n                    has_column_query_result.columns[2][0] > 0\n                %}\n\n                {% if columns_exist %}\n                    {% set failure_record = {'model_name': model_name, 'relation_name': relation_name, 'compiled_code': result.node.compiled_code, 'dimension_name': test_dimension, 'test_description': test_description, 'slack_channel_name': slack_channel_name, 'pager_duty_team_name': pager_duty_team_name} %}\n                    {% do failed_compiled_code_records.append(failure_record) %}\n\n                    {% if target.name == 'ci' %}\n                        {% set limit_clause = 'LIMIT 1' %}\n                    {% else %}\n                        {% set limit_clause = '' %}\n                    {% endif %}\n\n                    {% set copy_query %}\n                        INSERT INTO \"{{ target_database }}\".\"{{ target_schema }}\".Error_Events\n                        (zdp_meta_id, zdp_meta_batch_id, project_name, database_name, model_name, column_name, test_name, is_model_level_test, additional_info_object, target_name, region, account_name, datasource_type)\n                        SELECT\n                            zdp_meta_id,\n                            '{{ invocation_id }}' AS zdp_meta_batch_id,\n                            '{{ project_name }}' AS project_name,\n                            SPLIT_PART('{{ relation_name }}', '.', 1) as database_name,\n                            model_name,\n                            column_name,\n                            '{{ account_name }}' || '.' || '{{ project_name }}' || '.' || SPLIT_PART('{{ relation_name }}', '.', 3) as test_name,\n                            {%- if is_model_level == 'true' -%}\n                                'true'\n                            {%- else -%}\n                                IFF(RIGHT('{{ relation_name }}', LENGTH(model_name) + 1) = model_name || '_', 'true', 'false')\n                            {% endif %} AS is_model_level_test,\n                            OBJECT_DELETE(OBJECT_CONSTRUCT(*), 'ZDP_META_ID', 'MODEL_NAME', 'COLUMN_NAME', 'TEST_BATCH_ID') AS additional_info_object,\n                            '{{ target.name }}' as target_name,\n                            '{{ region }}' as region,\n                            '{{ account_name }}' as account_name,\n                            'Snowflake' as datasourcetype\n                        FROM {{ relation_name }}\n                        WHERE test_batch_id = '{{ invocation_id }}' AND zdp_meta_id IS NOT NULL\n                        {{ limit_clause }}\n                    {% endset %}\n\n                    {%- do run_query(copy_query) -%}\n                {% else %}\n                    {{ log(\"Table \" ~ relation_name ~ \" does not have required columns, skipping insert.\", info=True) }}\n                {% endif %}\n            {% endif %}\n        {% endfor %}\n\n        {% for record in failed_compiled_code_records %}\n            {% set upsert_query %}\n                MERGE INTO \"{{ target_database }}\".\"{{ target_schema }}\".Screens AS target\n                USING (\n                    SELECT\n                        '{{ account_name }}' || '.' || '{{project_name}}' || '.' || SPLIT_PART('{{ record.relation_name }}', '.', 3) as test_name,\n                        '{{ project_name }}' AS project_name,\n                        $${{ record.dimension_name }}$$ AS dimension_name,\n                        '{{ region }}' AS region,\n                        '{{ account_name }}' AS account_name,\n                        {% if cerebro_team %}\n                        '{{ cerebro_team }}' as cerebro_team,\n                        {% else %}\n                        null as cerebro_team,\n                        {% endif %}\n                        $${{  record.slack_channel_name }}$$ AS slack_alert,\n                        $${{  record.compiled_code }}$$ AS compiled_code,\n                        $${{  record.test_description }}$$ AS test_description,\n                        CASE\n                            WHEN REGEXP_SUBSTR(compiled_code, 'from\\\\s+(\\\\w+\\\\.\\\\w+\\\\.{{record.model_name}})', 1, 1, 'i', 1) IS NULL THEN NULL\n                            ELSE REGEXP_SUBSTR(compiled_code, 'from\\\\s+(\\\\w+\\\\.\\\\w+\\\\.{{record.model_name}})', 1, 1, 'i', 1)\n                        END AS fully_qualified_model_name,\n                        REGEXP_SUBSTR(fully_qualified_model_name, '^([^.]+)\\\\.', 1, 1, 'i', 1) AS database_name,\n                        REGEXP_SUBSTR(fully_qualified_model_name, '\\\\.([^.]+)\\\\.', 1, 1, 'i', 1) AS schema_name,\n                        REGEXP_SUBSTR(fully_qualified_model_name, '\\\\.([^.]+)$', 1, 1, 'i', 1) AS table_name,\n                        $${{  record.pager_duty_team_name }}$$ AS pager_duty_team_name\n                ) AS source\n                ON target.test_name = source.test_name\n                WHEN MATCHED AND (target.compiled_code != source.compiled_code or target.cerebro_team != source.cerebro_team or target.database_name != source.database_name or target.test_description != source.test_description or target.pager_duty_team_name != source.pager_duty_team_name or target.slack_alert != source.slack_alert) THEN\n                    UPDATE SET\n                    target.compiled_code = source.compiled_code,\n                    target.database_name = source.database_name,\n                    target.schema_name = source.schema_name,\n                    target.table_name = source.table_name,\n                    target.dimension_name = source.dimension_name,\n                    target.region = source.region,\n                    target.account_name = source.account_name,\n                    target.cerebro_team = source.cerebro_team,\n                    target.slack_alert = source.slack_alert,\n                    target.pager_duty_team_name = source.pager_duty_team_name,\n                    target.project_name = source.project_name,\n                    target.test_description = source.test_description\n                WHEN NOT MATCHED THEN\n                    INSERT (test_name, project_name, dimension_name, region, account_name, cerebro_team, slack_alert, compiled_code, test_description, database_name, schema_name, table_name, pager_duty_team_name)\n                    VALUES (source.test_name, source.project_name, source.dimension_name, source.region, source.account_name, source.cerebro_team, source.slack_alert, source.compiled_code, source.test_description, source.database_name, source.schema_name, source.table_name, source.pager_duty_team_name)\n            {% endset %}\n\n            {{ log(\"Upsert query running for failures: \" ~ record.relation_name, info=True) }}\n            {%- do run_query(upsert_query) -%}\n        {% endfor %}\n\n        {% for record in success_compiled_code_records %}\n            {% set upsert_query %}\n                MERGE INTO \"{{ target_database }}\".\"{{ target_schema }}\".Screens AS target\n                USING (\n                    SELECT\n                        '{{ account_name }}' || '.' || '{{project_name}}' || '.' || SPLIT_PART('{{ record.relation_name }}', '.', 3) as test_name,\n                        '{{ project_name }}' AS project_name,\n                        $${{ record.dimension_name }}$$ AS dimension_name,\n                        '{{ region }}' AS region,\n                        '{{ account_name }}' AS account_name,\n                        {% if cerebro_team %}\n                        '{{ cerebro_team }}' as cerebro_team,\n                        {% else %}\n                        null as cerebro_team,\n                        {% endif %}\n                        $${{  record.slack_channel_name }}$$ AS slack_alert,\n                        $${{  record.compiled_code }}$$ AS compiled_code,\n                        $${{  record.test_description }}$$ AS test_description,\n                        $${{  record.pager_duty_team_name }}$$ AS pager_duty_team_name\n                ) AS source\n                ON target.test_name = source.test_name\n                WHEN MATCHED AND (target.compiled_code != source.compiled_code or target.cerebro_team != source.cerebro_team or target.test_description != source.test_description or target.pager_duty_team_name != source.pager_duty_team_name or target.slack_alert != source.slack_alert) THEN\n                    UPDATE SET\n                    target.compiled_code = source.compiled_code,\n                    target.dimension_name = source.dimension_name,\n                    target.region = source.region,\n                    target.account_name = source.account_name,\n                    target.cerebro_team = source.cerebro_team,\n                    target.slack_alert = source.slack_alert,\n                    target.pager_duty_team_name = source.pager_duty_team_name,\n                    target.project_name = source.project_name,\n                    target.test_description = source.test_description\n                WHEN NOT MATCHED THEN\n                    INSERT (test_name, project_name, dimension_name, region, account_name, cerebro_team, slack_alert, compiled_code, test_description, pager_duty_team_name)\n                    VALUES (source.test_name, source.project_name, source.dimension_name, source.region, source.account_name, source.cerebro_team, source.slack_alert, source.compiled_code, source.test_description, source.pager_duty_team_name)\n            {% endset %}\n\n            {{ log(\"Upsert query running for success: \" ~ record.relation_name, info=True) }}\n            {%- do run_query(upsert_query) -%}\n        {% endfor %}\n\n    {% else %}\n        {{ log(\"Skip processing for non-prod or non-preprod targets. Also don't process if it is not build or test command.\", info=True) }}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.get_current_account_name", "macro.zdp_dbt_utils.get_current_role", "macro.zdp_dbt_utils.get_current_region", "macro.dbt.split_part", "macro.dbt.run_query"]}, "description": "Copies records that caused test failures from a failure schema to the 'Error_Events' table. After copying, the failure table is dropped. The  failure schema defaults to 'DBT_TEST__AUDIT', but it can be overridden.  This macro should be invoked with the appropriate 'target_database',  'target_schema', and 'invocation_id' for the dbt run.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/data_quality/copy_failed_records.yml", "arguments": [{"name": "results", "type": "List", "description": "Results object which contains the run results"}, {"name": "invocation_id", "type": "String", "description": "Invocation id for the dbt run."}, {"name": "cerebro_team", "type": "String", "description": "Cerebro team."}, {"name": "slack_channel", "type": "String", "description": "Slack channel."}], "created_at": 1746557619.8227813, "supported_languages": null}, "macro.zdp_dbt_utils.not_null": {"name": "not_null", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/data_quality/test_not_null.sql", "original_file_path": "macros/data_quality/test_not_null.sql", "unique_id": "macro.zdp_dbt_utils.not_null", "macro_sql": "{% macro not_null(model, column_name) %}\n\n{% set column_names = adapter.get_columns_in_relation(model) | map(attribute='name') | map('lower') | list %}\n{% set zdp_meta_id_column_name = 'zdp_meta_id' | lower %}\n\n{% if zdp_meta_id_column_name in column_names %}\n\n        select  {{ zdp_dbt_utils.add_test_metadata_for_column_level_tests(\n                model=model,\n                column_name=column_name\n                ) }}\n        from {{model}}\n        where {{column_name}} is null\n\n{% else %}\n\n        {% set column_list = '*' if should_store_failures() else column_name %}\n\n        select {{ column_list }}\n        from {{ model }}\n        where {{ column_name }} is null\n\n{% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.add_test_metadata_for_column_level_tests", "macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0865402, "supported_languages": null}, "macro.zdp_dbt_utils.add_test_metadata_for_model_level_tests": {"name": "add_test_metadata_for_model_level_tests", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/data_quality/add_test_metadata_for_model_level_tests.sql", "original_file_path": "macros/data_quality/add_test_metadata_for_model_level_tests.sql", "unique_id": "macro.zdp_dbt_utils.add_test_metadata_for_model_level_tests", "macro_sql": "{% macro add_test_metadata_for_model_level_tests(model) -%}\n    uuid_string() as zdp_meta_id,\n    null as column_name,\n    '{{ model.name }}' as model_name,\n    '{{ invocation_id }}' as test_batch_id\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "This macro generates test metadata columns for model-level tests. It generates a UUID for 'zdp_meta_id', and sets 'test_batch_id' to the current run's invocation ID.", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/data_quality/add_test_metadata_for_model_level_tests.yml", "arguments": [{"name": "model", "type": "Relation", "description": "The dbt model object for which the test metadata is to be added."}], "created_at": 1746557619.8232963, "supported_languages": null}, "macro.zdp_dbt_utils.get_current_account_name": {"name": "get_current_account_name", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/data_quality/get_account_name.sql", "original_file_path": "macros/data_quality/get_account_name.sql", "unique_id": "macro.zdp_dbt_utils.get_current_account_name", "macro_sql": "{% macro get_current_account_name() %}\n    {% set result = run_query(\"SELECT CURRENT_ACCOUNT_NAME()\") %}\n    {% if execute %}\n        {% set account = result.columns[0].values()[0] %}\n    {% else %}\n        {% set account = 'Unknown' %}\n    {% endif %}\n    \n    {{ return(account) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "Returns the current account name as defined by Snowflake's CURRENT_ACCOUNT_NAME() function. If during compilation or if the query cannot be run, it returns 'Unknown'.", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/data_quality/get_account_name.yml", "arguments": [], "created_at": 1746557619.8221772, "supported_languages": null}, "macro.zdp_dbt_utils.unique": {"name": "unique", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/data_quality/test_unique.sql", "original_file_path": "macros/data_quality/test_unique.sql", "unique_id": "macro.zdp_dbt_utils.unique", "macro_sql": "{% macro unique(model, column_name) %}\n\n{% set column_names = adapter.get_columns_in_relation(model) | map(attribute='name') | map('lower') | list %}\n{% set zdp_meta_id_column_name = 'zdp_meta_id' | lower %}\n\n{% if zdp_meta_id_column_name in column_names %}\n\n    with validation as (\n        select\n            {{ zdp_dbt_utils.add_test_metadata_for_column_level_tests(\n                model=model,\n                column_name=column_name\n            ) }},\n            {{column_name}} as field,\n            count(*) over (partition by field) as n_records\n            from\n            {{ model }}\n            where {{ column_name }} is not null\n            qualify n_records > 1\n    )\n    select\n        *\n    from validation\n\n{% else %}\n\n    select\n        {{ column_name }} as unique_field,\n        count(*) as n_records\n\n    from {{ model }}\n    where {{ column_name }} is not null\n    group by {{ column_name }}\n    having count(*) > 1\n\n{% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.add_test_metadata_for_column_level_tests"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0883934, "supported_languages": null}, "macro.zdp_dbt_utils.get_business_current_view_from_scd2": {"name": "get_business_current_view_from_scd2", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/get_business_current_view/get_business_current_view_from_scd2.sql", "original_file_path": "macros/get_business_current_view/get_business_current_view_from_scd2.sql", "unique_id": "macro.zdp_dbt_utils.get_business_current_view_from_scd2", "macro_sql": "{%- macro get_business_current_view_from_scd2(source, is_from_fivetran=true) -%}\n\n{{ zdp_dbt_utils.get_cleansed_scd2_view(source, is_from_fivetran) }}\nwhere dbt_valid_to is null\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.zdp_dbt_utils.get_cleansed_scd2_view"]}, "description": "Generates a current active records view from scd2 source", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/get_business_current_view/get_business_current_view_from_scd2.yml", "arguments": [], "created_at": 1746557619.8246934, "supported_languages": null}, "macro.zdp_dbt_utils.execution_date": {"name": "execution_date", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/execution_date/execution_date.sql", "original_file_path": "macros/execution_date/execution_date.sql", "unique_id": "macro.zdp_dbt_utils.execution_date", "macro_sql": "{%- macro execution_date() -%}\n    {%- set execution_date_str = env_var('EXECUTION_DATE', \"none\") -%}\n    {%- set _execution_date = none -%}\n\n    {%- if execution_date_str == \"none\" -%}\n        {%- set _execution_date = modules.datetime.datetime.utcnow() -%}\n    {%- else -%}\n        {%- set _execution_date = modules.datetime.datetime.fromisoformat(execution_date_str) -%}\n    {%- endif -%}\n\n    {% set return_value = '\\'' ~ _execution_date ~ '\\'::timestamp_ntz' %}\n    {{ return(return_value) }}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.0894766, "supported_languages": null}, "macro.zdp_dbt_utils.build_cleansed_scd2_from_formatted_cdc_source": {"name": "build_cleansed_scd2_from_formatted_cdc_source", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/build_cleansed_scd2_from_formatted_cdc_source/build_cleansed_scd2_from_formatted_cdc_source.sql", "original_file_path": "macros/build_cleansed_scd2_from_formatted_cdc_source/build_cleansed_scd2_from_formatted_cdc_source.sql", "unique_id": "macro.zdp_dbt_utils.build_cleansed_scd2_from_formatted_cdc_source", "macro_sql": "{% macro build_cleansed_scd2_from_formatted_cdc_source(\n    source_db, source_table, primary_key_column, transformation_columns_mapping, do_filter_account_move_related_records = true,\n    account_active_shard_table_db_full_path = source('product_accounts', 'instance_account_shard_moves_scd2'),\n    do_filter_consecutive_similar_records = false, similarity_check_columns = [],\n    account_move_filter_logic = 'fdn', processing_ingestion_lag = 0, processing_ingestion_lag_unit = 'hour', do_process_until_dag_execution_time = false,\n    source_table_record_filter = '1=1'\n) %}\n\n    -- Fetching new CDC records (ingested later than the maximum ingestion timestamp from the existing SCD2 table)\n    with cdc_records_to_process as (\n        select\n            *\n        from {{ source(source_db, source_table) }}\n        where {{ source_table_record_filter }}\n\n        {% if do_process_until_dag_execution_time and processing_ingestion_lag != 0 -%}\n            -- In case we want to get all the cleansed table in a consistant state\n            and zdp_meta_l1_ingest_ts <= timestampadd({{ processing_ingestion_lag_unit }}, -{{ processing_ingestion_lag }}, {{ zdp_dbt_utils.execution_date() }})\n        {% elif do_process_until_dag_execution_time and processing_ingestion_lag == 0 -%}\n            -- In case we want to get all the cleansed table in a consistant state\n            and zdp_meta_l1_ingest_ts <= {{ zdp_dbt_utils.execution_date() }}\n        {% elif processing_ingestion_lag != 0 and not do_process_until_dag_execution_time -%}\n            -- As the account mode filtering source is not real time for now, we want to not process the latest ingested data to\n            --   give time for the account move filtering source to be more up to date than the dataset we are filtering data from.\n            and zdp_meta_l1_ingest_ts <= timestampadd({{ processing_ingestion_lag_unit }}, -{{ processing_ingestion_lag }}, current_timestamp)\n        {% endif -%}\n\n        {% if is_incremental() -%}\n            and zdp_meta_l1_ingest_ts > (select coalesce(max({{ 'zdp_meta_l1_ingest_ts' }}), '1970-01-01'::date) as max from {{ this }})\n        {% endif -%}\n    ),\n\n    {# Metadata extraction columns mapping #}\n    {%- set zdp_metadata_extraction_columns_mapping = [\n        ('zdp_meta_eff_ts', 'zdp_meta_eff_timestamp'),\n        ('zdp_meta_op', 'zdp_meta_op'),\n        ('zdp_meta_l1_ingest_ts', 'zdp_meta_l1_ingest_ts'),\n        ('zdp_meta:binlog_database::varchar', 'zdp_meta_binlog_database'),\n        ('zdp_meta:binlog_ts::timestamp_ntz', 'zdp_meta_binlog_timestamp'),\n        (\"SPLIT_PART(zdp_meta:binlog_position, '.', 1)::string\", 'zdp_meta_binlog_filename_prefix'),\n        (\"SPLIT_PART(SPLIT_PART(zdp_meta:binlog_position, '.', 2), ':', 1)::number\", 'zdp_meta_binlog_filename_seq_number'),\n        (\"SPLIT_PART(zdp_meta:binlog_position, ':', 2)::number\", 'zdp_meta_binlog_position'),\n        ('zdp_meta:binlog_xid::number', 'zdp_meta_binlog_transaction_id'),\n        ('zdp_meta:binlog_xoffset::number', 'zdp_meta_binlog_transaction_row_offset'),\n        ('zdp_meta:kafka_timestamp::number', 'zdp_meta_kafka_timestamp_epoch_ms'),\n        ('zdp_meta:kafka_offset::number', 'zdp_meta_kafka_offset'),\n        ('zdp_meta:source_type::varchar', 'zdp_meta_source_type'),\n        (\"'\" ~ source_db ~ '_' ~ source_table ~ \"'\", 'zdp_meta_l1_source'),\n        (\"'cdc'\", 'zdp_meta_l1_source_type')\n    ] -%}\n\n    {%- if source_db == 'sharddb' -%}\n        {%- set zdp_metadata_extraction_columns_mapping = zdp_metadata_extraction_columns_mapping + [('zdp_meta_shard_num', 'zdp_meta_shard_num')] -%}\n    {%- else -%}\n        {%- set zdp_metadata_extraction_columns_mapping = zdp_metadata_extraction_columns_mapping + [('null', 'zdp_meta_shard_num')] -%}\n    {%- endif -%}\n\n    -- Get data from 1 pod only for accounts source table\n    -- for backfilled data, zdp_meta_pod_id is empty\n    filter_data_from_one_pod_for_accounts as (  -- noqa: ST03\n        select *\n        from cdc_records_to_process\n        {% if source_db == 'accountsdb' and source_table == 'accounts' -%}\n        where zdp_meta_pod_id in ('18', '20', '999') or zdp_meta:source_type::varchar = 'ZdpExtractSerializeString'\n        {% endif -%}\n\n    ),\n\n    -- Add some zdp_meta attributes at the root of the record\n    records_to_process_with_extra_attributes as (  -- noqa: ST03\n        select\n            * exclude (zdp_meta_eff_ts, zdp_meta_l1_ingest_ts, zdp_meta_op, zdp_meta_shard_num),\n            {% for expr, alias in zdp_metadata_extraction_columns_mapping -%}\n                {{ expr }} as {{ alias }},\n            {% endfor -%}\n            zdp_meta:binlog_ts::timestamp_ntz as zdp_meta_valid_from\n        from filter_data_from_one_pod_for_accounts\n    ),\n\n    -- Filtering account move-related records if applicable\n    filter_account_move_related_records as (  -- noqa: ST03\n        {% if do_filter_account_move_related_records and account_move_filter_logic == 'zap' -%}\n               {{ zdp_dbt_utils.filter_account_move_related_records('records_to_process_with_extra_attributes', 'zdp_meta_binlog_timestamp', account_active_shard_table_db_full_path) }}\n        {% elif do_filter_account_move_related_records and account_move_filter_logic == 'fdn' -%}\n               {{ zdp_dbt_utils.filter_account_move_related_records_fdn('records_to_process_with_extra_attributes', 'zdp_meta_binlog_timestamp') }}\n        {% else -%}\n            select *\n            from records_to_process_with_extra_attributes\n        {% endif -%}\n    ),\n\n    filter_deletion_records_due_to_archived_tickets as (\n        {% if source_db == 'sharddb' and  source_table == 'tickets' %}\n               {{ zdp_dbt_utils.filter_deletion_records_due_to_ticket_archiving('filter_account_move_related_records', 'id') }}\n        {% elif source_db == 'sharddb' and  source_table in ('ticket_field_entries', \"events\", \"events_combined\") %}\n               {{ zdp_dbt_utils.filter_deletion_records_due_to_ticket_archiving('filter_account_move_related_records', 'ticket_id') }}\n        {% else %}\n            select *\n            from filter_account_move_related_records\n        {% endif %}\n    ),\n\n    -- Data transformation for the current model\n    transform_data as (   -- noqa: ST03\n        select\n            {{ dbt_utils.generate_surrogate_key(['id', 'zdp_meta_valid_from', 'zdp_meta_binlog_filename_prefix', 'zdp_meta_binlog_filename_seq_number', 'zdp_meta_binlog_position', 'zdp_meta_binlog_transaction_id', 'zdp_meta_binlog_transaction_row_offset']) }} as composite_key,\n            zdp_meta_valid_from,\n            null as zdp_meta_valid_to, -- will be fulfilled later\n            null as zdp_meta_is_current, -- will be fulfilled later\n            null as zdp_meta_is_last_state, -- will be fulfilled later\n            {% for expr, alias in transformation_columns_mapping -%}\n                {{ expr }} as {{ alias|lower }},\n            {% endfor -%}\n            {% for _, column in zdp_metadata_extraction_columns_mapping -%}\n                {{ column }}{{ \",\" if not loop.last }}\n            {% endfor -%}\n        from filter_deletion_records_due_to_archived_tickets\n    ),\n\n    {%- set model_columns = ['composite_key', 'zdp_meta_valid_from', 'zdp_meta_valid_to', 'zdp_meta_is_current', 'zdp_meta_is_last_state'] +\n        transformation_columns_mapping | map(attribute=1) | map('lower') | list +\n        zdp_metadata_extraction_columns_mapping | map(attribute=1) | list\n    -%}\n\n    {% if is_incremental() -%}\n\n        {# Determine if current run is done to run unit tests #}\n        {% set temp = [] %}\n        {% for element in invocation_args_dict.select %}\n            {% if invocation_args_dict.which == 'test' and 'test_type:unit' in element %}\n                {% do temp.append(element) %}\n            {% endif %}\n        {% endfor %}\n        {% set is_unit_test = temp|length > 0 %}\n\n        {%- set model_existing_column_list = [] -%}\n        {% if not is_unit_test -%}\n            {%- for column in adapter.get_columns_in_relation(this) -%}\n                {%- do model_existing_column_list.append(column.column|lower) -%}\n            {%- endfor -%}\n        {% endif -%}\n\n        -- Get current active records for updating entities in incremental mode\n        current_records_for_updated_entities as (\n            select\n                {% for column in model_columns -%}\n                    {% if column in model_existing_column_list or is_unit_test -%}\n                        {{ column }},\n                    {% else -%}\n                        null as {{ column }},\n                    {% endif -%}\n                {% endfor -%}\n            from {{ this }}\n            where {{ primary_key_column }} in (\n                select distinct {{ primary_key_column }}\n                from transform_data\n            )\n            and zdp_meta_is_current = true\n        ),\n    {% endif -%}\n\n    -- Unifying transformed new data with current active records\n    -- XXX: To work around Snowflake's \"error 300010\" of `merge into` of a DBT generated temporary view into the target table,\n    --      Snowflake provided a workaround to do below `union all` in this order (`is_already_processed` part first)\n    --      c.f. https://zendesk.slack.com/archives/C05S3ACJL6B/p1729152814699939?thread_ts=1729090877.300879&cid=C05S3ACJL6B\n    unioned_data as (\n        {% if is_incremental() %}\n            select\n                *,\n                true as is_already_processed\n            from current_records_for_updated_entities\n            union all\n        {% endif %}\n        select\n        {% for column in model_columns -%}\n            {{ column }},\n        {% endfor -%}\n            false as is_already_processed\n        from transform_data\n    ),\n\n    {# In support, there is 3 deletions steps: soft deletion: status set the 'deleted' ; hard deletion: record data are scrubbs ; purge: the record is deleted from the table\n     The records are scrubbed before being deleted to allow the downstream consumers of the ticket data to be aware of the detetion (like a tombstone)\n     In ZDP, the records scrubbed on the product side will be seen as deletion #}\n    {% if source_db == 'sharddb' and  source_table == 'tickets' %}\n        {% set scrubbed_record_detection = \" ticket_status_id = 8 or ticket_subject_text = 'SCRUBBED'\" -%}\n    {% elif source_db == 'sharddb' and source_table in (\"events\", \"events_combined\")  %}\n        {% set scrubbed_values = \"('--- \\\\n- X\\\\n', '{\\\"X\\\":\\\"X\\\"}', '--- \\\\nX: X\\\\n', 'X', '', '\\\"X\\\"')\" -%}\n        {% set scrubbed_record_detection = \" (ticket_event_primary_record is null or ticket_event_primary_record in \" ~ scrubbed_values ~\n        \") and (ticket_event_secondary_record is null or ticket_event_secondary_record in \" ~ scrubbed_values ~\n        \") and (ticket_event_tertiary_record is null or ticket_event_tertiary_record in (select value from scrubbed_values))\" -%}\n    {% elif source_db == 'sharddb' and  source_table == \"ticket_field_entries\" %}\n        {% set scrubbed_values = \"('--- \\\\n- X\\\\n', '{\\\"X\\\":\\\"X\\\"}', '--- \\\\nX: X\\\\n', '--- X\\\\n', 'X', '{}', '', '\\\"X\\\"')\" -%}\n        {% set scrubbed_record_detection = \" value in \" ~ scrubbed_values -%}\n    {% else %}\n        {% set scrubbed_record_detection = \"\" -%}  --TO DO: add scrubbing for ticket field entries\n    {% endif %}\n\n    -- scrubbed records should be hanble like delete records\n    flag_deletion_records as (\n        select\n            *,\n            {{ 'zdp_meta_op' }} = 'delete' {% if scrubbed_record_detection | length > 0 %}or {{ scrubbed_record_detection }}{% endif %}as {{ 'zdp_meta_is_deleted' }}\n        from unioned_data\n    ),\n\n    {# partition by and order by statement to filter duplication due to the ingestion pipeline\n    Duplicated records due to the ingestion pipeline have the same binlog metadata. They can have different kafka metadata (duplication generated by kafka) or not (duplication generated by snowpipe) #}\n    {% set ingestion_dedup_partition_by_statement =\n        primary_key_column ~ ', ' ~\n        'zdp_meta_binlog_timestamp, ' ~\n        'zdp_meta_binlog_filename_seq_number, ' ~\n        'zdp_meta_binlog_position, ' ~\n        'zdp_meta_binlog_transaction_id, ' ~\n        'zdp_meta_binlog_transaction_row_offset'\n    -%}\n    {% set ingestion_dedup_order_by_statement =\n        'zdp_meta_kafka_timestamp_epoch_ms asc nulls first, ' ~\n        'zdp_meta_kafka_offset asc nulls first, ' ~\n        'zdp_meta_l1_ingest_ts asc'\n    -%}\n\n    -- In case 2 records have the same id, and the same binlog metadata, it means they have been duplicated during the data digestion in ZDP\n    -- In that case, we want to keep the oldest one to keep the maybe already ingested one\n    -- If do_filter_consecutive_similar_records is enable, this deduplication will be handle during the consecutive similar records filtering\n    -- for now, we have to enable it every time because bad data have been ingested in ZDP and then reingest properly without deleting the incorrect ones\n    filter_duplicated_data_due_to_ingestion as (\n        {{ dbt_utils.deduplicate('flag_deletion_records', ingestion_dedup_partition_by_statement, ingestion_dedup_order_by_statement) }}\n    ),\n\n    {# Define default value for similarity_check_columns\n       If no value is given for similarity_check_columns, model_data_columns default value is all fields but zdp_meta and the model primary key\n       we need to add zdp_meta_is_deleted_<source_table> to not drop delete records that have the same content that the previous update  #}\n    {%- if similarity_check_columns|length > 0 -%}\n        {%- set effective_similarity_check_columns = similarity_check_columns + [ 'zdp_meta_is_deleted' ] -%}\n    {%- else -%}\n        {%- set effective_similarity_check_columns = transformation_columns_mapping | map(attribute=1) | map('lower') | reject('equalto', primary_key_column | lower) | list  + [ 'zdp_meta_is_deleted' ] -%}\n    {%- endif -%}\n\n    {% if do_filter_consecutive_similar_records -%}\n    {# zdp_meta_binlog_timestamp cannot be null, the other ones can be for backfilled data #}\n        {% set consecutive_similar_dedup_order_by_statement =\n            'zdp_meta_binlog_timestamp desc, ' ~\n            'zdp_meta_binlog_filename_seq_number desc nulls last, ' ~\n            'zdp_meta_binlog_position desc nulls last, ' ~\n            'zdp_meta_binlog_transaction_id desc nulls last, ' ~\n            'zdp_meta_binlog_transaction_row_offset desc nulls last'\n        -%}\n\n        compute_hash as (\n            select\n                *,\n                {{ dbt_utils.generate_surrogate_key(effective_similarity_check_columns) }} as hash_diff\n            from filter_duplicated_data_due_to_ingestion\n        ),\n\n        add_previous_hash as (\n            select\n                *,\n                lead(hash_diff) over (\n                    partition by {{ primary_key_column }}\n                    order by {{ consecutive_similar_dedup_order_by_statement }}\n                ) as previous_hash_diff\n            from compute_hash\n        ),\n    {% endif -%}\n\n    -- we want to remove the record that do not update any data columns\n    -- so we keep only the records if its hash differ for the one from the previous records\n    -- or if the previous records hash is null (means there is no previous record)\n    filter_source_duplications as (\n        {% if do_filter_consecutive_similar_records -%}\n            select *\n            from add_previous_hash\n            where previous_hash_diff is null or hash_diff != previous_hash_diff\n        {% else -%}\n            select *\n            from filter_duplicated_data_due_to_ingestion\n        {% endif -%}\n    ),\n\n    {% set order_by_statement =\n        'zdp_meta_binlog_timestamp desc, ' ~\n        'zdp_meta_binlog_filename_seq_number desc nulls last, ' ~\n        'zdp_meta_binlog_position desc nulls last, ' ~\n        'zdp_meta_binlog_transaction_id desc nulls last, ' ~\n        'zdp_meta_binlog_transaction_row_offset desc nulls last'\n    -%}\n\n    -- add other sc2 table specific attributes\n    -- zdp_meta_valid_to is equal to the zdp_meta_valid_from of the next record\n    add_scd2_datetime_columns as (\n        select\n            * exclude (zdp_meta_valid_to, zdp_meta_is_current, zdp_meta_is_last_state),\n            lag(zdp_meta_valid_from) over (\n                partition by {{ primary_key_column }}\n                order by {{ order_by_statement }}\n            ) as zdp_meta_valid_to,\n            lag({{ 'zdp_meta_is_deleted' }}) over (\n                partition by {{ primary_key_column }}\n                order by {{ order_by_statement }}\n            ) as following_record_zdp_meta_is_deleted\n        from filter_source_duplications\n    ),\n\n    filter_deleted_records as (\n        select *\n        from add_scd2_datetime_columns\n        where not {{ 'zdp_meta_is_deleted' }}\n    ),\n\n    scd2_data_with_is_current_flag as (\n        select\n            *,\n            zdp_meta_valid_to is null as zdp_meta_is_current,\n            zdp_meta_valid_to is null or following_record_zdp_meta_is_deleted as zdp_meta_is_last_state\n        from filter_deleted_records\n    ),\n\n    -- records with is_already_processed = true and zdp_meta_is_current = true haven't been updated so they don't need to be loaded\n    -- again in the table\n    exclude_already_processed_and_not_updated_records as (\n        select * exclude is_already_processed\n        from scd2_data_with_is_current_flag\n        where\n            is_already_processed = false\n            or (is_already_processed = true and zdp_meta_is_current = false)\n    ),\n\n    processed_at_ts as (\n        select current_timestamp::timestamp_ntz as processed_timestamp\n    )\n\n    select\n        {% for column in model_columns -%}\n            {{ ' exclude_already_processed_and_not_updated_records.' ~ column }},\n        {% endfor -%}\n        processed_at_ts.processed_timestamp as zdp_meta_processed_timestamp,\n        {{ zdp_dbt_utils.add_metadata_columns_for_models() }}\n    from exclude_already_processed_and_not_updated_records\n    cross join processed_at_ts\n\n\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.execution_date", "macro.dbt.is_incremental", "macro.zdp_dbt_utils.filter_account_move_related_records", "macro.zdp_dbt_utils.filter_account_move_related_records_fdn", "macro.zdp_dbt_utils.filter_deletion_records_due_to_ticket_archiving", "macro.dbt_utils.generate_surrogate_key", "macro.dbt_utils.deduplicate", "macro.zdp_dbt_utils.add_metadata_columns_for_models"]}, "description": "This macro build scd2 curated model from a cdc source. This macro:\n  * load the data from the source incrementally (with an 1 min overlap window)\n  * removes duplication due to the ingestion pipeline,\n  * can emoves insertions / deletions due to account move data on the shards\n  * can remove consecutive records with the same effective data\nIn transformation_columns_mapping, aliases should not be between quotes.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/build_cleansed_scd2_from_formatted_cdc_source/build_cleansed_scd2_from_formatted_cdc_source.yml", "arguments": [{"name": "source_db", "type": "String", "description": "The name of the database the cdc table is created on"}, {"name": "source_table", "type": "String", "description": "The name of the source cdc table"}, {"name": "primary_key_column", "type": "String", "description": "The unique identifier column in the current model."}, {"name": "transformation_columns_mapping", "type": "Array", "description": "The columns mapping between the formatted model and the cleansed one. Aliases should not be between quotes.\n"}, {"name": "do_filter_account_move_related_records", "type": "Boolean", "description": "Indicate if the records generate because of account moves should be filtered. true by default"}, {"name": "account_active_shard_table_db_full_path", "type": "String", "description": "The full path where the account active shard table is stored - required only if do_filter_account_move_related_records is true and filter logic is 'zap'"}, {"name": "do_filter_consecutive_similar_records", "type": "Boolean", "description": "Indicate if the consecutive records with the same data column values should be deduplicate or not. false by default"}, {"name": "similarity_check_columns", "type": "List(String)", "description": "The name of the columns that should be identical to consider 2 successive records similar (duplicated) - mandatory only if do_filter_consecutive_similar_records is true"}, {"name": "account_move_filter_logic", "type": "String", "description": "The logic to filter account move related records. 'zap' by default"}, {"name": "source_table_record_filter", "type": "String", "description": "Where clause applied to source table to filter certain records. Defaults to '1=1', which includes all records."}], "created_at": 1746557619.8289819, "supported_languages": null}, "macro.zdp_dbt_utils._get_query_comment": {"name": "_get_query_comment", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/query_metadata/query_comment.sql", "original_file_path": "macros/query_metadata/query_comment.sql", "unique_id": "macro.zdp_dbt_utils._get_query_comment", "macro_sql": "{% macro _get_query_comment(node, extra = {}) %}\n    {%- set comment_dict = extra -%}\n    {%- do comment_dict.update(\n        app='dbt',\n        dbt_snowflake_query_tags_version='2.5.0',\n        dbt_version=dbt_version,\n        project_name=project_name,\n        target_name=target.name,\n        target_database=target.database,\n        target_schema=target.schema,\n        invocation_id=invocation_id,\n        run_started_at=run_started_at.astimezone(modules.pytz.utc).isoformat(),\n        full_refresh=flags.FULL_REFRESH,\n        which=flags.WHICH,\n    ) -%}\n\n    {%- if node is not none -%}\n        {%- do comment_dict.update(\n            node_name=node.name,\n            node_alias=node.alias,\n            node_package_name=node.package_name,\n            node_original_file_path=node.original_file_path,\n            node_database=node.database,\n            node_schema=node.schema,\n            node_id=node.unique_id,\n            node_resource_type=node.resource_type,\n            node_meta=node.config.meta,\n            node_tags=node.tags,\n        ) -%}\n\n        {%- if flags.INVOCATION_COMMAND -%}\n            {%- do comment_dict.update(\n                invocation_command=flags.INVOCATION_COMMAND\n            ) -%}\n        {%- endif -%}\n\n        {%- if node.resource_type != ('seed') -%} {# Otherwise this throws an error saying 'Seeds cannot depend on other nodes.' #}\n            {%- if node.refs is defined -%}\n                {% set refs = [] %}\n                {% for ref in node.refs %}\n                    {%- do refs.append(ref.name) -%}\n                {% endfor %}\n                {%- do comment_dict.update(\n                    node_refs=refs | unique | list\n                ) -%}\n            {%- endif -%}\n        {%- endif -%}\n        {%- if node.resource_type == 'model' -%}\n            {%- do comment_dict.update(\n                materialized=node.config.materialized,\n            ) -%}\n        {%- endif -%}\n\n        {%- if node.raw_code is not none and local_md5 -%}\n            {%- do comment_dict.update({\n                \"raw_code_hash\": local_md5(node.raw_code)\n            }) -%}\n        {%- endif -%}\n    {%- endif -%}\n\n    {%- if env_var('DBT_CLOUD_PROJECT_ID', False) -%}\n        {%- do comment_dict.update(\n            dbt_cloud_project_id=env_var('DBT_CLOUD_PROJECT_ID')\n        ) -%}\n    {%- endif -%}\n\n    {%- if env_var('DBT_CLOUD_JOB_ID', False) -%}\n        {%- do comment_dict.update(\n            dbt_cloud_job_id=env_var('DBT_CLOUD_JOB_ID')\n        ) -%}\n    {%- endif -%}\n\n    {%- if env_var('DBT_CLOUD_RUN_ID', False) -%}\n        {%- do comment_dict.update(\n            dbt_cloud_run_id=env_var('DBT_CLOUD_RUN_ID')\n        ) -%}\n    {%- endif -%}\n\n    {%- if env_var('DBT_CLOUD_RUN_REASON_CATEGORY', False) -%}\n        {%- do comment_dict.update(\n            dbt_cloud_run_reason_category=env_var('DBT_CLOUD_RUN_REASON_CATEGORY')\n        ) -%}\n    {%- endif -%}\n\n    {%- if env_var('DBT_CLOUD_RUN_REASON', False) -%}\n        {%- do comment_dict.update(\n            dbt_cloud_run_reason=env_var('DBT_CLOUD_RUN_REASON')\n        ) -%}\n    {%- endif -%}\n\n    {{ return(tojson(comment_dict)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1034474, "supported_languages": null}, "macro.zdp_dbt_utils.get_query_comment": {"name": "get_query_comment", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/query_metadata/query_comment.sql", "original_file_path": "macros/query_metadata/query_comment.sql", "unique_id": "macro.zdp_dbt_utils.get_query_comment", "macro_sql": "{% macro get_query_comment(node) -%}\n    {% set available_extra_fields = [\n        \"DBT_ENV_CUSTOM_ENV_EXTRA_AIRFLOW_DAG_NAME\",\n        \"DBT_ENV_CUSTOM_ENV_EXTRA_AIRFLOW_RUN_ID\",\n        \"DBT_ENV_CUSTOM_ENV_EXTRA_AIRFLOW_TASK_ID\",\n        \"DBT_ENV_CUSTOM_ENV_EXTRA_AIRFLOW_TRY_NUMBER\",\n        \"DBT_ENV_CUSTOM_ENV_EXTRA_AIRFLOW_ENVIRONMENT\",\n        \"DBT_ENV_CUSTOM_ENV_EXTRA_GIT_REF\",\n        \"DBT_ENV_CUSTOM_ENV_EXTRA_GIT_SHA\"\n    ] %}\n\n    {% set extra = {} %}\n    {% for env_var_name in available_extra_fields %}\n        {% set new_env_name = env_var_name.replace(\"DBT_ENV_CUSTOM_ENV_\", \"\").lower() %}\n        {% set env_value = env_var(env_var_name, \"\") %}\n        {% if env_value == \"\" %}\n            {% set env_value = none %}\n        {% endif %}\n\n        {% do extra.update({new_env_name: env_value}) %}\n    {% endfor %}\n\n    {{ return( zdp_dbt_utils._get_query_comment(node, extra) ) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.zdp_dbt_utils._get_query_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1044044, "supported_languages": null}, "macro.zdp_dbt_utils.default__set_query_tag": {"name": "default__set_query_tag", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/query_metadata/query_tags.sql", "original_file_path": "macros/query_metadata/query_tags.sql", "unique_id": "macro.zdp_dbt_utils.default__set_query_tag", "macro_sql": "{% macro default__set_query_tag() -%}\n    {{ return(adapter.dispatch('set_query_tag', 'dbt_snowflake_query_tags')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake_query_tags.set_query_tag", "macro.dbt_snowflake_query_tags.default__set_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.104771, "supported_languages": null}, "macro.zdp_dbt_utils.default__unset_query_tag": {"name": "default__unset_query_tag", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/query_metadata/query_tags.sql", "original_file_path": "macros/query_metadata/query_tags.sql", "unique_id": "macro.zdp_dbt_utils.default__unset_query_tag", "macro_sql": "{% macro default__unset_query_tag(original_query_tag) -%}\n    {{ return(adapter.dispatch('unset_query_tag', 'dbt_snowflake_query_tags')(original_query_tag)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake_query_tags.unset_query_tag", "macro.dbt_snowflake_query_tags.default__unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.105012, "supported_languages": null}, "macro.zdp_dbt_utils._get_config": {"name": "_get_config", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/manage_logical_environments/_get_config.sql", "original_file_path": "macros/manage_logical_environments/_get_config.sql", "unique_id": "macro.zdp_dbt_utils._get_config", "macro_sql": "{% macro _get_config(config_name, default_value=none) %}\n    {# In some cases, when config is not set, then config.get returns empty string #}\n    {# This macro make sure that empty string is replaced by none #}\n\n    {% set config_value = config.get(config_name) %}\n    {% if config_value == '' %}\n        {% set config_value = none %}\n    {% endif %}\n\n    {% if config_value is none %}\n        {% set config_value = default_value %}\n    {% endif %}\n\n    {% do return(config_value) %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1057315, "supported_languages": null}, "macro.zdp_dbt_utils.get_snowflake_account_region": {"name": "get_snowflake_account_region", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/manage_logical_environments/get_snowflake_account_region/get_snowflake_account_region.sql", "original_file_path": "macros/manage_logical_environments/get_snowflake_account_region/get_snowflake_account_region.sql", "unique_id": "macro.zdp_dbt_utils.get_snowflake_account_region", "macro_sql": "{% macro get_snowflake_account_region(snowflake_account) %}\n    {# Returns: amer, apac, emea, not_applicable or raise an exception #}\n    {% set re = modules.re %}\n    {% set snowflake_account = snowflake_account | lower %}\n    {% set parsed_account = re.search('(zendesk)[-_]([a-z0-9]+)([-_](staging|dev)){0,1}', snowflake_account) %}\n\n    {% if parsed_account is not none %}\n        {% set snowflake_account_name = parsed_account.group(2) %}\n        {% if snowflake_account_name in ('amer', 'emea', 'apac') %}\n            {% set snowflake_region = snowflake_account_name %}\n        {% else %}\n            {% set snowflake_region = 'not_applicable' %}\n        {% endif %}\n    {% else %}\n        {{ exceptions.raise_compiler_error(\"Snowflake account name: '\" ~ snowflake_account ~ \"' doesn't follow the naming conention: zendesk[-_](<ACCOUNT_NAME>)([-_]staging|dev)\") }}\n    {% endif %}\n\n    {{ return(snowflake_region) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1069317, "supported_languages": null}, "macro.zdp_dbt_utils.get_dbt_minor_version": {"name": "get_dbt_minor_version", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/manage_logical_environments/get_dbt_minor_version/get_dbt_minor_version.sql", "original_file_path": "macros/manage_logical_environments/get_dbt_minor_version/get_dbt_minor_version.sql", "unique_id": "macro.zdp_dbt_utils.get_dbt_minor_version", "macro_sql": "{% macro get_dbt_minor_version() %}\n\n    {% set re = modules.re %}\n    {% set minor_version_search = re.search('^\\d{1,2}[.]\\d{1,2}', dbt_version) %}\n\n    {% if minor_version_search %}\n        {% set minor_version = minor_version_search.group(0) %}\n    {% elif zdp_dbt_utils.is_dbt_cloud_environment() %}\n        {% set minor_version = '1.9' %}\n    {% else %}\n        {{ exceptions.raise_compiler_error(dbt_version ~ \" couldn't be parsed\") }}\n    {% endif %}\n\n    {% do return(minor_version) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.is_dbt_cloud_environment"]}, "description": "Returns string with major and minor version of the DBT separated by the dot.", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/manage_logical_environments/get_dbt_minor_version/get_dbt_minor_version.yml", "arguments": [], "created_at": 1746557619.8295028, "supported_languages": null}, "macro.zdp_dbt_utils._get_feature_db_name": {"name": "_get_feature_db_name", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/manage_logical_environments/get_target_database_name/get_target_database_name.sql", "original_file_path": "macros/manage_logical_environments/get_target_database_name/get_target_database_name.sql", "unique_id": "macro.zdp_dbt_utils._get_feature_db_name", "macro_sql": "{% macro _get_feature_db_name(branch_name) %}\n\n    {% set database = target.database %}\n    {% set re = modules.re %}\n\n    {% set match =  re.search(\"(?<=feature/)[a-zA-Z0-9]+-?[0-9]+(?=[-/_]|$)\", branch_name, re.IGNORECASE) %}\n    {% if match is not none %}\n        {% set database = \"FEATURE_\" ~ match.group().replace(\"-\", \"\") %}\n    {% else %}\n        {{ exceptions.raise_compiler_error(\"The branch '\" ~ branch_name ~ \"' is a non-feature branch; Please switch to feature branch for local exeuction\") }}\n    {% endif %}\n\n    {{ return(database) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1090965, "supported_languages": null}, "macro.zdp_dbt_utils.get_target_database_name": {"name": "get_target_database_name", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/manage_logical_environments/get_target_database_name/get_target_database_name.sql", "original_file_path": "macros/manage_logical_environments/get_target_database_name/get_target_database_name.sql", "unique_id": "macro.zdp_dbt_utils.get_target_database_name", "macro_sql": "{% macro get_target_database_name(custom_database, node=none) -%}\n    {{ return(adapter.dispatch('get_target_database_name', 'zdp_dbt_utils')(custom_database, node)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.default__get_target_database_name"]}, "description": "Generates the database name for a model based on the current target, incorporating the environment prefix.\nIn projects without staging Snowflake accounts, the preprod target is redirected to use 'dev' databases.\nYou can find the available targets in the documentation for the 'check_target_name' macro.\nFor CI and local targets, the feature database is utilized, regardless of the custom_database argument.\nFor dev targets, the custom_database argument is applied with the prefix 'dev_'.\nFor prod and preprod targets, the custom_database argument is used without any prefix.", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/manage_logical_environments/get_target_database_name/get_target_database_name.yml", "arguments": [{"name": "custom_database", "type": "str", "description": "The database schema name specified for a model; defaults to an empty string."}, {"name": "node", "type": "ref", "description": "Not used."}], "created_at": 1746557619.8310683, "supported_languages": null}, "macro.zdp_dbt_utils.default__get_target_database_name": {"name": "default__get_target_database_name", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/manage_logical_environments/get_target_database_name/get_target_database_name.sql", "original_file_path": "macros/manage_logical_environments/get_target_database_name/get_target_database_name.sql", "unique_id": "macro.zdp_dbt_utils.default__get_target_database_name", "macro_sql": "{% macro default__get_target_database_name(custom_database, node=none) %}\n    {% if not custom_database %}\n        {{ exceptions.raise_compiler_error(\"Invalid arguments: Database configuration for the \" ~ node['name'] ~ \" is missing. Docs: https://github.com/zendesk/zdp_dbt_template/wiki/Custom-database-and-schema-names\") }}\n    {% endif %}\n\n    {%- set dbt_env = zdp_dbt_utils.get_dbt_env() -%}\n    {%- set branch_name = env_var(\"DBT_CLOUD_GIT_BRANCH\", 'none') if env_var(\"DBT_CLOUD_GIT_BRANCH\", 'none') != 'none' else none -%}\n\n    {% if dbt_env in (\"local\", \"ci\") %}\n\n        {# Local and CI targets are using Feature DB, that's why the custom_database is ignored #}\n        {%- set custom_database_with_env_prefix = target.database -%}\n\n        {# branch_name is not none for DBT Cloud executions only #}\n        {% if dbt_env == 'local' %}\n            {# For SQLFluff in DBT Cloud, branch_name is empty string #}\n            {% if branch_name == '' %}\n                {% set custom_database_with_env_prefix = 'PLACEHOLDER_DB' %}\n            {% elif branch_name is not none %}\n                {% set custom_database_with_env_prefix = zdp_dbt_utils._get_feature_db_name(branch_name) %}\n            {% endif %}\n        {% endif %}\n\n    {% elif dbt_env == \"dev\" %}\n        {% set custom_database_with_env_prefix = dbt_env ~ \"_\" ~ custom_database %}\n    {% else %}\n        {% set custom_database_with_env_prefix = custom_database %}\n    {% endif %}\n\n    {{ return(custom_database_with_env_prefix) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.get_dbt_env", "macro.zdp_dbt_utils._get_feature_db_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1107495, "supported_languages": null}, "macro.zdp_dbt_utils.get_dbt_env": {"name": "get_dbt_env", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/manage_logical_environments/get_dbt_env/get_dbt_env.sql", "original_file_path": "macros/manage_logical_environments/get_dbt_env/get_dbt_env.sql", "unique_id": "macro.zdp_dbt_utils.get_dbt_env", "macro_sql": "{% macro get_dbt_env() -%}\n    {{ return(adapter.dispatch('get_dbt_env', 'zdp_dbt_utils')()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.default__get_dbt_env"]}, "description": "In projects without staging Snowflake accounts, the preprod target is redirected to use 'dev' databases.\nYou can find the available targets in the documentation for the 'check_target_name' macro.", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/manage_logical_environments/get_dbt_env/get_dbt_env.yml", "arguments": [], "created_at": 1746557619.8315117, "supported_languages": null}, "macro.zdp_dbt_utils.default__get_dbt_env": {"name": "default__get_dbt_env", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/manage_logical_environments/get_dbt_env/get_dbt_env.sql", "original_file_path": "macros/manage_logical_environments/get_dbt_env/get_dbt_env.sql", "unique_id": "macro.zdp_dbt_utils.default__get_dbt_env", "macro_sql": "{% macro default__get_dbt_env() %}\n    {%- set dbt_env = target.name | lower -%}\n    {% do zdp_dbt_utils.check_target_name(dbt_env) %}\n\n    {% set snowflake_account = target.account | lower %}\n    {% set snowflake_account_type = zdp_dbt_utils.get_snowflake_account_environment(snowflake_account) %}\n\n    {# For projects operating only on production accounts, preprod is redirected to dev #}\n    {% if snowflake_account_type == 'production' and dbt_env == \"preprod\" %}\n        {% set dbt_env = \"dev\" %}\n    {% endif %}\n\n    {{ return(dbt_env) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.check_target_name", "macro.zdp_dbt_utils.get_snowflake_account_environment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.111759, "supported_languages": null}, "macro.zdp_dbt_utils.is_dbt_cloud_environment": {"name": "is_dbt_cloud_environment", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/manage_logical_environments/is_dbt_cloud_environment/is_dbt_cloud_environment.sql", "original_file_path": "macros/manage_logical_environments/is_dbt_cloud_environment/is_dbt_cloud_environment.sql", "unique_id": "macro.zdp_dbt_utils.is_dbt_cloud_environment", "macro_sql": "{% macro is_dbt_cloud_environment() %}\n    {%- set cloud_environment_name = env_var(\"DBT_CLOUD_ENVIRONMENT_NAME\", 'none') if env_var(\"DBT_CLOUD_ENVIRONMENT_NAME\", 'none') != 'none' else none -%}\n\n    {% if cloud_environment_name is not none %}\n        {% do return(true) %}\n    {% endif %}\n\n    {% do return(false) %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1123366, "supported_languages": null}, "macro.zdp_dbt_utils.get_snowflake_account_environment": {"name": "get_snowflake_account_environment", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/manage_logical_environments/get_snowflake_account_environment/get_snowflake_account_environment.sql", "original_file_path": "macros/manage_logical_environments/get_snowflake_account_environment/get_snowflake_account_environment.sql", "unique_id": "macro.zdp_dbt_utils.get_snowflake_account_environment", "macro_sql": "{% macro get_snowflake_account_environment(snowflake_account_name=target.account) %}\n    {# Possible return values: development, production, staging #}\n    {% set account_type = 'production' %}\n\n    {% set re = modules.re %}\n    {% set snowflake_account = snowflake_account_name | lower %}\n\n    {% if 'dev' in snowflake_account %}\n        {% set account_type = 'development' %}\n    {% elif 'staging' in snowflake_account %}\n        {% set account_type = 'staging' %}\n    {% endif %}\n\n    {{ return(account_type) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "Detects the environment type of a Snowflake account based on its name. Returns a string indicating 'production', 'staging', or 'development'.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/manage_logical_environments/get_snowflake_account_environment/get_snowflake_account_environment.yml", "arguments": [{"name": "snowflake_account_name", "type": "str", "description": "The name of the Snowflake account. E.g. zendesk-global-staging"}], "created_at": 1746557619.8322868, "supported_languages": null}, "macro.zdp_dbt_utils.check_target_name": {"name": "check_target_name", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/manage_logical_environments/check_target_name/check_target_name.sql", "original_file_path": "macros/manage_logical_environments/check_target_name/check_target_name.sql", "unique_id": "macro.zdp_dbt_utils.check_target_name", "macro_sql": "{% macro check_target_name(target_name=target.name) %}\n\n    {% set available_target_names = [\n        \"prod\",\n        \"preprod\",\n        \"ci\",\n        \"dev\",\n        \"local\"\n    ] %}\n\n    {% if target_name | lower not in available_target_names %}\n        {{ exceptions.raise_compiler_error(\"Invalid target name: '\" ~ target_name ~ \"'. Available target names: \" ~ available_target_names) }}\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "Validates the target name against accepted values. The valid options are: 'prod', 'preprod', 'dev', 'local', and 'ci'.", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/manage_logical_environments/check_target_name/check_target_name.yml", "arguments": [{"name": "target_name", "type": "str", "description": "The target name to validate."}], "created_at": 1746557619.833286, "supported_languages": null}, "macro.zdp_dbt_utils.generete_warehouse_name_for_prod": {"name": "generete_warehouse_name_for_prod", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/manage_logical_environments/get_virtual_warehouse_name/generate_warehouse_name_for_prod.sql", "original_file_path": "macros/manage_logical_environments/get_virtual_warehouse_name/generate_warehouse_name_for_prod.sql", "unique_id": "macro.zdp_dbt_utils.generete_warehouse_name_for_prod", "macro_sql": "{% macro generete_warehouse_name_for_prod(size, fleet_name) -%}\n    {{ return(adapter.dispatch('generete_warehouse_name_for_prod', 'zdp_dbt_utils')(size, fleet_name)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.default__generete_warehouse_name_for_prod"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.114189, "supported_languages": null}, "macro.zdp_dbt_utils.default__generete_warehouse_name_for_prod": {"name": "default__generete_warehouse_name_for_prod", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/manage_logical_environments/get_virtual_warehouse_name/generate_warehouse_name_for_prod.sql", "original_file_path": "macros/manage_logical_environments/get_virtual_warehouse_name/generate_warehouse_name_for_prod.sql", "unique_id": "macro.zdp_dbt_utils.default__generete_warehouse_name_for_prod", "macro_sql": "{% macro default__generete_warehouse_name_for_prod(size, fleet_name) %}\n\n    {% set warehouse_type_label = fleet_name %}\n    {% set warehouse_name = 'PROD_' ~ warehouse_type_label ~ '_DBT_' ~ size %}\n\n    {{ return(warehouse_name | upper) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1145325, "supported_languages": null}, "macro.zdp_dbt_utils.map_size_label_to_warehouse_size": {"name": "map_size_label_to_warehouse_size", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/manage_logical_environments/get_virtual_warehouse_name/get_virtual_warehouse_name.sql", "original_file_path": "macros/manage_logical_environments/get_virtual_warehouse_name/get_virtual_warehouse_name.sql", "unique_id": "macro.zdp_dbt_utils.map_size_label_to_warehouse_size", "macro_sql": "{% macro map_size_label_to_warehouse_size(warehouse_size_label) %}\n    {# This macro maps the size label from the config to warehouse size naming in Snowflake. #}\n    {% if warehouse_size_label is none %}\n        {{ exceptions.raise_compiler_error(\"Size argument cannot be none\") }}\n    {% endif %}\n\n    {% set warehouse_size_label = warehouse_size_label | lower %}\n\n    {% set available_wh_sizes = {\n        \"xs\": \"xs\",\n        \"s\": \"s\",\n        \"m\": \"m\",\n        \"l\": \"l\",\n        \"xl\": \"xl\",\n        \"2xl\": \"2xl\",\n        \"3xl\": \"3xl\",\n    } %}\n\n    {% if warehouse_size_label not in available_wh_sizes %}\n        {{ exceptions.raise_compiler_error(\"Invalid warehouse size. Got: \" ~ warehouse_size_label ~ \". Accepted values are: \" ~ available_wh_sizes.keys()) }}\n    {% endif %}\n\n    {%- do return(available_wh_sizes[warehouse_size_label]) -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1168041, "supported_languages": null}, "macro.zdp_dbt_utils.decrease_warehouse_size": {"name": "decrease_warehouse_size", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/manage_logical_environments/get_virtual_warehouse_name/get_virtual_warehouse_name.sql", "original_file_path": "macros/manage_logical_environments/get_virtual_warehouse_name/get_virtual_warehouse_name.sql", "unique_id": "macro.zdp_dbt_utils.decrease_warehouse_size", "macro_sql": "{% macro decrease_warehouse_size(current_size, decrease_factor) %}\n    {# Takes the size and decrease it according to the decrease_factor. The decrease is linear #}\n    {% set mapping_size_to_number = {\n        \"xs\": 1,\n        \"s\": 2,\n        \"m\": 3,\n        \"l\": 4,\n        \"xl\": 5,\n        \"2xl\": 6,\n        \"3xl\": 7,\n        \"4xl\": 8\n    } %}\n\n    {% set current_size_number = mapping_size_to_number[current_size] %}\n    {% set new_size_number = 1 if current_size_number - decrease_factor <= 0 else current_size_number - decrease_factor %}\n\n    {% for size, size_number in mapping_size_to_number.items() %}\n        {% if size_number == new_size_number %}\n            {% do return(size) %}\n        {% elif new_size_number > mapping_size_to_number|length and size_number == mapping_size_to_number|length %}\n            {% do exceptions.warn(\"\\033[1;33mWARNING: In macro decrease_warehouse_size(\" ~ current_size ~ \", \" ~ decrease_factor ~ \"), warehouse exceeded maximum size: \" ~ size ~ \". Defaulting to largest warehouse: \" ~ size) %}\n            {% do return(size) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ exceptions.raise_compiler_error(\"Error in 'decrease_warehouse_size' macro with arguments: \" ~ current_size ~ \", \" ~ decrease_factor) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.118236, "supported_languages": null}, "macro.zdp_dbt_utils._validate_warehouse_name": {"name": "_validate_warehouse_name", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/manage_logical_environments/get_virtual_warehouse_name/get_virtual_warehouse_name.sql", "original_file_path": "macros/manage_logical_environments/get_virtual_warehouse_name/get_virtual_warehouse_name.sql", "unique_id": "macro.zdp_dbt_utils._validate_warehouse_name", "macro_sql": "{% macro _validate_warehouse_name(warehouse_name) %}\n    {# Checks if warehouse name follow the convention names: <env>_<fleet_name>_dbt_<size> #}\n    {% set re = modules.re %}\n    {% set warehouse_name = warehouse_name | lower %}\n    {% set matched_name = re.fullmatch('(prod|dev|ci)_[a-z_]+_dbt_[a-z0-9]{1,4}', warehouse_name) %}\n\n    {% set check = true %}\n\n    {% if matched_name is none %}\n        {% do exceptions.warn(\"\\033[1;33mWARNING: The warehouse name: \" ~ warehouse_name ~ \" doesn't adhere to naming convention: <env>_<fleet_name>_dbt_<size>\") %}\n        {% set check = false %}\n    {% endif %}\n\n    {{ return(check) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1189363, "supported_languages": null}, "macro.zdp_dbt_utils.get_virtual_warehouse_name": {"name": "get_virtual_warehouse_name", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/manage_logical_environments/get_virtual_warehouse_name/get_virtual_warehouse_name.sql", "original_file_path": "macros/manage_logical_environments/get_virtual_warehouse_name/get_virtual_warehouse_name.sql", "unique_id": "macro.zdp_dbt_utils.get_virtual_warehouse_name", "macro_sql": "{% macro get_virtual_warehouse_name(warehouse_size=none, warehouse_size_full_refresh=none, fleet_name=none, ci_decrease_factor=none, dev_decrease_factor=none, preprod_decrease_factor=none, apac_decrease_factor=none, emea_decrease_factor=none) %}\n    {# During parsing phase, the config is not filled yet #}\n    {% if not execute and warehouse_size is none %}\n        {{ return('PLACEHOLDER_FOR_PARSE_PHASE') }}\n    {% endif %}\n\n    {# Getting the execution context and model configuration #}\n    {%- set dbt_env = zdp_dbt_utils.get_dbt_env() -%}\n    {%- set snowflake_account = target.account | lower -%}\n    {%- set snowflake_account_environment = zdp_dbt_utils.get_snowflake_account_environment(snowflake_account) -%}\n    {%- set snowflake_account_region = zdp_dbt_utils.get_snowflake_account_region(snowflake_account) -%}\n    {%- set node = model -%}\n    {%- set node_materialized = config.get(\"materialized\") -%}\n    {%- set node_incremental_strategy = config.get(\"incremental_strategy\") -%}\n    {%- set snowflake_warehouse_from_config = zdp_dbt_utils._get_config(\"snowflake_warehouse\") -%}\n    {%- set is_full_refresh_mode = should_full_refresh() -%}\n    {%- set is_empty = flags.EMPTY -%}\n\n    {#\n        If snowflake_warehouse is configured for the model, then we should just return it's value.\n        This make sure the pre_hook will not override the config\n    #}\n    {%- if snowflake_warehouse_from_config is not none -%}\n        {% do exceptions.warn(\"\\033[1;33mWARNING: The project is using macro: 'get_virtual_warehouse_name' to get the snowflake warehouse. It's inadvisable to mix it with 'snowflake_warehouse' configuration in model: \" ~ node.name ~ \". Please find more information on https://github.com/zendesk/zdp_dbt_template/wiki/Custom-get-virtual-warehouse-name\") %}\n        {{ return(snowflake_warehouse_from_config) }}\n    {%- endif -%}\n\n    {% set fleet_name = fleet_name if fleet_name else zdp_dbt_utils._get_config(\"warehouse_fleet_name\", 'transform') %}\n\n    {# Setting the default values for used variables #}\n    {%- set warehouse_size = warehouse_size if warehouse_size else config.get(\"warehouse_size\") %}\n    {%- if warehouse_size is none or warehouse_size == '' -%}\n        {{ exceptions.raise_compiler_error(\"Value for 'warehouse_size' cannot be none. Please configure is as argument to macro: get_virtual_warehouse_name, or as model config: 'warehouse_size'\") }}\n    {%- endif -%}\n    {%- set size = zdp_dbt_utils.map_size_label_to_warehouse_size(warehouse_size) %}\n\n    {%- set ci_decrease_factor = ci_decrease_factor if ci_decrease_factor else var(\"warehouse_ci_decrease_factor\", zdp_dbt_utils.get_default_decrease_factor_for_env(\"ci\")) -%}\n    {# Local and dev are using the same set of warehouses, so we only define single decrease factor #}\n    {%- set dev_decrease_factor = dev_decrease_factor if dev_decrease_factor else var(\"warehouse_dev_decrease_factor\", zdp_dbt_utils.get_default_decrease_factor_for_env(\"dev\")) -%}\n    {%- set preprod_decrease_factor = preprod_decrease_factor if preprod_decrease_factor else var(\"warehouse_preprod_decrease_factor\", zdp_dbt_utils.get_default_decrease_factor_for_env(\"preprod\")) -%}\n\n    {# Sizing for incremental models in full refresh mode #}\n    {% if node_materialized == \"incremental\" and node_incremental_strategy != \"truncate_insert\" %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {% set full_refresh_warehouse_size = warehouse_size_full_refresh if warehouse_size_full_refresh else zdp_dbt_utils._get_config(\"warehouse_size_full_refresh\") %}\n        {% if full_refresh_warehouse_size is not none and (is_full_refresh_mode or (relation is none)) %}\n            {% set size = zdp_dbt_utils.map_size_label_to_warehouse_size(full_refresh_warehouse_size) %}\n        {% endif %}\n    {% endif %}\n\n    {# Size specific for region #}\n    {%- set size = zdp_dbt_utils.get_warehouse_size_for_region(size, snowflake_account_region, apac_decrease_factor, emea_decrease_factor) -%}\n\n    {# Decreasing size for specific environment #}\n    {%- if dbt_env == \"ci\" and ci_decrease_factor -%}\n        {%- set size = zdp_dbt_utils.decrease_warehouse_size(size, ci_decrease_factor) -%}\n    {%- elif dbt_env in (\"dev\", \"local\") and dev_decrease_factor -%}\n        {%- set size = zdp_dbt_utils.decrease_warehouse_size(size, dev_decrease_factor) -%}\n    {%- elif dbt_env == \"preprod\" and preprod_decrease_factor -%}\n        {%- set size = zdp_dbt_utils.decrease_warehouse_size(size, preprod_decrease_factor) -%}\n    {% endif %}\n\n    {# TODO: Discuss #}\n    {# {% if node_materialized == \"view\" %}\n        {% set size = \"xs\" %}\n    {% endif %} #}\n\n    {# Remove snapshot predicate after 1.9, because snapshot don't accept the empty flag #}\n    {% if flags.EMPTY and node_materialized != 'snapshot' %}\n        {% set size = \"xs\" %}\n    {% endif %}\n\n    {# Getting the warehouse type #}\n    {% set warehouse_type_label = \"transform\" %}\n\n    {# Generating the warehouse name #}\n    {% if dbt_env in ('prod', 'preprod') %}\n        {% set warehouse_name = zdp_dbt_utils.generete_warehouse_name_for_prod(size, fleet_name) %}\n    {% elif dbt_env in ('ci', 'dev') %}\n        {% set warehouse_name = dbt_env ~ '_' ~ warehouse_type_label ~ \"_DBT_\" ~ size %}\n    {% elif dbt_env == 'local' %}\n        {% set warehouse_name =  \"DEV_\" ~ warehouse_type_label ~ \"_DBT_\" ~ size %}\n    {% endif %}\n\n    {# Validating the warehouse name #}\n    {% if warehouse_name == '' or warehouse_name is none %}\n        {% do exceptions.warn(\"\\033[1;33mWARNING: Unexpectedly, the 'get_virtual_warehouse_name' macro is trying to return empty warehouse name. Defaulting to target warehouse from profiles\") %}\n        {% set warehouse_name = target.warehouse %}\n    {% endif %}\n\n    {% do zdp_dbt_utils._validate_warehouse_name(warehouse_name) %}\n\n    {% set warehouse_name = warehouse_name | upper %}\n\n    {{ return(warehouse_name) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.get_dbt_env", "macro.zdp_dbt_utils.get_snowflake_account_environment", "macro.zdp_dbt_utils.get_snowflake_account_region", "macro.zdp_dbt_utils._get_config", "macro.dbt.should_full_refresh", "macro.zdp_dbt_utils.map_size_label_to_warehouse_size", "macro.zdp_dbt_utils.get_default_decrease_factor_for_env", "macro.zdp_dbt_utils.get_warehouse_size_for_region", "macro.zdp_dbt_utils.decrease_warehouse_size", "macro.zdp_dbt_utils.generete_warehouse_name_for_prod", "macro.zdp_dbt_utils._validate_warehouse_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.12375, "supported_languages": null}, "macro.zdp_dbt_utils.get_warehouse_size_for_region": {"name": "get_warehouse_size_for_region", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/manage_logical_environments/get_virtual_warehouse_name/get_warehouse_size_for_region.sql", "original_file_path": "macros/manage_logical_environments/get_virtual_warehouse_name/get_warehouse_size_for_region.sql", "unique_id": "macro.zdp_dbt_utils.get_warehouse_size_for_region", "macro_sql": "{% macro get_warehouse_size_for_region(base_size, region, apac_decrease_factor=none, emea_decrease_factor=none) -%}\n    {{ return(adapter.dispatch('get_warehouse_size_for_region', 'zdp_dbt_utils')(base_size, region, apac_decrease_factor, emea_decrease_factor)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.default__get_warehouse_size_for_region"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1244614, "supported_languages": null}, "macro.zdp_dbt_utils.default__get_warehouse_size_for_region": {"name": "default__get_warehouse_size_for_region", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/manage_logical_environments/get_virtual_warehouse_name/get_warehouse_size_for_region.sql", "original_file_path": "macros/manage_logical_environments/get_virtual_warehouse_name/get_warehouse_size_for_region.sql", "unique_id": "macro.zdp_dbt_utils.default__get_warehouse_size_for_region", "macro_sql": "{% macro default__get_warehouse_size_for_region(base_size, region, apac_decrease_factor=none, emea_decrease_factor=none) %}\n    {% if base_size is none %}\n        {{ exceptions.raise_compiler_error(\"Argument: 'base_size' cannot be none\") }}\n    {% endif %}\n\n    {% if region is none %}\n        {{ exceptions.raise_compiler_error(\"Argument: 'region' cannot be none\") }}\n    {% endif %}\n\n    {%- set emea_decrease_factor = emea_decrease_factor if emea_decrease_factor else zdp_dbt_utils._get_config('warehouse_emea_decrease_factor', 0) -%}\n    {%- set apac_decrease_factor = apac_decrease_factor if apac_decrease_factor else zdp_dbt_utils._get_config('warehouse_apac_decrease_factor', 0) -%}\n\n    {% if region == 'emea' %}\n        {% set new_size = zdp_dbt_utils.decrease_warehouse_size(base_size, emea_decrease_factor) %}\n    {% elif region == 'apac' %}\n        {% set new_size = zdp_dbt_utils.decrease_warehouse_size(base_size, apac_decrease_factor) %}\n    {% else %}\n        {% set new_size = base_size %}\n    {% endif %}\n\n    {% do return(new_size) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils._get_config", "macro.zdp_dbt_utils.decrease_warehouse_size"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.125644, "supported_languages": null}, "macro.zdp_dbt_utils.get_default_decrease_factor_for_env": {"name": "get_default_decrease_factor_for_env", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/manage_logical_environments/get_virtual_warehouse_name/get_default_decrease_factor_for_env.sql", "original_file_path": "macros/manage_logical_environments/get_virtual_warehouse_name/get_default_decrease_factor_for_env.sql", "unique_id": "macro.zdp_dbt_utils.get_default_decrease_factor_for_env", "macro_sql": "{% macro get_default_decrease_factor_for_env(dbt_env) -%}\n    {{ return(adapter.dispatch('get_default_decrease_factor_for_env', 'zdp_dbt_utils')(dbt_env)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.default__get_default_decrease_factor_for_env"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1260645, "supported_languages": null}, "macro.zdp_dbt_utils.default__get_default_decrease_factor_for_env": {"name": "default__get_default_decrease_factor_for_env", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/manage_logical_environments/get_virtual_warehouse_name/get_default_decrease_factor_for_env.sql", "original_file_path": "macros/manage_logical_environments/get_virtual_warehouse_name/get_default_decrease_factor_for_env.sql", "unique_id": "macro.zdp_dbt_utils.default__get_default_decrease_factor_for_env", "macro_sql": "{% macro default__get_default_decrease_factor_for_env(dbt_env) %}\n    {# Local target is skipped, because local and dev environments are using the same set of warehouses #}\n    {% set default_factors = {\n        'ci': 1,\n        'dev': 1,\n        'preprod': 0\n    } %}\n\n    {% if dbt_env in default_factors %}\n        {% do return(default_factors[dbt_env]) %}\n    {% endif %}\n\n    {% do return(0) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1265886, "supported_languages": null}, "macro.zdp_dbt_utils.filter_account_move_related_records_fdn": {"name": "filter_account_move_related_records_fdn", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/filter_account_move_related_records_fdn/filter_account_move_related_records_fdn.sql", "original_file_path": "macros/filter_account_move_related_records_fdn/filter_account_move_related_records_fdn.sql", "unique_id": "macro.zdp_dbt_utils.filter_account_move_related_records_fdn", "macro_sql": "{% macro filter_account_move_related_records_fdn(source_cdc_table_content, binlog_ts_column_name = 'zdp_meta_binlog_timestamp', source_type_column_name = 'zdp_meta_source_type', account_shard_moves_table_full_path = source('product_accounts', 'instance_account_shard_moves_scd2')) %}\n\nwith filtered_transactions as (\n    select dataset.*,\n    from {{ source_cdc_table_content }} as dataset\n        left join {{ account_shard_moves_table_full_path }} moves\n            on dataset.account_id = moves.instance_account_id\n            and dataset.zdp_meta_shard_num = moves.instance_account_shard_id\n    where dataset.{{source_type_column_name}} = 'LegacyArchivedData' -- LegacyArchivedData (only for tickets data) have a null binlog_ts so there are filtered\n        or (moves.instance_account_id is null and moves.instance_account_shard_id is null)\n        or (dataset.{{binlog_ts_column_name}} >= moves.zdp_meta_valid_from and dataset.{{binlog_ts_column_name}} < moves.zdp_meta_valid_to)\n)\n\nselect * from filtered_transactions\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "This macro filters the insertion / deletion records that we received in CDC tables due to the account move in the shards.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/filter_account_move_related_records_fdn/filter_account_move_related_records_fdn.yml", "arguments": [{"name": "source_cdc_table_content", "type": "String", "description": "The name of the CTE in the parent code that represent the records to filter"}, {"name": "binlog_ts_column_name", "type": "String", "description": "Timestamp column name to use to match valid shard time windows."}], "created_at": 1746557619.834421, "supported_languages": null}, "macro.zdp_dbt_utils.generate_lucidchard_erd_import_input": {"name": "generate_lucidchard_erd_import_input", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/generate_lucidchard_erd_import_input/generate_lucidchard_erd_import_input.sql", "original_file_path": "macros/generate_lucidchard_erd_import_input/generate_lucidchard_erd_import_input.sql", "unique_id": "macro.zdp_dbt_utils.generate_lucidchard_erd_import_input", "macro_sql": "{% macro generate_lucidchard_erd_import_input(database_name=none, schema_name=none, model_names=none) %}\n\n    {% if database_name is none or schema_name is none %}\n        {{ exceptions.raise_compiler_error(\"The `database_name` and  `database_name` arguments are mandatory.\") }}\n    {% endif %}\n\n    {% if model_names is none %}\n        {% set models=codegen.get_tables_in_schema(schema_name, database_name) %}\n    {% elif model_names is string %}\n        {{ exceptions.raise_compiler_error(\"The `model_names` argument must always be a list, even if there is only one model.\") }}\n    {% else %}\n        {% set models = model_names %}\n    {% endif %}\n\n    {% set result = [] %}\n\n    {% for model in models %}\n\n        {% set table_relation=api.Relation.create(\n            database=database_name|lower,\n            schema=schema_name|lower,\n            identifier=model|lower\n        ) %}\n\n        {% set columns=adapter.get_columns_in_relation(table_relation) %}\n\n        {% for column in columns %}\n            {% if column.dtype == \"NUMBER\" %}\n                {% set column_data_type = \"\\\"NUMBER(\" + column.numeric_precision|string + \",\" +  column.numeric_scale|string + \")\\\"\" %}\n            {% else %}\n                {% set column_data_type = column.dtype %}\n            {% endif %}\n\n            {% if column.char_size %}\n                {% set column_precision = column.char_size %}\n            {% else %}\n                {% set column_precision = null %}\n            {% endif %}\n\n            {% set column_info = {\n                \"dbms\": \"mysql\",\n                \"table_schema\": database_name + \".\" + schema_name,\n                \"table_name\": table_relation.name,\n                \"column_name\": column.column | lower,\n                \"ordinal_position\": loop.index,\n                \"data_type\": column_data_type | lower,\n                \"character_maximum_length\": column_precision,\n                \"constraint_type\": null,\n                \"referenced_table_schema\": null,\n                \"referenced_table_name\": null,\n                \"referenced_column_name\": null\n            } %}\n            {{ result.append(column_info) }}\n        {% endfor %}\n    {% endfor %}\n\n    -- Generate csv\n    {% set header = \"dbms,table_schema,table_name,column_name,ordinal_position,data_type,character_maximum_length,constraint_type,referenced_table_schema,referenced_table_name,referenced_column_name\" %}\n    {% set csv = [header] %}\n\n    {% for row in result %}\n        {{ csv.append(row.dbms ~ ',' ~ row.table_schema ~ ',' ~ row.table_name ~ ',' ~ row.column_name ~ ',' ~ row.ordinal_position ~ ',' ~ row.data_type ~ ',' ~ row.character_maximum_length ~ ',' ~ row.constraint_type ~ ',' ~ row.referenced_table_schema ~ ',' ~ row.referenced_table_name ~ ',' ~ row.referenced_column_name) }}\n    {% endfor %}\n\n    {% if execute %}\n\n        {% set csv_joined = csv | join ('\\n') %}\n        {{ print(csv_joined) }}\n        {% do return(csv_joined) %}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "The `generate_lucidchard_erd_import_input` macro generates a CSV file containing metadata about the columns of tables in a specified schema within a database. \nIt extracts information about the tables and their columns, including data types, maximum character lengths, and other attributes, formatting them into a CSV for easy import into Lucidchart.\n\nRead Lucidchart documentation (https://help.lucid.co/hc/en-us/articles/16471565238292-Create-an-Entity-Relationship-Diagram-in-Lucidchart#import-database-as-erd-into-lucidchart) to know how import the generate metadata in Lucidchart.\n\n**Parameters:**\n\n- `database_name` (string, mandatory): The name of the database containing the tables to analyze.\n- `schema_name` (string, mandatory): The name of the schema within the database that contains the tables to analyze.\n- `model_names` (list or none, optional): A list of model (table) names to include in the CSV. If this parameter is `none`, the macro will retrieve all tables in the specified schema. If a single model is provided, it must be passed as a list.\n\n**Usage Examples:**\n\n- Generate a CSV for all tables in a schema:\n  ```bash\n  dbt run-operation generate_lucidchard_erd_import_input --args '{\"database_name\": \"cleansed\", \"schema_name\":\"product_guide\"}'\n  ```\n\n- Generate a CSV for specific models:\n  ```bash\n  dbt run-operation generate_lucidchard_erd_import_input --args '{\"database_name\": \"formatted\", \"schema_name\":\"pda\", \"model_names\": [\"guide__user_sessions__self_service_sessions\", \"guide__user_sessions__self_service_page_analytics\", \"platform__core__articles\", \"platform__standard__community_posts\"]}'\n  ```\n\n  - Generate a CSV for all tables in a schema and store the result in a file:\n  ```bash\n  dbt run-operation generate_lucidchard_erd_import_input --args '{\"database_name\": \"presentation\", \"schema_name\":\"product_guide\"}' > models_presentation_product_guide.csv\n  ```\n\n**Notes:**\n- Ensure that the database and schema names are correct to avoid errors when extracting tables.\n- The macro is designed to work with MySQL databases as indicated by the `dbms` parameter.", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/generate_lucidchard_erd_import_input/generate_lucidchard_erd_import_input.yaml", "arguments": [], "created_at": 1746557619.8764586, "supported_languages": null}, "macro.zdp_dbt_utils.is_string_present": {"name": "is_string_present", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/is_string_present/is_string_present.sql", "original_file_path": "macros/is_string_present/is_string_present.sql", "unique_id": "macro.zdp_dbt_utils.is_string_present", "macro_sql": "{% macro is_string_present( col ) -%}\n\n    {{ col }} is not null and {{ col }} != ''\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "Check if a column is not empty or not null\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/is_string_present/is_string_present.yml", "arguments": [{"name": "col", "type": "string", "description": "Name of the column to check"}], "created_at": 1746557619.8351707, "supported_languages": null}, "macro.zdp_dbt_utils.build_cleansed_scd1_from_formatted_cdc_source": {"name": "build_cleansed_scd1_from_formatted_cdc_source", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/build_cleansed_scd1_from_formatted_cdc_source/build_cleansed_scd1_from_formatted_cdc_source.sql", "original_file_path": "macros/build_cleansed_scd1_from_formatted_cdc_source/build_cleansed_scd1_from_formatted_cdc_source.sql", "unique_id": "macro.zdp_dbt_utils.build_cleansed_scd1_from_formatted_cdc_source", "macro_sql": "{% macro build_cleansed_scd1_from_formatted_cdc_source(\n    source_db, source_table, primary_key_column, transformation_columns_mapping, do_filter_account_move_related_records = true,\n    account_active_shard_table_db_full_path = source('product_accounts', 'instance_account_shard_moves_scd2'),\n    account_move_filter_logic = 'fdn', processing_ingestion_lag = 0, processing_ingestion_lag_unit = 'hour', do_process_until_dag_execution_time = false,\n    source_table_record_filter = '1=1'\n) %}\n\n    {# Determine if current run is done to run unit tests #}\n    {%- set temp = [] -%}\n    {%- for element in invocation_args_dict.select -%}\n        {%- if invocation_args_dict.which == 'test' and 'test_type:unit' in element -%}\n            {%- do temp.append(element) -%}\n        {%- endif -%}\n    {%- endfor -%}\n    {%- set is_unit_test = temp|length > 0 -%}\n\n    -- get new data. To be able to filter duplicates due to ingestion pipeline without full scanning the table, we introduced an overlap window.\n    with cdc_records_to_process as (\n        select *\n        from {{ source(source_db, source_table) }}\n        where {{ source_table_record_filter }}\n\n        {% if do_process_until_dag_execution_time and processing_ingestion_lag != 0 -%}\n            -- In case we want to get all the cleansed table in a consistant state\n            and zdp_meta_l1_ingest_ts <= timestampadd({{ processing_ingestion_lag_unit }}, -{{ processing_ingestion_lag }}, {{ zdp_dbt_utils.execution_date() }})\n        {% elif do_process_until_dag_execution_time and processing_ingestion_lag == 0 -%}\n            -- In case we want to get all the cleansed table in a consistant state\n            and zdp_meta_l1_ingest_ts <= {{ zdp_dbt_utils.execution_date() }}\n        {% elif processing_ingestion_lag != 0 and not do_process_until_dag_execution_time -%}\n            -- As the account mode filtering source is not real time for now, we want to not process the latest ingested data to\n            --   give time for the account move filtering source to be more up to date than the dataset we are filtering data from.\n            and zdp_meta_l1_ingest_ts <= timestampadd({{ processing_ingestion_lag_unit }}, -{{ processing_ingestion_lag }}, current_timestamp)\n        {% endif -%}\n\n        {% if is_incremental() -%}\n            and zdp_meta_l1_ingest_ts > (select coalesce(max({{ 'zdp_meta_l1_ingest_ts' }}), '1970-01-01'::date) as max from {{ this }})\n        {% endif -%}\n\n    ),\n\n\n\n    {% set zdp_meta_is_deleted_formula = \"zdp_meta_op = 'delete'\" %}\n    {% set scrubbed_value_list = [\n        '---\\\\n- X\\\\n',\n        '--- \\\\n- X\\\\n',\n        '#\u2601\\\\n---\\\\n- X\\\\n',\n        '#\u2601\\\\n--- \\\\n- X\\\\n',\n        '{\\\"X\\\":\\\"X\\\"}',\n        '---\\\\nX: X\\\\n',\n        '--- \\\\nX: X\\\\n',\n        '#\u2601\\\\n---\\\\nX: X\\\\n',\n        '#\u2601\\\\n--- \\\\nX: X\\\\n',\n        '--- X\\\\n',\n        '#\u2601\\\\n--- X\\\\n',\n        'X',\n        '{}',\n        '',\n        '\\\"X\\\"',\n        'DELETED'\n    ] -%}\n    {% set scrubbed_values = \"('\" ~ scrubbed_value_list|join(\"', '\")  ~ \"')\" -%}\n\n    {% if source_db == 'sharddb' and  source_table == 'tickets' %}\n        {% set zdp_meta_is_deleted_formula = zdp_meta_is_deleted_formula ~ \" or status_id = 8 or subject = 'SCRUBBED'\" -%}\n    {% elif source_db == 'sharddb' and source_table in (\"events\", \"events_combined\") %}\n        {# In 'CommentRedactionEvent' events, the value can be X if the comment has to be redacted, it does not mean the event has been scrubbed #}\n        {% set general_condition = \"((value is null or value in \" ~ scrubbed_values ~\n            \") and (value_previous is null or value_previous in \" ~ scrubbed_values ~ \") and (value_reference is null or value_reference in \" ~ scrubbed_values ~ \"))\" -%}\n        {# In 'Notification', 'NotificationWithCcs' scrubbed events, the value_reference can be not scrubbed #}\n        {% set notification_condition = \"((value is null or value in \" ~ scrubbed_values ~ \") and (value_previous is null or value_previous in \" ~ scrubbed_values ~ \"))\" -%}\n        {# In Create / Change scrubbed events, the value_reference can be not scrubbed. in take case, both value and value_previous have 'DELETED' as value #}\n        {% set create_change_type_condition = \"((value = 'DELETED' and value_previous = 'DELETED') or (value_reference = 'X') or (\" ~ general_condition ~ \"))\" -%}\n        {% set zdp_meta_is_deleted_formula = zdp_meta_is_deleted_formula ~ \" or (type in ('Create', 'Change') and \" ~ create_change_type_condition ~\n            \") or (type in ('Notification', 'NotificationWithCcs') and \" ~ notification_condition ~\n            \") or (type not in ('Create', 'Change', 'Notification', 'NotificationWithCcs', 'CommentRedactionEvent') and \" ~ general_condition ~ \")\"-%}\n    {% elif source_db == 'sharddb' and  source_table == \"ticket_field_entries\" %}\n        {% set zdp_meta_is_deleted_formula = zdp_meta_is_deleted_formula ~ \" or value in \" ~ scrubbed_values -%}\n    {% endif %}\n\n    {% set zdp_metadata_extraction_columns_mapping = [\n        ('zdp_meta_eff_ts', 'zdp_meta_eff_timestamp'),\n        ('zdp_meta_op', 'zdp_meta_op'),\n        ('zdp_meta_l1_ingest_ts', 'zdp_meta_l1_ingest_ts'),\n        ('zdp_meta:binlog_database::varchar', 'zdp_meta_binlog_database'),\n        ('zdp_meta:binlog_ts::timestamp_ntz', 'zdp_meta_binlog_timestamp'),\n        (\"SPLIT_PART(zdp_meta:binlog_position, '.', 1)::varchar\", 'zdp_meta_binlog_filename_prefix'),\n        (\"SPLIT_PART(SPLIT_PART(zdp_meta:binlog_position, '.', 2), ':', 1)::number\", 'zdp_meta_binlog_filename_seq_number'),\n        (\"SPLIT_PART(zdp_meta:binlog_position, ':', 2)::number\", 'zdp_meta_binlog_position'),\n        ('zdp_meta:binlog_xid::number', 'zdp_meta_binlog_transaction_id'),\n        ('zdp_meta:binlog_xoffset::number', 'zdp_meta_binlog_transaction_row_offset'),\n        ('zdp_meta:kafka_timestamp::number', 'zdp_meta_kafka_timestamp_epoch_ms'),\n        ('zdp_meta:kafka_offset::number', 'zdp_meta_kafka_offset'),\n        (\"zdp_meta:source_type::varchar\", 'zdp_meta_source_type'),\n        (\"'\" ~ source_db ~ '_' ~ source_table ~ \"'\", 'zdp_meta_l1_source'),\n        (\"'cdc'\", 'zdp_meta_l1_source_type'),\n        (zdp_meta_is_deleted_formula, 'zdp_meta_is_deleted')\n    ] -%}\n\n    {%- if source_db == 'sharddb' -%}\n        {%- set zdp_metadata_extraction_columns_mapping = zdp_metadata_extraction_columns_mapping + [('zdp_meta_shard_num', 'zdp_meta_shard_num')] -%}\n    {%- else -%}\n        {%- set zdp_metadata_extraction_columns_mapping = zdp_metadata_extraction_columns_mapping + [('null', 'zdp_meta_shard_num')] -%}\n    {%- endif -%}\n\n    records_to_process_with_extra_attributes as (  -- noqa: ST03\n        select\n            * exclude (zdp_meta_eff_ts, zdp_meta_l1_ingest_ts, zdp_meta_op, zdp_meta_shard_num, zdp_meta_is_deleted),\n            {% for expr, alias in zdp_metadata_extraction_columns_mapping -%}\n                {{ expr }} as {{ alias }},\n            {% endfor -%}\n        from cdc_records_to_process\n    ),\n\n    -- Filtering account move-related records if applicable\n    filter_account_move_related_records as (  -- noqa: ST03\n        {% if do_filter_account_move_related_records == true and account_move_filter_logic == 'zap' -%}\n               {{ zdp_dbt_utils.filter_account_move_related_records('records_to_process_with_extra_attributes', 'zdp_meta_binlog_timestamp', account_active_shard_table_db_full_path) }}\n        {% elif do_filter_account_move_related_records and account_move_filter_logic == 'fdn' -%}\n               {{ zdp_dbt_utils.filter_account_move_related_records_fdn('records_to_process_with_extra_attributes', 'zdp_meta_binlog_timestamp') }}\n        {% else -%}\n            select *\n            from records_to_process_with_extra_attributes\n        {% endif -%}\n    ),\n\n    filter_deletion_records_due_to_archived_tickets as (\n        {% if source_db == 'sharddb' and  source_table == 'tickets' %}\n               {{ zdp_dbt_utils.filter_deletion_records_due_to_ticket_archiving('filter_account_move_related_records', 'id') }}\n        {% elif source_db == 'sharddb' and  source_table in ('ticket_field_entries', \"events\", \"events_combined\") %}\n               {{ zdp_dbt_utils.filter_deletion_records_due_to_ticket_archiving('filter_account_move_related_records', 'ticket_id') }}\n        {% else %}\n            select *\n            from filter_account_move_related_records\n        {% endif %}\n    ),\n\n    transformed_data as (\n        select\n            {% for expr, alias in transformation_columns_mapping -%}\n                {{ expr }} as {{ alias|lower }},\n            {% endfor -%}\n            {% for _, column in zdp_metadata_extraction_columns_mapping -%}\n                {{ column }}{{ \",\" if not loop.last }}\n            {% endfor -%}\n        from filter_deletion_records_due_to_archived_tickets\n    ),\n\n    {%- set model_columns = transformation_columns_mapping | map(attribute=1)  | map('lower') | list +\n        zdp_metadata_extraction_columns_mapping | map(attribute=1) | list\n    -%}\n\n    {% if is_incremental() %}\n        -- as the data are not ingested in order in snowflake because of snowpipe, we cannot guarantee the latest state received\n        --    in the newest one so we will need to compare it with the current newest state processed in the previous pipeline\n        entities_updates_by_current_pipeline as (\n            select distinct {{ primary_key_column }} from transformed_data\n        ),\n\n        -- Just enough to look back at the last max_processed_timestamp batch ,\n        -- as highest probability of newer state records existence will be in this delta batch, in case of later arrivinig records\n        -- we get all the records we ingested in previous pipleine of this model and union with the current delta and chose the latest binlog record\n        last_pipelines_max_timestamp AS (\n            select max(zdp_meta_processed_timestamp) AS max_watermark\n            from {{ this }}\n        ),\n\n        {# Determine if current run is done to run unit tests #}\n        {% set temp = [] %}\n        {% for element in invocation_args_dict.select %}\n            {% if invocation_args_dict.which == 'test' and 'test_type:unit' in element %}\n                {% do temp.append(element) %}\n            {% endif %}\n        {% endfor %}\n        {% set is_unit_test = temp|length > 0 %}\n\n        {%- set model_existing_column_list = [] -%}\n        {% if not is_unit_test -%}\n            {%- for column in adapter.get_columns_in_relation(this) -%}\n                {%- do model_existing_column_list.append(column.column|lower) -%}\n            {%- endfor -%}\n        {% endif -%}\n\n        current_records_for_entities_updates_by_current_pipeline as (\n            select\n                {% for column in model_columns -%}\n                    {% if column in model_existing_column_list or is_unit_test -%}\n                        {{ column }},\n                    {% else -%}\n                        null as {{ column }},\n                    {% endif -%}\n                {% endfor -%}\n            from {{ this }}\n            where\n                        zdp_meta_processed_timestamp = (select COALESCE((SELECT max_watermark FROM last_pipelines_max_timestamp), '1970-01-01 00:00:00'::timestamp) FROM last_pipelines_max_timestamp)\n                        and {{ primary_key_column }} in (select {{ primary_key_column }} from entities_updates_by_current_pipeline)\n        ),\n    {% endif %}\n\n    -- XXX: To work around Snowflake's \"error 300010\" of `merge into` of a DBT generated temporary view into the target table,\n    --      Snowflake provided a workaround to do below `union all` in this order (`is_already_in_dest_model` part first)\n    --      c.f. https://zendesk.slack.com/archives/C05S3ACJL6B/p1729152814699939?thread_ts=1729090877.300879&cid=C05S3ACJL6B\n    unioned_data as (   -- noqa: ST03\n        {% if is_incremental() %}\n            select\n                *,\n                true as is_already_in_dest_model\n            from current_records_for_entities_updates_by_current_pipeline\n            union all\n        {% endif %}\n        select\n            *,\n            false as is_already_in_dest_model\n        from transformed_data\n    ),\n\n    {%- set order_by_statement =\n        'zdp_meta_binlog_timestamp desc, ' ~\n        'zdp_meta_binlog_filename_seq_number desc nulls last, ' ~\n        'zdp_meta_binlog_position desc nulls last, ' ~\n        'zdp_meta_binlog_transaction_id desc nulls last, ' ~\n        'zdp_meta_binlog_transaction_row_offset desc nulls last, ' ~\n        'zdp_meta_kafka_timestamp_epoch_ms desc nulls last, ' ~\n        'zdp_meta_kafka_offset desc nulls last, ' ~\n        'zdp_meta_l1_ingest_ts desc nulls last'\n    -%}\n\n    last_records as (\n        {{ dbt_utils.deduplicate('unioned_data', primary_key_column, order_by_statement) }}\n    ),\n\n    processed_at_ts as (\n        select current_timestamp::timestamp_ntz as processed_timestamp\n    )\n\n    select\n        {% for column in model_columns -%}\n            {{ ' last_records.' ~ column }},\n        {% endfor -%}\n        processed_at_ts.processed_timestamp as zdp_meta_processed_timestamp,\n        {{ zdp_dbt_utils.add_metadata_columns_for_models() }}\n    from last_records\n    cross join processed_at_ts\n    where not last_records.is_already_in_dest_model\n\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.execution_date", "macro.dbt.is_incremental", "macro.zdp_dbt_utils.filter_account_move_related_records", "macro.zdp_dbt_utils.filter_account_move_related_records_fdn", "macro.zdp_dbt_utils.filter_deletion_records_due_to_ticket_archiving", "macro.dbt_utils.deduplicate", "macro.zdp_dbt_utils.add_metadata_columns_for_models"]}, "description": "This macro build scd2 curated model from a cdc source. This macro:\n  * load the data from the source incrementally (with an 1 min overlap window)\n  * removes duplication due to the ingestion pipeline,\n  * can emoves insertions / deletions due to account move data on the shards\n  * can remove consecutive records with the same effective data\nIn transformation_columns_mapping, aliases should not be between quotes.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/build_cleansed_scd1_from_formatted_cdc_source/build_cleansed_scd1_from_formatted_cdc_source.yml", "arguments": [{"name": "source_db", "type": "String", "description": "The name of the database the cdc table is created on"}, {"name": "source_table", "type": "String", "description": "The name of the source cdc table"}, {"name": "primary_key_column", "type": "String", "description": "The unique identifier column in the current model."}, {"name": "transformation_columns_mapping", "type": "Array", "description": "The columns mapping between the formatted model and the cleansed one. Aliases should not be between quotes.\n"}, {"name": "do_filter_account_move_related_records", "type": "Boolean", "description": "Indicate if the records generate because of account moves should be filtered. true by default"}, {"name": "account_active_shard_table_db_full_path", "type": "String", "description": "The full path where the account active shard table is stored - required only if do_filter_account_move_related_records is true and filter logic is 'zap'"}, {"name": "account_move_filter_logic", "type": "String", "description": "The logic to filter account move related records. 'zap' by default"}, {"name": "source_table_record_filter", "type": "String", "description": "Where clause applied to source table to filter certain records. Defaults to '1=1', which includes all records."}], "created_at": 1746557619.835923, "supported_languages": null}, "macro.zdp_dbt_utils.drop_feature_database": {"name": "drop_feature_database", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/feature_db/drop_feature_database.sql", "original_file_path": "macros/feature_db/drop_feature_database.sql", "unique_id": "macro.zdp_dbt_utils.drop_feature_database", "macro_sql": "{% macro drop_feature_database(\n    feature_database\n) %}\n  \n    {% if execute and feature_database %}\n\n        {{ (log(\"Dropping database: \" ~ feature_database, info=True)) }}\n\n        {% call statement('drop_database', fetch_result=True, auto_begin=False) -%}\n\n            drop database if exists {{ feature_database }};\n        \n        {%- endcall %}\n\n    {%- set result = load_result('drop_database') -%}\n    {{ log(result['data'][0][0], info=True)}}\n\n    {% else %}\n    \n        {{ exceptions.raise_compiler_error(\"Invalid arguments. Missing feature database\") }}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "This macro drops existing feature database\n\nTo use in the command line:\ndbt run-operation drop_feature_database --args '{\"feature_database\": \"feature_database\"}'", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/feature_db/drop_feature_database.yml", "arguments": [{"name": "feature_database", "type": null, "description": "Feature database name"}], "created_at": 1746557619.8397584, "supported_languages": null}, "macro.zdp_dbt_utils.create_feature_database": {"name": "create_feature_database", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/feature_db/create_feature_database.sql", "original_file_path": "macros/feature_db/create_feature_database.sql", "unique_id": "macro.zdp_dbt_utils.create_feature_database", "macro_sql": "{% macro create_feature_database(\n    feature_database,\n    dev_dbt_role='DEV_DBT_ROLE'\n) %}\n  \n    {% if execute and feature_database %}\n\n        {{ (log(\"Creating new empty database: \" ~ feature_database, info=True)) }}\n\n        {% call statement('create_database', fetch_result=True, auto_begin=False) -%}\n\n            create or replace transient database {{ feature_database }};\n            grant all on database {{ feature_database }} to role {{ dev_dbt_role }};\n        \n        {%- endcall %}\n\n    {%- set result = load_result('create_database') -%}\n    {{ log(result['data'][0][0], info=True)}}\n\n    {% else %}\n    \n        {{ exceptions.raise_compiler_error(\"Invalid arguments. Missing feature database\") }}\n\n    {% endif %}\n\n    {{ (log(\"Feature database \" ~ feature_database ~ \" created successfully\" , info=True)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "This macro creates a new empty database and grants all permissions to dbt Developer's role \n\nTo use in the command line:\ndbt run-operation create_feature_database --args '{\"feature_database\": \"feature_database\"}'", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/feature_db/create_feature_database.yml", "arguments": [{"name": "feature_database", "type": null, "description": "Feature database name"}, {"name": "dev_dbt_role", "type": null, "description": "dbt Developer's role (optional). Defaults to `DEV_DBT_ROLE`"}], "created_at": 1746557619.8369656, "supported_languages": null}, "macro.zdp_dbt_utils.grants_on_feature_database": {"name": "grants_on_feature_database", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/feature_db/grants_on_feature_database.sql", "original_file_path": "macros/feature_db/grants_on_feature_database.sql", "unique_id": "macro.zdp_dbt_utils.grants_on_feature_database", "macro_sql": "{% macro grants_on_feature_database(\n    destination_database=none,\n    dev_dbt_role='DEV_DBT_ROLE'\n) %}\n\n    {% if execute %}\n\n        {{ (log(\"grants_on_feature_database - Inbound arguments destination_database: \" ~ destination_database ~ \n                \", dev_dbt_role: \" ~ dev_dbt_role, info=True)) }}\n\n        {% if not destination_database %}\n            {{ exceptions.raise_compiler_error(\"Invalid arguments. Missing destination database\") }}\n        {% endif %}\n\n        {% set grant_statements =\n\n            ['grant usage on database ' ~ destination_database ~ ' to ' ~ dev_dbt_role ~ ';',\n            'grant usage on all schemas in database ' ~ destination_database ~ ' to ' ~ dev_dbt_role ~ ';',\n            'grant select on all tables in database ' ~ destination_database ~ ' to ' ~ dev_dbt_role ~ ';',\n            'grant select on all views in database ' ~ destination_database ~ ' to ' ~ dev_dbt_role ~ ';',\n            'grant usage on all functions in database ' ~ destination_database ~ ' to ' ~ dev_dbt_role ~ ';',\n            'grant usage on all procedures in database ' ~ destination_database ~ ' to ' ~ dev_dbt_role ~ ';']\n\n        %}\n\n        {% for grant_statement in grant_statements %}\n\n            {{ log(grant_statement, info=True) }}\n            {% set result = run_query(grant_statement) %}\n            {{ log(*result.columns[0].values(), info=True)}} \n\n        {% endfor %}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "This macro grants usage and select permissions on feature database to dev-dbt-role\n\nTo use in the command line:\ndbt run-operation grants_on_feature_database --args '{\"destination_database\": \"destination_database_name\"}'", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/feature_db/grants_on_feature_database.yml", "arguments": [{"name": "destination_database", "type": null, "description": "Feature database name to grant permissions on"}, {"name": "dev_dbt_role", "type": null, "description": "dbt Developer's role (optional). Defaults to `DEV_DBT_ROLE`"}], "created_at": 1746557619.8377438, "supported_languages": null}, "macro.zdp_dbt_utils.cleanup_outdated_feature_db": {"name": "cleanup_outdated_feature_db", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/feature_db/cleanup_outdated_feature_db.sql", "original_file_path": "macros/feature_db/cleanup_outdated_feature_db.sql", "unique_id": "macro.zdp_dbt_utils.cleanup_outdated_feature_db", "macro_sql": "{% macro cleanup_outdated_feature_db(\n    time_to_live=60, time_to_live_units='day', prefixes=['feature%', 'ci^_%^_%']\n) %}\n\n    {% if execute and time_to_live | int > 0 %}\n\n        {{ (log(\"Getting outdated databases\", info=True)) }}\n\n        {% set prefixes_agg = prefixes | join('\\', \\'') %}\n\n        {% call statement('list_database', fetch_result=True, auto_begin=False) %}\n\n            select database_name\n            from snowflake.information_schema.databases\n            where\n                lower(database_name) like any ('{{ prefixes_agg }}') escape '^'\n                and datediff('{{ time_to_live_units }}', CONVERT_TIMEZONE('UTC', created)::timestamp_ntz, sysdate()) > {{ time_to_live }}\n\n        {% endcall %}\n\n        {% set result = load_result('list_database') %}\n\n        {% if result and result['data'] %}\n            {% set databases = result['data'] | map(attribute=0) | list %}\n        {% else %}\n            {% set databases = [] %}\n        {% endif %}\n\n        {{ log(\"Databases to drop: \" ~ databases, info=True)}}\n\n        {% for feature_database in databases %}\n            {{ drop_feature_database(feature_database) }}\n        {% endfor %}\n\n    {% else %}\n        {{ exceptions.raise_compiler_error(\"Invalid arguments. time_to_live should be more than 0\") }}\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.zdp_dbt_utils.drop_feature_database"]}, "description": "This macro dropes all Feature DBs and CI DBs that are older than provided time_to_live.\n\nTo use in the command line:\ndbt run-operation cleanup_outdated_feature_db --args '{\"time_to_live\": 60}'", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/feature_db/cleanup_outdated_feature_db.yml", "arguments": [{"name": "time_to_live", "type": null, "description": "How old should be FeatureDB to be dropped. Defaults to 60"}], "created_at": 1746557619.840507, "supported_languages": null}, "macro.zdp_dbt_utils.create_cloud_ci_database": {"name": "create_cloud_ci_database", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/feature_db/create_cloud_ci_database.sql", "original_file_path": "macros/feature_db/create_cloud_ci_database.sql", "unique_id": "macro.zdp_dbt_utils.create_cloud_ci_database", "macro_sql": "{% macro create_cloud_ci_database() %}\n    {%- set database_name = target.database -%}\n\n    {%- if target.name == 'ci' and zdp_dbt_utils.is_dbt_cloud_environment() -%}\n\n        {% if database_name.startswith('CI_CLOUD_') %}\n            {{ zdp_dbt_utils.create_feature_database(feature_database=database_name) }}\n        {% else %}\n            {{ exceptions.raise_compiler_error(\"Invalid target database: \" ~ database_name ~ \" for CI execution\") }}\n        {% endif %}\n    {%- else -%}\n        {{ exceptions.raise_compiler_error(\"This macro should only be used in DBT Cloud with the CI target\") }}\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.is_dbt_cloud_environment", "macro.zdp_dbt_utils.create_feature_database"]}, "description": "This macro creates a new empty database for CI in the DBT Cloud. Should be used only with the DBT Cloud projects.", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/feature_db/create_cloud_ci_database.yml", "arguments": [], "created_at": 1746557619.8381963, "supported_languages": null}, "macro.zdp_dbt_utils.create_replica_database": {"name": "create_replica_database", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/feature_db/create_replica_database.sql", "original_file_path": "macros/feature_db/create_replica_database.sql", "unique_id": "macro.zdp_dbt_utils.create_replica_database", "macro_sql": "{% macro create_replica_database(\n    databases=none,\n    source_database=none,\n    destination_database=none,\n    dev_dbt_role='DEV_DBT_ROLE'\n) %}\n\n    {# TODO: Remove this macro #}\n    {% do exceptions.warn(\"DEPRECATED. THIS MACRO WILL BE REMOVED 31.01.2024\") %}\n    {{ (log(\"create_replica_database - Inbound arguments databases: \" ~ databases ~\n            \", source_database: \" ~ source_database ~\n            \", destination_database: \" ~ destination_database, info=True)) }}\n\n    {% if databases != none %}\n\n        {% set list_db = databases.split(':') %}\n\n        {% set source_database = list_db[0] %}\n        {% set destination_database = list_db[1] %}\n\n    {% endif %}\n\n    {% if source_database and destination_database %}\n\n        {{ (log(\"Cloning existing database \" ~ source_database ~\n            \" into database \" ~ destination_database, info=True)) }}\n\n        {% call statement('clone_database', fetch_result=True, auto_begin=False) -%}\n\n            create or replace transient database {{ destination_database }} clone {{ source_database }};\n\n        {%- endcall %}\n\n    {%- set result = load_result('clone_database') -%}\n    {{ log(result['data'][0][0], info=True)}}\n\n    {% else %}\n\n        {{ exceptions.raise_compiler_error(\"Invalid arguments. Missing databases or source and destination database\") }}\n\n    {% endif %}\n\n    {% if execute %}\n\n        {{ grants_on_feature_database(destination_database, dev_dbt_role) }}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.zdp_dbt_utils.grants_on_feature_database"]}, "description": "DEPRECATED\nThis macro creates a zero copy clone for a replica database, that is used as differ in development environments\n\nTo use in the command line:\ndbt run-operation create_replica_database --args '{\"databases\": \"source_database_name:destination_database_name\"}'\nor\ndbt run-operation create_replica_database --args '{\"source_database\": \"source_database_name\", \"destination_database\": \"destination_database_name\"}'", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/feature_db/create_replica_database.yml", "arguments": [{"name": "databases", "type": null, "description": "Colon delimeted string with Database to clone and new database name (optional).\nThis argument takes precedence over the next pair if all are provided\n"}, {"name": "source_database", "type": null, "description": "Database to clone (optional)"}, {"name": "destination_database", "type": null, "description": "New database name (optional)"}, {"name": "dev_dbt_role", "type": null, "description": "dbt Developer's role (optional). Defaults to `DEV_DBT_ROLE`"}], "created_at": 1746557619.8392463, "supported_languages": null}, "macro.zdp_dbt_utils.incremental_changes_condition": {"name": "incremental_changes_condition", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/incremental_changes_condition/incremental_changes_condition.sql", "original_file_path": "macros/incremental_changes_condition/incremental_changes_condition.sql", "unique_id": "macro.zdp_dbt_utils.incremental_changes_condition", "macro_sql": "{% macro incremental_changes_condition( source_table_time_col, current_table_time_col2 ) -%}\n\n    {{ source_table_time_col }} > (select coalesce(max({{ current_table_time_col2 }}), '1970-01-01') from {{ this }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "This macro generates the condition to get only the data updated since the last run by using a water mark. It will only pull the records from the source table where the timestamp is greater than the max of a timestamp column in the dest table \n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/incremental_changes_condition/incremental_changes_condition.yml", "arguments": [{"name": "source_table_time_col", "type": "string", "description": "The name of the timestamp column in the source table.\n"}, {"name": "current_table_time_col2", "type": "string", "description": "The name of the timestamp column in the destination table. \n"}], "created_at": 1746557619.8418627, "supported_languages": null}, "macro.zdp_dbt_utils.generate_database_name": {"name": "generate_database_name", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/get_custom_name/generate_database_name.sql", "original_file_path": "macros/get_custom_name/generate_database_name.sql", "unique_id": "macro.zdp_dbt_utils.generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {{ return(adapter.dispatch('generate_database_name', 'zdp_dbt_utils')(custom_database_name, node)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.default__generate_database_name"]}, "description": "Generates a database name for a model.\nFor ZDP purposes, the `generate_database_name` macro has been overridden to automatically add a prefix based on the target name and the current Snowflake account.\nThe main logic of selecting the database is in get_target_database_name macro.\n\nSAAS data specific: This macro also supports importing public models from cleansed projects.", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/get_custom_name/generate_database_name.yml", "arguments": [{"name": "custom_database_name", "type": "str", "description": "The specified database schema name for a model; defaults to an empty string."}, {"name": "node", "type": "ref", "description": "The node for which the database is being generated."}], "created_at": 1746557619.8434973, "supported_languages": null}, "macro.zdp_dbt_utils._check_for_db_prefix": {"name": "_check_for_db_prefix", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/get_custom_name/generate_database_name.sql", "original_file_path": "macros/get_custom_name/generate_database_name.sql", "unique_id": "macro.zdp_dbt_utils._check_for_db_prefix", "macro_sql": "{% macro _check_for_db_prefix(custom_database_name) %}\n    {% set prefixes = ['dev_', 'replica_', 'ci_', 'feature_', ] %}\n\n    {% for prefix in prefixes %}\n        {% if prefix in custom_database_name | lower %}\n            {{ return(true) }}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(false) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.14983, "supported_languages": null}, "macro.zdp_dbt_utils.default__generate_database_name": {"name": "default__generate_database_name", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/get_custom_name/generate_database_name.sql", "original_file_path": "macros/get_custom_name/generate_database_name.sql", "unique_id": "macro.zdp_dbt_utils.default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set database = target.database -%}\n\n    {%- if custom_database_name is not none or zdp_dbt_utils.is_dbt_cloud_environment() -%}\n        {#\n            The generate_database_name macro has been overridden to automatically adds a prefix based on the target name and the current Snowflake account.\n            TODO: Remove, after all projects will be migrated to the new macro.\n        #}\n        {% if zdp_dbt_utils._check_for_db_prefix(custom_database_name) %}\n            {%- set database = custom_database_name | trim -%}\n            {% do exceptions.warn(\"WARNING: The provided custom database: \" ~ custom_database_name ~ \" for model: '\" ~ node['name'] ~ \"' includes an environmental prefix! The generate_database_name macro has been overridden to automatically adds a prefix based on the target name and the current Snowflake account. See page: https://github.com/zendesk/zdp_dbt_template/wiki/Logical-environments\") %}\n        {%- else -%}\n            {%- set database = zdp_dbt_utils.get_target_database_name(custom_database_name, node) | trim -%}\n        {% endif %}\n    {%- endif -%}\n\n    {# Specific logic for EDA Cleansed projects importated as package #}\n    {%- if var('is_domain_project', false) and node and node.meta['is_cleansed_model'] -%}\n\n        {# Possible values: [prod, dev, local, ci, preprod]  #}\n        {%- set db_env = target.name | lower -%}\n\n        {%- if db_env in ('local', 'ci') -%}\n            {%- set db_env = 'prod' -%}\n        {%- elif db_env == 'preprod' -%}\n            {%- set db_env = 'dev' -%}\n        {%- endif -%}\n\n        {%- if db_env in ('prod') -%}\n            {%- set database = node.meta['cleansed_model_database'] | upper -%}\n        {%- else -%}\n            {%- set database = (db_env + '_' + node.meta['cleansed_model_database']) | upper -%}\n        {%- endif -%}\n\n    {%- endif -%}\n\n    {{ database | trim }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.is_dbt_cloud_environment", "macro.zdp_dbt_utils._check_for_db_prefix", "macro.zdp_dbt_utils.get_target_database_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.151402, "supported_languages": null}, "macro.zdp_dbt_utils.generate_schema_name": {"name": "generate_schema_name", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/get_custom_name/generate_schema_name.sql", "original_file_path": "macros/get_custom_name/generate_schema_name.sql", "unique_id": "macro.zdp_dbt_utils.generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name=none, node=none) -%}\n\n    {{ return(adapter.dispatch('generate_schema_name', 'zdp_dbt_utils')(custom_schema_name, node)) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.default__generate_schema_name"]}, "description": "Renders schema name for a model, as we're using isolated FeatureDB always equal to custom_schema_name\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/get_custom_name/generate_schema_name.yml", "arguments": [{"name": "custom_schema_name", "type": "str", "description": "The custom schema name specified for a model, default ''"}, {"name": "node", "type": "ref", "description": "The node the schema is being generated for"}], "created_at": 1746557619.8427005, "supported_languages": null}, "macro.zdp_dbt_utils.default__generate_schema_name": {"name": "default__generate_schema_name", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/get_custom_name/generate_schema_name.sql", "original_file_path": "macros/get_custom_name/generate_schema_name.sql", "unique_id": "macro.zdp_dbt_utils.default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name=none, node=none) -%}\n\n    {%- set default_schema = target.schema | trim -%}\n\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n           \n    {%- else -%}\n            \n        {{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1522126, "supported_languages": null}, "macro.zdp_dbt_utils.test_expect_table_columns_to_match_yaml_columns_list": {"name": "test_expect_table_columns_to_match_yaml_columns_list", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/expect_table_columns_to_match_yaml_columns_list/expect_table_columns_to_match_yaml_columns_list.sql", "original_file_path": "macros/expect_table_columns_to_match_yaml_columns_list/expect_table_columns_to_match_yaml_columns_list.sql", "unique_id": "macro.zdp_dbt_utils.test_expect_table_columns_to_match_yaml_columns_list", "macro_sql": "{% test expect_table_columns_to_match_yaml_columns_list(model, exclude_zdp_meta_columns = True) %}\n    {{ adapter.dispatch('test_expect_table_columns_to_match_yaml_columns_list', 'zdp_dbt_utils') (model, exclude_zdp_meta_columns) }}\n{% endtest %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.default__test_expect_table_columns_to_match_yaml_columns_list"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.152992, "supported_languages": null}, "macro.zdp_dbt_utils.default__test_expect_table_columns_to_match_yaml_columns_list": {"name": "default__test_expect_table_columns_to_match_yaml_columns_list", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/expect_table_columns_to_match_yaml_columns_list/expect_table_columns_to_match_yaml_columns_list.sql", "original_file_path": "macros/expect_table_columns_to_match_yaml_columns_list/expect_table_columns_to_match_yaml_columns_list.sql", "unique_id": "macro.zdp_dbt_utils.default__test_expect_table_columns_to_match_yaml_columns_list", "macro_sql": "{% macro default__test_expect_table_columns_to_match_yaml_columns_list(model, exclude_zdp_meta_columns) %}\n    {% if execute -%}\n        {# get columns name and type as declared in the yaml file for the current model #}\n        {%- set models = [] -%}\n        {%- for node in graph.nodes.values() | selectattr(\"resource_type\", \"equalto\", \"model\") | selectattr(\"name\", \"equalto\", model.identifier) -%}\n            {%- do models.append(node) -%}\n        {%- endfor -%}\n\n        {%- if models|count != 1 -%}\n            {{ exceptions.raise_compiler_error(model.identifier ~ \" not found in graph\") }}\n        {%- endif -%}\n\n        {%- set raw_model_columns = models[0].columns -%}\n        {%- set expected_columns = [] -%}\n        {%- for column_name, column_properties in models[0].columns.items() -%}\n            {%- set dtype = column_properties.data_type -%}\n            {%- if column_properties.data_type in ('text', 'string') -%}\n                {%- set dtype = 'varchar' -%}\n            {%- endif -%}\n            {%- if (not exclude_zdp_meta_columns) or (not (column_name|lower).startswith(\"zdp_meta_\")) -%}\n                {%- do expected_columns.append('(\\'' + column_name|lower + '\\',\\'' + dtype|lower + '\\')') -%}\n            {%- endif -%}\n        {%- endfor -%}\n\n        {%- set expected_columns_query = 'select * from (VALUES ' + expected_columns|join(', ') + ') as t(name, dtype)' -%}\n\n        {# get columns name and type as created when the model is run #}\n        {%- set effective_columns = [] -%}\n\n        {%- for column in adapter.get_columns_in_relation(ref(model.name)) -%}\n            {%- if (not exclude_zdp_meta_columns) or (not (column.column|lower).startswith(\"zdp_meta_\")) -%}\n                {%- do effective_columns.append('(\\'' + column.column|lower + '\\',\\'' + column.dtype|lower + '\\')') -%}\n            {%- endif -%}\n        {%- endfor -%}\n\n        {%- set effective_columns_query = 'select * from (VALUES ' + effective_columns|join(', ') + ') as t(name, dtype)' -%}\n\n        {# get columns for which the declaration does not match the reality #}\n        select\n            tab0.name as eff_name,\n            tab0.dtype as eff_dtype,\n            tab1.name as expect_name,\n            tab1.dtype as expect_dtype,\n        from (\n        ({{ effective_columns_query }}) as tab0\n        full outer join\n        ({{ expected_columns_query }}) as tab1\n        on tab0.name = tab1.name )\n        where\n            eff_name is null or expect_name is null\n            or eff_name != expect_name\n            or eff_dtype != expect_dtype\n\n    {% endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1552439, "supported_languages": null}, "macro.zdp_dbt_utils.is_number_present": {"name": "is_number_present", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/is_number_present/is_number_present.sql", "original_file_path": "macros/is_number_present/is_number_present.sql", "unique_id": "macro.zdp_dbt_utils.is_number_present", "macro_sql": "{% macro is_number_present( col ) -%}\n\n    {{ col }} is not null and {{ col }} != 0\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "Check if a column is not empty or not null\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/is_number_present/is_number_present.yml", "arguments": [{"name": "col", "type": "number", "description": "Name of the column to check"}], "created_at": 1746557619.8442664, "supported_languages": null}, "macro.zdp_dbt_utils.weekday_full_name": {"name": "weekday_full_name", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/weekday_full_name/weekday_full_name.sql", "original_file_path": "macros/weekday_full_name/weekday_full_name.sql", "unique_id": "macro.zdp_dbt_utils.weekday_full_name", "macro_sql": "{% macro weekday_full_name( col_name ) -%}\n\n    decode(\n        extract( 'dayofweek_iso', {{ col_name }} ),\n        1, 'Monday',\n        2, 'Tuesday',\n        3, 'Wednesday',\n        4, 'Thursday',\n        5, 'Friday',\n        6, 'Saturday',\n        7, 'Sunday'\n        )\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "This macro provides the day full name from a timestamp column\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/weekday_full_name/weekday_full_name.yml", "arguments": [{"name": "col", "type": "string", "description": "Name of the timestamp column"}], "created_at": 1746557619.84478, "supported_languages": null}, "macro.zdp_dbt_utils.create_stored_procedure_statement": {"name": "create_stored_procedure_statement", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/materializations/stored_procedures/create_stored_procedure_statement.sql", "original_file_path": "macros/materializations/stored_procedures/create_stored_procedure_statement.sql", "unique_id": "macro.zdp_dbt_utils.create_stored_procedure_statement", "macro_sql": "{%- macro create_stored_procedure_statement(relation, preferred_language, parameters, return_type, execute_as, sql) -%}\n\n    {{ log(\"Creating Stored Procedure \" ~ relation) }}\n\ncreate or replace procedure {{ relation.include(database=(not temporary), schema=(not temporary)) }}({{ parameters }})\nreturns {{ return_type }}\nlanguage {{ preferred_language }}\nexecute as {{ execute_as }}\nas\n$$\n    {{ sql }}\n$$\n;\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "Create a Snowflake Stored Procedure for a given transaction\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/materializations/stored_procedures/stored_procedures.yml", "arguments": [{"name": "materialized", "type": "str", "description": "Specifies the type of materialisation to run. Default 'stored_procedure'"}, {"name": "preferred_language", "type": "str", "description": "Describes the language the stored procedure is written in, default 'SQL'"}, {"name": "override_name", "type": "str", "description": "The name of the stored procedure if this is an overrider stored procedure."}, {"name": "parameters", "type": "str", "description": "The parameters that needs to be passed when calling the stored procedure"}, {"name": "execute_as", "type": "str", "description": "A stored procedure runs with either the caller's rights or the owner's rights. Takes values: CALLER or OWNER"}, {"name": "return_type", "type": "str", "description": "Return type of the stored procedure."}], "created_at": 1746557619.846976, "supported_languages": null}, "macro.zdp_dbt_utils.materialization_stored_procedure_snowflake": {"name": "materialization_stored_procedure_snowflake", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/materializations/stored_procedures/snowflake__stored_procedure.sql", "original_file_path": "macros/materializations/stored_procedures/snowflake__stored_procedure.sql", "unique_id": "macro.zdp_dbt_utils.materialization_stored_procedure_snowflake", "macro_sql": "{%- materialization stored_procedure, adapter='snowflake' -%}\n  {%- set preferred_language = config.get('preferred_language', default=SQL) -%}\n  {%- set parameters = config.get('parameters', default={}) -%}\n  {%- set identifier = config.get('override_name', default=model['alias'] ) -%}\n  {%- set execute_as = config.get('execute_as', default='owner' ) -%}\n  {%- set return_type = config.get('return_type', default='varchar' ) -%}\n\n  {%- set target_relation = api.Relation.create( identifier=identifier, schema=schema, database=database) -%}\n\n  {%- set has_transactional_hooks = (hooks | selectattr('transaction', 'equalto', True) | list | length) > 0 %}\n\n  -- setup\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- BEGIN happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n      --------------------------------------------------------------------------------------------------------------------\n  -- build model\n\n  {% call statement('main') -%}\n    {{ zdp_dbt_utils.create_stored_procedure_statement(target_relation, preferred_language, parameters, return_type, execute_as, sql) }}\n  {%- endcall %}\n\n      --------------------------------------------------------------------------------------------------------------------\n  -- build model\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  -- return\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.zdp_dbt_utils.create_stored_procedure_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1581657, "supported_languages": ["sql"]}, "macro.zdp_dbt_utils.create_tmp_csv_table": {"name": "create_tmp_csv_table", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.zdp_dbt_utils.create_tmp_csv_table", "macro_sql": "{% macro create_tmp_csv_table(model, agate_table, source_relation) %}\n    {%- set column_override = model['config'].get('column_types', {}) -%}\n    {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {%- set tmp_relation = make_temp_relation(source_relation).incorporate(type=\"table\") -%}\n\n    {% set sql %}\n        create or replace table {{ tmp_relation.render() }} (\n            {%- for col_name in agate_table.column_names -%}\n                {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n                {%- set type = column_override.get(col_name, inferred_type) -%}\n                {%- set column_name = (col_name | string) -%}\n                {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n            {%- endfor -%}\n        )\n    {% endset %}\n\n    {% call statement('_') -%}\n        {{ sql }}\n    {%- endcall %}\n\n    {{ return(tmp_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1599011, "supported_languages": null}, "macro.zdp_dbt_utils.recreate_csv_table": {"name": "recreate_csv_table", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.zdp_dbt_utils.recreate_csv_table", "macro_sql": "{% macro recreate_csv_table(model, agate_table, source_relation) %}\n    {%- set existing_relation = load_relation(source_relation) -%}\n    {%- set tmp_relation = zdp_dbt_utils.create_tmp_csv_table(model, agate_table, source_relation) -%}\n\n    {% if execute %}\n        {% set tags = zdp_dbt_utils._get_tags(existing_relation) %}\n        {% set columns_mapping = zdp_dbt_utils._get_columns_mapping(existing_relation, tmp_relation) %}\n        {% set columns_ddl = zdp_dbt_utils._get_columns_ddl(columns_mapping, tags) %}\n        {% set table_tags_ddl = zdp_dbt_utils._get_tags_ddl(tags) %}\n        {% set table_info = zdp_dbt_utils._get_table_information(existing_relation) %}\n        {% set table_comment_ddl = zdp_dbt_utils._get_table_comment_ddl(table_info.get('comment')) %}\n    {% endif %}\n\n    {% set sql %}\n        create or replace table {{ this.render() }} (\n            {{ columns_ddl }}\n        )\n        {{ table_tags_ddl }}\n        {{ table_comment_ddl }}\n    {% endset %}\n\n    {% call statement('_') -%}\n        {{ sql }}\n    {%- endcall %}\n\n    {% do drop_relation_if_exists(tmp_relation) %}\n\n    {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_relation", "macro.zdp_dbt_utils.create_tmp_csv_table", "macro.zdp_dbt_utils._get_tags", "macro.zdp_dbt_utils._get_columns_mapping", "macro.zdp_dbt_utils._get_columns_ddl", "macro.zdp_dbt_utils._get_tags_ddl", "macro.zdp_dbt_utils._get_table_information", "macro.zdp_dbt_utils._get_table_comment_ddl", "macro.dbt.statement", "macro.dbt.drop_relation_if_exists"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.161384, "supported_languages": null}, "macro.zdp_dbt_utils.default__reset_csv_table": {"name": "default__reset_csv_table", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.zdp_dbt_utils.default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {% set sql = zdp_dbt_utils.recreate_csv_table(model, agate_table, old_relation) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation.render() %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.recreate_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.161991, "supported_languages": null}, "macro.zdp_dbt_utils.get_incremental_truncate_insert_sql": {"name": "get_incremental_truncate_insert_sql", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/materializations/truncate_insert/incremental_truncate_insert.sql", "original_file_path": "macros/materializations/truncate_insert/incremental_truncate_insert.sql", "unique_id": "macro.zdp_dbt_utils.get_incremental_truncate_insert_sql", "macro_sql": "{% macro get_incremental_truncate_insert_sql(arg_dict) -%}\n    {% set dml = zdp_dbt_utils.get_truncate_insert_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"]) %}\n    {% do return(snowflake_dml_explicit_transaction(dml)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.get_truncate_insert_sql", "macro.dbt_snowflake.snowflake_dml_explicit_transaction"]}, "description": "Custom strategy to generate incremental tuncate+insert SQL, developed to preserve the metadata on the table. Can be used insted of table materialization. This strategy is not truely incremental, as it truncates the table before inserting the new data.", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/materializations/truncate_insert/incremental_truncate_insert.yml", "arguments": [], "created_at": 1746557619.8474627, "supported_languages": null}, "macro.zdp_dbt_utils.get_truncate_insert_sql": {"name": "get_truncate_insert_sql", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/materializations/truncate_insert/incremental_truncate_insert.sql", "original_file_path": "macros/materializations/truncate_insert/incremental_truncate_insert.sql", "unique_id": "macro.zdp_dbt_utils.get_truncate_insert_sql", "macro_sql": "{% macro get_truncate_insert_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none }}\n\n    insert overwrite into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1631649, "supported_languages": null}, "macro.zdp_dbt_utils.snowflake_create_java_user_defined_functions_statement": {"name": "snowflake_create_java_user_defined_functions_statement", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/materializations/used_defined_functions/create_java_user_defined_functions_statement.sql", "original_file_path": "macros/materializations/used_defined_functions/create_java_user_defined_functions_statement.sql", "unique_id": "macro.zdp_dbt_utils.snowflake_create_java_user_defined_functions_statement", "macro_sql": "{%- macro snowflake_create_java_user_defined_functions_statement(relation, is_secure, copy_grants, immutable, parameters, return_type, runtime_version, packages, external_access_integrations, secrets, handler_name, imports, target_path, null_input_behavior, statement) -%}\n\n{% if is_secure  %}\ncreate or replace secure function {{ relation.include(database=(not temporary), schema=(not temporary)) }}({{ parameters }})\n{% else %}\ncreate or replace function {{ relation.include(database=(not temporary), schema=(not temporary)) }}({{ parameters }})\n{% endif %}\n{% if copy_grants %}\n    copy grants\n{% endif %}\n    returns {{ return_type }}\n    language java\n    {{ null_input_behavior }}\n{% if immutable -%}\n       immutable\n{%- else %}\n    volatile\n{%- endif %}\n{% if runtime_version %}\n    runtime_version = '{{ runtime_version }}'\n{% endif %}\n{%- if imports %}\n    imports = ('{{ imports|join('\\', \\'') }}')\n{%- endif %}\n{% if packages -%}\n    packages = ('{{ packages|join('\\', \\'') }}')\n{%- endif %}\n    handler = '{{ handler_name }}'\n{%- if external_access_integrations %}\n    external_access_integrations = ({{ external_access_integrations|join(', ') }})\n{%- endif %}\n{% if secrets %}\n    secrets = ({{ secrets|join(', ') }})\n{%- endif -%}\n{% if target_path %}\n    target_path = '{{ target_path }}'\n{%- endif %}\nas\n\n$$\n {{ statement }}\n$$;\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.165003, "supported_languages": null}, "macro.zdp_dbt_utils.snowflake_create_python_user_defined_functions_statement": {"name": "snowflake_create_python_user_defined_functions_statement", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/materializations/used_defined_functions/create_python_user_defined_functions_statement.sql", "original_file_path": "macros/materializations/used_defined_functions/create_python_user_defined_functions_statement.sql", "unique_id": "macro.zdp_dbt_utils.snowflake_create_python_user_defined_functions_statement", "macro_sql": "{%- macro snowflake_create_python_user_defined_functions_statement(relation, is_secure, copy_grants, immutable, parameters, return_type, runtime_version, packages, external_access_integrations, secrets, handler_name, imports, null_input_behavior, statement) -%}\n\n{% if is_secure  %}\ncreate or replace secure function {{ relation.include(database=(not temporary), schema=(not temporary)) }}({{ parameters }})\n{% else %}\ncreate or replace function {{ relation.include(database=(not temporary), schema=(not temporary)) }}({{ parameters }})\n{% endif %}\n{% if copy_grants %}\n    copy grants\n{% endif %}\n    returns {{ return_type }}\n    language python\n    {{ null_input_behavior }}\n{% if immutable %}\n    immutable\n{% else %}\n    volatile\n{%- endif %}\n{% if runtime_version %}\n    runtime_version = '{{ runtime_version }}'\n{% endif %}\n{% if imports -%}\n\timports = ('{{ imports|join('\\', \\'') }}')\n{%- endif %}\n{% if packages -%}\n    packages = ('{{ packages|join('\\', \\'') }}')\n{%- endif %}\n\thandler = '{{ handler_name }}'\n{% if external_access_integrations %}\n\texternal_access_integrations = ({{ external_access_integrations|join(', ') }})\n{%- endif %}\n{% if secrets %}\n\tsecrets = ({{ secrets|join(', ') }})\n{%- endif %}\nas\n\n$$\n {{ statement }}\n$$;\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1666934, "supported_languages": null}, "macro.zdp_dbt_utils.materialization_user_defined_function_snowflake": {"name": "materialization_user_defined_function_snowflake", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/materializations/used_defined_functions/user_defined_function.sql", "original_file_path": "macros/materializations/used_defined_functions/user_defined_function.sql", "unique_id": "macro.zdp_dbt_utils.materialization_user_defined_function_snowflake", "macro_sql": "\n{%- materialization user_defined_function, adapter='snowflake', supported_languages=['sql'] -%}\n  {%- set preferred_language = config.get('preferred_language', default='SQL') -%}\n  /* common parameters */\n  {%- set parameters = config.get('parameters', default='') -%}\n  {%- set is_secure = config.get('is_secure', default=false) -%}\n  {%- set immutable = config.get('immutable', default=false) -%}\n  {%- set return_type = config.get('return_type', default='varchar' ) -%}\n  {%- set copy_grants = config.get('copy_grants', False) -%}\n\n  /* end common parameters */\n  /* start external functions */\n  {%- set is_external = config.get('is_external', default=false) -%}\n  {%- set api_integration = config.get('api_integration_dev', default='unknown') -%}\n  {%- set api_uri = config.get('api_uri_dev', default='unknown') -%}\n  {%- if target.name == 'prod' -%}\n    {%- set api_uri = config.get('api_uri_prod', default='unknown') -%}\n    {%- set api_integration = config.get('api_integration_prod', default='unknown') -%}\n  {%- endif -%}\n  /* end external functions */\n\n  /* java only properaties*/\n  {%- set target_path = config.get('target_path', default=none) -%}\n  /* end java*/\n  /* sql only properties*/\n  {%- set memoizable = config.get('memoizable', default=none) -%}\n  /* end sql*/\n  /* java / python*/\n  {%- set runtime_version = config.get('runtime_version', default=none) -%}\n  {%- set packages = config.get('packages', default=none) -%}\n  {%- set external_access_integrations = config.get('external_access_integrations', default=[]) %}\n  {%- set secrets = config.get('secrets', default=none) %}\n  {%- set handler_name = config.get('handler_name', default=none) -%}\n  {%- set imports = config.get('imports', default=none) -%}\n  /* end java / python*/\n\n  {%- set null_input_behavior = config.get('null_input_behavior', 'called on null input')%}\n  {%- set identifier = config.get('override_name', default=model['alias'] ) -%}\n  {%- set target_relation = api.Relation.create( identifier=identifier, schema=schema, database=database) -%}\n  {%- set has_transactional_hooks = (hooks | selectattr('transaction', 'equalto', True) | list | length) > 0 %}\n\n  {% if external_access_integrations|length == 0 %}\n    {% set external_access_integrations = none %}\n  {% endif %}\n\n  -- setup\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- BEGIN happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n      --------------------------------------------------------------------------------------------------------------------\n  -- build model\n\n  {% call statement('main') -%}\n    {% if is_external %}\n      {{ zdp_dbt_utils.snowflake_create_external_user_defined_functions_statement(target_relation, is_secure, immutable, parameters, return_type, null_input_behavior, api_integration, api_uri) }}\n    {% elif preferred_language|upper == 'JAVA' %}\n       {{ zdp_dbt_utils.snowflake_create_java_user_defined_functions_statement(target_relation, is_secure, copy_grants, immutable, parameters, return_type, runtime_version, packages, external_access_integrations, secrets, handler_name, imports, target_path, null_input_behavior, sql) }}\n    {% elif preferred_language|upper == 'PYTHON' %}\n        {{ zdp_dbt_utils.snowflake_create_python_user_defined_functions_statement(target_relation, is_secure, copy_grants, immutable, parameters, return_type, runtime_version, packages, external_access_integrations, secrets, handler_name, imports, null_input_behavior, sql) }}\n    {% elif preferred_language|upper == 'JAVASCRIPT' %}\n        {{ zdp_dbt_utils.snowflake_create_javascript_user_defined_functions_statement(target_relation, is_secure, copy_grants, immutable, parameters, return_type, null_input_behavior, sql) }}\n    {% else %}\n        {{ zdp_dbt_utils.snowflake_create_sql_user_defined_functions_statement(target_relation, is_secure, copy_grants, immutable, parameters, return_type, memoizable, sql) }}\n    {% endif %}\n  {%- endcall %}\n\n      --------------------------------------------------------------------------------------------------------------------\n  -- build model\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  -- return\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.zdp_dbt_utils.snowflake_create_external_user_defined_functions_statement", "macro.zdp_dbt_utils.snowflake_create_java_user_defined_functions_statement", "macro.zdp_dbt_utils.snowflake_create_python_user_defined_functions_statement", "macro.zdp_dbt_utils.snowflake_create_javascript_user_defined_functions_statement", "macro.zdp_dbt_utils.snowflake_create_sql_user_defined_functions_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1718564, "supported_languages": ["sql"]}, "macro.zdp_dbt_utils.snowflake_create_javascript_user_defined_functions_statement": {"name": "snowflake_create_javascript_user_defined_functions_statement", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/materializations/used_defined_functions/create_javascript_user_defined_functions_statement.sql", "original_file_path": "macros/materializations/used_defined_functions/create_javascript_user_defined_functions_statement.sql", "unique_id": "macro.zdp_dbt_utils.snowflake_create_javascript_user_defined_functions_statement", "macro_sql": "{%- macro snowflake_create_javascript_user_defined_functions_statement(relation, is_secure, copy_grants, immutable, parameters, return_type, null_input_behavior, statement) -%}\n\n{% if is_secure  %}\ncreate or replace secure function {{ relation.include(database=(not temporary), schema=(not temporary)) }}({{ parameters }})\n{% else %}\ncreate or replace function {{ relation.include(database=(not temporary), schema=(not temporary)) }}({{ parameters }})\n{% endif %}\n{% if copy_grants %}\n    copy grants\n{% endif %}\n    returns {{ return_type }}\n    language javascript\n    {{ null_input_behavior }}\n{% if immutable %}\n    immutable\n{% else %}\n    volatile\n{%- endif %}\nas\n\n$$\n {{ statement }}\n$$;\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1729116, "supported_languages": null}, "macro.zdp_dbt_utils.snowflake_create_external_user_defined_functions_statement": {"name": "snowflake_create_external_user_defined_functions_statement", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/materializations/used_defined_functions/create_external_user_defined_functions_statement.sql", "original_file_path": "macros/materializations/used_defined_functions/create_external_user_defined_functions_statement.sql", "unique_id": "macro.zdp_dbt_utils.snowflake_create_external_user_defined_functions_statement", "macro_sql": "{%- macro snowflake_create_external_user_defined_functions_statement(relation, is_secure, immutable, parameters, return_type, null_input_behavior, api_integration, api_uri) -%}\n\n{% if is_secure  %}\ncreate secure external function if not exists {{ relation.include(database=(not temporary), schema=(not temporary)) }}({{ parameters }})\n{% else %}\ncreate  external function if not exists {{ relation.include(database=(not temporary), schema=(not temporary)) }}({{ parameters }})\n{% endif %}\n    returns {{ return_type }}\n    {{ null_input_behavior }}\n{% if immutable %}\n    immutable\n{% else -%}\n    volatile\n{% endif %}\napi_integration = {{ api_integration }}\nas '{{ api_uri }}';\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.173841, "supported_languages": null}, "macro.zdp_dbt_utils.snowflake_create_sql_user_defined_functions_statement": {"name": "snowflake_create_sql_user_defined_functions_statement", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/materializations/used_defined_functions/create_sql_uesr_defined_functions_statement.sql", "original_file_path": "macros/materializations/used_defined_functions/create_sql_uesr_defined_functions_statement.sql", "unique_id": "macro.zdp_dbt_utils.snowflake_create_sql_user_defined_functions_statement", "macro_sql": "{%- macro snowflake_create_sql_user_defined_functions_statement(relation, is_secure, copy_grants, immutable, parameters, return_type, memoizable, statement) -%}\n\n{% if is_secure  %}\ncreate or replace secure function {{ relation.include(database=(not temporary), schema=(not temporary)) }}({{ parameters }})\n{% else %}\ncreate or replace function {{ relation.include(database=(not temporary), schema=(not temporary)) }}({{ parameters }})\n{% endif %}\n{% if copy_grants %}\n    copy grants\n{% endif %}\n    returns {{ return_type }}\n{% if immutable %}\n    immutable\n{% else %}\n    volatile\n{%- endif %}\n{% if memoizable %}\n    memoizable\n{%- endif %}\nas\n\n$$\n {{ statement }}\n$$;\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1748562, "supported_languages": null}, "macro.zdp_dbt_utils.external_stage": {"name": "external_stage", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/materializations/s3_external_stage_data/s3_external_stage.sql", "original_file_path": "macros/materializations/s3_external_stage_data/s3_external_stage.sql", "unique_id": "macro.zdp_dbt_utils.external_stage", "macro_sql": "{%- macro external_stage(path='') -%}\n    @__STAGE_TOKEN__{{ path }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "Copy data from S3 External Stage into Snowflake table. \n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/materializations/s3_external_stage_data/s3_external_stage.yml", "arguments": [{"name": "materialized", "type": "str", "description": "Specifies the type of materialisation to run. Default 's3_external_stage'"}, {"name": "database", "type": "str", "description": "Name of the database"}, {"name": "schema", "type": "str", "description": "Name of the schema"}, {"name": "stage_name", "type": "str", "description": "Name of the External Stage"}, {"name": "stage_file_format", "type": "str", "description": "Snowflake supported file format. Default 'CSV'"}, {"name": "stage_file_pattern", "type": "str", "description": "File to be filtered from stage. Default '.*data.*[.]csv'"}, {"name": "run_date", "type": "str", "description": "Custom date to load data. Date format: (yyyymmdd)"}, {"name": "pre_hook", "type": "str", "description": "Create Statement for a new table. Truncate table if exist."}, {"name": "fail_when_no_files", "type": null, "description": "Flag to check if model should fail if file does not exists. Default 'True'"}], "created_at": 1746557619.850493, "supported_languages": null}, "macro.zdp_dbt_utils.materialization_s3_external_stage_snowflake": {"name": "materialization_s3_external_stage_snowflake", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/materializations/s3_external_stage_data/s3_external_stage.sql", "original_file_path": "macros/materializations/s3_external_stage_data/s3_external_stage.sql", "unique_id": "macro.zdp_dbt_utils.materialization_s3_external_stage_snowflake", "macro_sql": "{%- materialization s3_external_stage, adapter='snowflake' -%}\n\n    {%- set identifier = model['alias'] -%}\n    {%- set stage_name = config.get('stage_name') -%}\n    {%- set stage_file_format = config.get('stage_file_format', default='(type = CSV)') -%}\n    {%- set stage_file_pattern = config.get('stage_file_pattern', default='.*data.*[.]csv') -%}\n    {%- set custom_date = config.get('run_date', default=none) -%}\n    {%- set fail_when_no_files = config.get('fail_when_no_files', default=True)-%}\n    \n    {% if custom_date == none %}\n        {# Setting current_date() for custom_date #}\n        {% set custom_date = run_started_at.strftime(\"%Y%m%d\") %}\n        {{ log(\"Run Date: \" ~ custom_date, info=False) }}\n    {% endif %}\n    {% set regex_pattern = '.*' ~ custom_date ~ '.*_' ~ stage_file_pattern %}\n\n    {%- set source_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n    {%- set target_relation = api.Relation.create(schema=schema, identifier=identifier, type='table') -%}\n\n    {# `BEGIN`: Check if files exists in S3 Bucket #}\n    {{ log(\"Check if files exists in S3 Bucket\", info=False)}}\n    {%- call statement('file_exists_in_s3', fetch_result=True) -%}\n        {% set file_exists_sql = \"LIST @\" ~ stage_name ~ \" PATTERN = '\" ~ regex_pattern ~ \"'\"%}\n        {{ log(\"Checking if files exist: \" ~ file_exists_sql, info=False) }}\n        {{ file_exists_sql }}\n    {%- endcall -%}\n\n    {% if execute %}\n        {%- set file_exists = load_result('file_exists_in_s3') -%}\n    {% endif %}\n\n    {%- set full_refresh_mode = (flags.FULL_REFRESH == True) -%}\n    {%- set exists_as_table = (source_relation is not none and source_relation.is_table) -%}\n    {%- set should_drop = (full_refresh_mode or not exists_as_table) -%}\n    {{ log(\"Full Refresh Mode: \" ~ full_refresh_mode, info=False)}}\n    {{ log(\"Exists as table: \" ~ exists_as_table, info=False)}}\n\n    {% if file_exists['data']|length > 0 %}\n        {{ log(\"File exists in S3 Bucket for \" ~ identifier ~ \" model.\", info=True) }}\n\n        {# `BEGIN`: Check if the current table exists or model is running in full refresh mode. #}\n        {% if should_drop %}\n            {{ log(\"Creating a new table \" ~ identifier ~ \".\", info=False) }}\n            {{ run_hooks(pre_hooks, inside_transaction=True) }}\n        {% else %}\n            {{ log(\"Table \" ~ identifier ~ \" exist. Truncating existing table...\", info=False) }}\n            {{ run_hooks([{'sql': 'truncate table {{ this }}', 'transaction': True}], inside_transaction=True) }}\n        {% endif %}\n        {# `END`: Check if the current table exists or model is running in full refresh mode. #}\n\n    {% else %}\n        {{ log(\"Fail when no files: \" ~ fail_when_no_files, info=False) }}\n        {% if fail_when_no_files == True %}\n            {{ exceptions.raise_compiler_error(\n                    \"No file matched with the existing pattern. Expected a config:\\n stage_file_pattern='[data].[csv|json]\\n stage_file_format='[CSV|JSON]\\n run_date='[yyyymmdd|yyyy-mm-dd]''\"\n                )\n            }}\n        {% else %}\n            {% if should_drop %}\n                {{ log(\"Creating a new table \" ~ identifier ~ \".\", info=False) }}\n                {{ run_hooks(pre_hooks, inside_transaction=True) }}\n            {% endif %}\n            {% do exceptions.warn(\"[\\033[93mWARNING\\x1b[0m]: \\033[93m\"~ identifier ~\"\\x1b[0m No file found for \\033[93m\" ~ custom_date ~ \"\\x1b[0m.\") %}\n        {% endif %}\n    {% endif %}\n    {# `END`: Check if files exists in S3 Bucket #}\n\n    {# Perform the main load operation using COPY INTO #}\n    {%- call statement('main', fetch_result=True) -%}\n        {% set sql_statement = sql | replace(\n            '__STAGE_TOKEN__',\n            stage_name ~ \" (file_format=> '\" ~ stage_file_format ~ \"' , pattern=>'\"~ regex_pattern ~\"')\"\n            )\n        %}\n        {{ log(\"Data loading SQL Statement:\\n\\n\" ~ sql_statement ~ \"\\n\", info=False) }}\n        -- Run SQL statement\n        {{ sql_statement }}\n    {%- endcall -%}\n\n    {# Perform validation of load operation by checking response of `main` statement #}\n    {% if execute %}\n\n        {%- set query_result = load_result('main') -%}\n        {{ log(query_result, info=False) }}\n        \n        {{ log(\"Query Id: \" ~ query_result['response']['query_id'], info=False) }}\n\n        {% if query_result['data'][0][0] == 'Copy executed with 0 files processed.' and fail_when_no_files == True %}\n            {{ log(\"Data: \" ~ query_result['data'], info=True) }}\n            {{ exceptions.raise_compiler_error(\"No file processed! Please check the S3 Storage...\") }}\n        {% endif %}\n\n    {% endif %}\n\n    {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n    {# `END`: Finalize the changes and run the post hook if required. #}\n    {{ adapter.commit() }}\n\n    {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n    {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1810844, "supported_languages": ["sql"]}, "macro.zdp_dbt_utils.materialization_source_clone_snowflake": {"name": "materialization_source_clone_snowflake", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/materializations/source_clone/source_clone.sql", "original_file_path": "macros/materializations/source_clone/source_clone.sql", "unique_id": "macro.zdp_dbt_utils.materialization_source_clone_snowflake", "macro_sql": "{% materialization source_clone, adapter='snowflake', supported_languages=['sql'] %}\n\n    {% set source_relation = load_relation(source(config.get('source_name'), config.get('source_table'))) %}\n\n    {% if source_relation is none %}\n        {% do exceptions.raise_compiler_error(\"Source relation source(\" ~ config.get('source_name') ~ \"), (\" ~ config.get('source_table') ~ \") doesn't exist.\") %}\n    {% endif %}\n\n\n    {% set existing_relation = load_relation(this) %}\n    {% set target_relation = this %}\n\n    {% if existing_relation is not none and existing_relation.is_view %}\n        {{ log(\"Dropping relation \" ~ target_relation ~ \" because it is a view and source clone must be a table.\") }}\n        {% do adapter.drop_relation(existing_relation) %}\n    {% endif %}\n\n\n    {% call statement('main', language='sql') -%}\n        create or replace\n            {{ \"transient\" if config.get(\"transient\", true) }}\n            table {{ target_relation }}\n            clone {{ source_relation }}\n            {{ \"copy grants\" if config.get(\"copy_grants\", false) }}\n    {%- endcall %}\n\n    {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1828487, "supported_languages": ["sql"]}, "macro.zdp_dbt_utils.materialization_task_snowflake": {"name": "materialization_task_snowflake", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/materializations/tasks/snowflake__task.sql", "original_file_path": "macros/materializations/tasks/snowflake__task.sql", "unique_id": "macro.zdp_dbt_utils.materialization_task_snowflake", "macro_sql": "\n\n{%- materialization task, adapter='snowflake' -%}\n\n  {%- set warehouse_name = config.get('warehouse_name') -%}\n  {%- set task_schedule = config.get('task_schedule') -%}\n  {%- set parent_task_name = config.get('parent_task_name') -%}\n  {%- set identifier = config.get('override_name', default=model['alias'] ) -%}\n\n  {%- set target_relation = api.Relation.create( identifier=identifier, schema=schema, database=database) -%}\n\n  {% if parent_task_name is not none %}\n    {% set parent_task_relation = api.Relation.create(database=database, schema=schema, identifier=parent_task_name) %}\n  {% else %}\n    {% set parent_task_relation = none %} \n  {% endif %}\n\n  -- setup\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set build_sql = zdp_dbt_utils.snowflake_create_task_statement(target_relation, warehouse_name, task_schedule, parent_task_relation, sql) %}\n \n  {%- call statement('main') -%}\n    {{ build_sql }}\n  {%- endcall -%}\n\n  /* root task must be suspended when resuming child tasks \n     root task must be resumed after all child tasks have resumed*/\n  {% if parent_task_relation is not none %}\n      {% do zdp_dbt_utils.snowflake_resume_task_statement(target_relation) %}\n  {% endif %}   \n  \n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.zdp_dbt_utils.snowflake_create_task_statement", "macro.dbt.statement", "macro.zdp_dbt_utils.snowflake_resume_task_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1849098, "supported_languages": ["sql"]}, "macro.zdp_dbt_utils.snowflake_resume_task_statement": {"name": "snowflake_resume_task_statement", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/materializations/tasks/snowflake_resume_task_statement.sql", "original_file_path": "macros/materializations/tasks/snowflake_resume_task_statement.sql", "unique_id": "macro.zdp_dbt_utils.snowflake_resume_task_statement", "macro_sql": "{% macro snowflake_resume_task_statement(table_relation) -%}\n\n  {% call statement('resume_task') -%}\n    ALTER TASK {{ table_relation }} RESUME\n  {%- endcall %}\n  \n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": false, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/materializations/tasks/snowflake_resume_task_statement.yml", "arguments": [], "created_at": 1746557619.850991, "supported_languages": null}, "macro.zdp_dbt_utils.snowflake_create_task_statement": {"name": "snowflake_create_task_statement", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/materializations/tasks/snowflake_create_task_statement.sql", "original_file_path": "macros/materializations/tasks/snowflake_create_task_statement.sql", "unique_id": "macro.zdp_dbt_utils.snowflake_create_task_statement", "macro_sql": "{% macro snowflake_create_task_statement(target_relation, warehouse_name, task_schedule, parent_task_relation, sql) -%}\n\n    CREATE OR REPLACE TASK  {{ target_relation.include(database=(not temporary), schema=(not temporary)) }} \n\n        WAREHOUSE = '{{ warehouse_name }}'\n\n    {% if task_schedule is not none %}\n        SCHEDULE = '{{ task_schedule }}' \n    {% endif %}\n\n    {% if parent_task_relation is not none %}\n        AFTER {{ parent_task_relation.include(database=(not temporary), schema=(not temporary)) }}\n    {% endif %}   \n     \n    as\n        {{ sql }}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": false, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/materializations/tasks/snowflake_create_task_statement.yml", "arguments": [], "created_at": 1746557619.8514674, "supported_languages": null}, "macro.zdp_dbt_utils.snowflake_suspend_task_statement": {"name": "snowflake_suspend_task_statement", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/materializations/tasks/snowflake_suspend_task_statement.sql", "original_file_path": "macros/materializations/tasks/snowflake_suspend_task_statement.sql", "unique_id": "macro.zdp_dbt_utils.snowflake_suspend_task_statement", "macro_sql": "{% macro snowflake_suspend_task_statement(table_relation) -%}\n\n  {% call statement('suspend_task') -%}\n    ALTER TASK {{ table_relation }} SUSPEND\n  {%- endcall %}\n  \n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": false, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/materializations/tasks/snowflake_suspend_task_statement.yml", "arguments": [], "created_at": 1746557619.8519063, "supported_languages": null}, "macro.zdp_dbt_utils.snowflake__create_or_replace_clone": {"name": "snowflake__create_or_replace_clone", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/materializations/clone/clone.sql", "original_file_path": "macros/materializations/clone/clone.sql", "unique_id": "macro.zdp_dbt_utils.snowflake__create_or_replace_clone", "macro_sql": "{% macro snowflake__create_or_replace_clone(this_relation, defer_relation) %}\n    create or replace\n      {{ \"transient\" if config.get(\"transient\", true) }}\n      table {{ this_relation }}\n      clone {{ defer_relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1867077, "supported_languages": null}, "macro.zdp_dbt_utils.test_test_unique_partitions": {"name": "test_test_unique_partitions", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/generic_tests/test_unique_partitions.sql", "original_file_path": "macros/generic_tests/test_unique_partitions.sql", "unique_id": "macro.zdp_dbt_utils.test_test_unique_partitions", "macro_sql": "{% test test_unique_partitions(model, column_name, logical_run_date, partition_column='run_date', partition_type='day', offset_days=1) %}\n    select\n        {{ logical_run_date }},\n        {{ column_name }},\n        count(*)\n    from\n        {{ model }}\n    where\n        {{ partition_column }} = dateadd(\n            {{ partition_type }},\n            {{ offset_days | int }},\n            to_date('{{ logical_run_date }}', 'YYYY-MM-DD')\n        )\n        and {{ column_name }} is not null\n    group by\n        1, 2\n    having\n        count(*) > 1\n{% endtest %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1873043, "supported_languages": null}, "macro.zdp_dbt_utils.test_test_distinct_column_value_count_diff": {"name": "test_test_distinct_column_value_count_diff", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/generic_tests/test_distinct_column_value_count_diff.sql", "original_file_path": "macros/generic_tests/test_distinct_column_value_count_diff.sql", "unique_id": "macro.zdp_dbt_utils.test_test_distinct_column_value_count_diff", "macro_sql": "{% test test_distinct_column_value_count_diff(model, column_name, logical_run_date = var('logical_run_date'), date_column = 'run_date', date_diff = -1, operator = '<', where_clause = '1=1') %}\n\nwith counts as (\n    select\n        count(distinct case when {{ date_column }} = dateadd(day, {{ date_diff }}, cast('{{ logical_run_date }}' as date)) then {{ column_name }} end) as earlier_date_count,\n        count(distinct case when {{ date_column }} = cast('{{ logical_run_date }}' as date) then {{ column_name }} end) as later_date_count\n    from {{ model }}\n    where ({{ date_column }} = dateadd(day, {{ date_diff }}, cast('{{ logical_run_date }}' as date)) or {{ date_column }} = cast('{{ logical_run_date }}' as date))\n        and {{ where_clause }}\n)\n\nselect\n    earlier_date_count,\n    later_date_count,\n    'fail' as status\nfrom counts\nwhere earlier_date_count {{ operator }} later_date_count\n\n{% endtest %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1881368, "supported_languages": null}, "macro.zdp_dbt_utils.test_test_not_null_partitions": {"name": "test_test_not_null_partitions", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/generic_tests/test_not_null_partitions.sql", "original_file_path": "macros/generic_tests/test_not_null_partitions.sql", "unique_id": "macro.zdp_dbt_utils.test_test_not_null_partitions", "macro_sql": "{% test test_not_null_partitions(model, column_name, logical_run_date, partition_column='run_date', partition_type='day', offset_days=1) %}\n    select {{ column_name }}\n    from {{ model }}\n    where\n        {{ partition_column }} = dateadd(\n            {{ partition_type }},\n            {{ offset_days | int }},\n            to_date('{{ logical_run_date }}', 'YYYY-MM-DD')\n        )\n        and {{ column_name }} is null\n{% endtest %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.188685, "supported_languages": null}, "macro.zdp_dbt_utils.get_filtered_columns_in_relation": {"name": "get_filtered_columns_in_relation", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/get_filtered_columns_in_relation/get_filtered_columns_in_relation.sql", "original_file_path": "macros/get_filtered_columns_in_relation/get_filtered_columns_in_relation.sql", "unique_id": "macro.zdp_dbt_utils.get_filtered_columns_in_relation", "macro_sql": "{% macro get_filtered_columns_in_relation(from, except=[]) -%}\n    {%- do dbt_utils._is_relation(from, 'get_filtered_columns_in_relation') -%}\n    {%- do dbt_utils._is_ephemeral(from, 'get_filtered_columns_in_relation') -%}\n\n    {# -- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {{ return('') }}\n    {% endif %}\n\n    {%- set include_cols = [] %}\n    {%- set cols = adapter.get_columns_in_relation(from) -%}\n    {%- set except = except | map(\"lower\") | list %}\n    {%- for col in cols -%}\n        {%- if col.column|lower not in except -%}\n            {% do include_cols.append(adapter.quote(col.column)) %}\n        {%- endif %}\n    {%- endfor %}\n\n    {{ return(include_cols) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral"]}, "description": "Gets filtered columns in relation and surronds columns names with quotes for safe reference with snowflake reserved column names.  \n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/get_filtered_columns_in_relation/get_filtered_columns_in_relation.yml", "arguments": [{"name": "from", "type": "string", "description": "relation name"}, {"name": "except", "type": "list", "description": "list of excluded columns"}], "created_at": 1746557619.8532207, "supported_languages": null}, "macro.zdp_dbt_utils.measure_table_stats": {"name": "measure_table_stats", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/measure_table_stats/measure_table_stats.sql", "original_file_path": "macros/measure_table_stats/measure_table_stats.sql", "unique_id": "macro.zdp_dbt_utils.measure_table_stats", "macro_sql": "{% macro measure_table_stats() %}\n\n-- we always want it int the presentation layer\n-- label name will follow the git repo name + _stats for purpose of tracebility\n\nuse database {{ target.database if target.name in ('ci', 'local') else (target.name + '_presentation' if target.name == 'dev' else 'presentation') }};\n\n    CREATE SCHEMA IF NOT EXISTS {{ schema }};\n\nuse schema {{ schema }};\n\n    CREATE TABLE IF NOT EXISTS {{ project_name }}_stats (\n        table_name STRING,\n        metric_measure_time Timestamp_ntz,\n        records_count INTEGER,\n        max_zdp_meta_processed_timestamp timestamp_ntz,\n        is_incremental BOOLEAN\n    );\n\n    INSERT INTO {{ project_name }}_stats\n    SELECT\n        '{{ this }}' AS table_name,\n        current_timestamp::timestamp_ntz  AS metric_measure_time,\n        COUNT(*) AS records_count,\n        MAX(zdp_meta_processed_timestamp) AS max_zdp_meta_processed_timestamp,\n        {% if is_incremental() %}\n            TRUE\n        {% else %}\n            FALSE\n        {% endif %}\n        AS is_incremental\n    FROM {{ this }};\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.is_incremental"]}, "description": "This macro create if it doesn't exist and insert into it stats about the current model run. Should be called in a prehook only\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/measure_table_stats/measure_table_stats.yml", "arguments": [], "created_at": 1746557619.8537126, "supported_languages": null}, "macro.zdp_dbt_utils.varchar_to_boolean": {"name": "varchar_to_boolean", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/get_data_type/varchar_to_boolean.sql", "original_file_path": "macros/get_data_type/varchar_to_boolean.sql", "unique_id": "macro.zdp_dbt_utils.varchar_to_boolean", "macro_sql": "{% macro varchar_to_boolean(field_name , string_value) -%}\n    case when {{ field_name }} = '{{ string_value }}' then true else false end\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "Macro to convert data type from varchar to boolean\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/get_data_type/varchar_to_boolean.yml", "arguments": [{"name": "field_name", "type": "str", "description": "Coloumn which needs to be converted into boolean data type"}, {"name": "string_value", "type": "str", "description": "string value (eg: True, Y, Yes etc) for which we need to convert it to boolean data type"}], "created_at": 1746557619.8547592, "supported_languages": null}, "macro.zdp_dbt_utils.get_scd2_dbt_valid_to": {"name": "get_scd2_dbt_valid_to", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/get_scd2_dbt_valid_to/get_scd2_dbt_valid_to.sql", "original_file_path": "macros/get_scd2_dbt_valid_to/get_scd2_dbt_valid_to.sql", "unique_id": "macro.zdp_dbt_utils.get_scd2_dbt_valid_to", "macro_sql": "{%- macro get_scd2_dbt_valid_to() -%}\n\n    coalesce(timestampadd(nanosec, -1, dbt_valid_to), '{{ var(\"last_dbt_valid_to\") }}'::timestamp)\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "Produces a non-null value for dbt_valid_to field in scd2 tables so that it can be used in between comparison in sql statements.", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/get_scd2_dbt_valid_to/get_scd2_dbt_valid_to.yml", "arguments": [], "created_at": 1746557619.8552282, "supported_languages": null}, "macro.zdp_dbt_utils.get_zdp_metadata_extraction_columns_mapping": {"name": "get_zdp_metadata_extraction_columns_mapping", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/get_zdp_metadata_extraction_columns_mapping/get_zdp_metadata_extraction_columns_mapping.sql", "original_file_path": "macros/get_zdp_metadata_extraction_columns_mapping/get_zdp_metadata_extraction_columns_mapping.sql", "unique_id": "macro.zdp_dbt_utils.get_zdp_metadata_extraction_columns_mapping", "macro_sql": "{% macro get_zdp_metadata_extraction_columns_mapping(\n    source_db, source_table\n) -%}\n    {{ return (adapter.dispatch('get_zdp_metadata_extraction_columns_mapping','zdp_dbt_utils')(source_db, source_table)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.default__get_zdp_metadata_extraction_columns_mapping"]}, "description": "This macro builds the mapping of metadata columns from the formatted layer. This has been extracted to allowed the overiding of columns where needed when calling build_cleansed_from_formatted_pda_event_source in other projects\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/get_zdp_metadata_extraction_columns_mapping/get_zdp_metadata_extraction_columns_mapping.yml", "arguments": [{"name": "source_db", "type": "String", "description": "The name of the database the cdc table is created on"}, {"name": "source_table", "type": "String", "description": "The name of the source cdc table"}], "created_at": 1746557619.855769, "supported_languages": null}, "macro.zdp_dbt_utils.default__get_zdp_metadata_extraction_columns_mapping": {"name": "default__get_zdp_metadata_extraction_columns_mapping", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/get_zdp_metadata_extraction_columns_mapping/get_zdp_metadata_extraction_columns_mapping.sql", "original_file_path": "macros/get_zdp_metadata_extraction_columns_mapping/get_zdp_metadata_extraction_columns_mapping.sql", "unique_id": "macro.zdp_dbt_utils.default__get_zdp_metadata_extraction_columns_mapping", "macro_sql": "{% macro default__get_zdp_metadata_extraction_columns_mapping(\n    source_db, source_table\n) %}\n    {{ return([\n        ('zdp_meta_header_account_id', 'instance_account_id'),\n        ('zdp_meta_header_created_at', 'zdp_meta_header_created_timestamp'),\n        ('zdp_meta_header_occurred_at', 'zdp_meta_header_occurred_timestamp'),\n        ('zdp_meta_header_message_id', 'zdp_meta_header_message_id'),\n        ('header:object_id::varchar', 'zdp_meta_header_object_id'),\n        ('zdp_meta_eff_ts', 'zdp_meta_eff_timestamp'),\n        ('zdp_meta:kafka_timestamp::number', 'zdp_meta_kafka_timestamp_epoch_ms'),\n        ('zdp_meta:kafka_partition::number', 'zdp_meta_kafka_partition'),\n        ('zdp_meta:kafka_offset::number', 'zdp_meta_kafka_offset'),\n        ('zdp_meta_l1_ingest_ts', 'zdp_meta_l1_ingest_timestamp'),\n        ('zdp_meta:source_type::varchar', 'zdp_meta_source_type'),\n        (\"'\" ~ source_db ~ '_' ~ source_table ~ \"'\", 'zdp_meta_l1_source'),\n        (\"'pda'\", 'zdp_meta_l1_source_type'),\n        ('zdp_meta_is_deleted', 'zdp_meta_is_deleted')\n    ]) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.1925032, "supported_languages": null}, "macro.zdp_dbt_utils.filter_deletion_records_due_to_ticket_archiving": {"name": "filter_deletion_records_due_to_ticket_archiving", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/filter_deletion_records_due_to_ticket_archiving/filter_deletion_records_due_to_ticket_archiving.sql", "original_file_path": "macros/filter_deletion_records_due_to_ticket_archiving/filter_deletion_records_due_to_ticket_archiving.sql", "unique_id": "macro.zdp_dbt_utils.filter_deletion_records_due_to_ticket_archiving", "macro_sql": "{% macro filter_deletion_records_due_to_ticket_archiving(input_cte_name, ticket_id_column) %}\n\n    {% set temp = [] %}\n    {% for element in invocation_args_dict.select %}\n        {% if invocation_args_dict.which == 'test' and 'test_type:unit' in element %}\n            {% do temp.append(element) %}\n        {% endif %}\n    {% endfor %}\n\n    {% set is_unit_test = temp|length > 0 %}\n\n    {% if not is_unit_test -%}\n        {% set table_name = this.name %}\n        {% set is_append_table = table_name.endswith('_append') %}\n    {% else %}\n        {% set is_append_table = false %}\n    {% endif -%}\n\n    {% if is_append_table %}\n        -- i beleive this will be more optimal as the previous method would have Billions of ids in the not in clause\n        with ticket_archive_tickets_subset_ids as (\n            select distinct ticket_id\n            from {{ ref('base_ticket_archive_tickets_subset_append') }} -- as we are going to distinct ticket_id , we don't need to do a qualify on this table :) :YAY\n        )\n\n        select input.*\n        from {{ input_cte_name }} as input\n        left join ticket_archive_tickets_subset_ids as archive\n            on input.{{ ticket_id_column }} = archive.ticket_id\n        where\n            zdp_meta_op != 'delete'\n            or archive.ticket_id is null  -- This checks if there was no match in the archive\n\n    {% else %}\n\n        with ticket_archive_tickets_subset_ids as (\n            select distinct ticket_id\n            from {{ ref('base_ticket_archive_ticket_ids') }}\n        )\n\n        select *\n        from {{ input_cte_name }}\n        where\n            zdp_meta_op != 'delete'\n            or {{ ticket_id_column }} not in (select ticket_id from ticket_archive_tickets_subset_ids)\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "This macro filter from a dataset (tickets, ticket_field_entries or events) the deletion operation due to the archival of the tickets.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/filter_deletion_records_due_to_ticket_archiving/filter_deletion_records_due_to_ticket_archiving.yml", "arguments": [{"name": "input_cte_name", "type": "String", "description": "The name of the CTE in the parent code that represent the records to filter"}, {"name": "ticket_id_column", "type": "String", "description": "The column that contains the ticket_id in the dataset data have to be filtered"}], "created_at": 1746557619.85684, "supported_languages": null}, "macro.zdp_dbt_utils.denorm_dimension_latest_value_updater": {"name": "denorm_dimension_latest_value_updater", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/denorm_dimension_latest_value_updater/denorm_dimension_latest_value_updater.sql", "original_file_path": "macros/denorm_dimension_latest_value_updater/denorm_dimension_latest_value_updater.sql", "unique_id": "macro.zdp_dbt_utils.denorm_dimension_latest_value_updater", "macro_sql": "{% macro denorm_dimension_latest_value_updater(\n    dimension_source_table_db_full_path,\n    dimension_source_table_zdp_meta_processed_timestamp_tracker,\n    dimension_source_id,\n    dimension_source_name,\n    dimension_destination_id,\n    dimension_destination_name,\n    zdp_meta_op) %}\n{% if is_incremental() %}\n\nUPDATE {{ this }} target\nSET\n    {{ dimension_destination_name }} = delta_updates_only.{{ dimension_source_name }},\n    {{ dimension_source_table_zdp_meta_processed_timestamp_tracker }} = delta_updates_only.zdp_meta_processed_timestamp,\n    zdp_meta_processed_timestamp = delta_updates_only.processed_timestamp\nFROM (\n    SELECT\n        {{ dimension_source_id }},\n        {{ dimension_source_name }},\n        zdp_meta_processed_timestamp,\n        processed_at_ts.processed_timestamp\n    FROM {{ dimension_source_table_db_full_path }}\n    CROSS JOIN (SELECT CONVERT_TIMEZONE('UTC', CURRENT_TIMESTAMP::TIMESTAMP_NTZ) AS processed_timestamp) AS processed_at_ts\n    WHERE {{ zdp_dbt_utils.incremental_changes_condition('zdp_meta_processed_timestamp', dimension_source_table_zdp_meta_processed_timestamp_tracker) }}\n    AND {{ zdp_meta_op }} = 'update'\n) delta_updates_only\nWHERE target.{{ dimension_destination_id }} = delta_updates_only.{{ dimension_source_id }}\nAND target.{{ dimension_destination_name }} != delta_updates_only.{{ dimension_source_name }};\n\n{% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.zdp_dbt_utils.incremental_changes_condition"]}, "description": "This macro updates a column that contains denormalized values if the denormalized entity is updated.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/denorm_dimension_latest_value_updater/denorm_dimension_latest_value_updater.yml", "arguments": [{"name": "dimension_source_table_db_full_path", "type": "String", "description": "The full path (<db_name>.<schema_name>.<table_name>) of the source table for the dimension. This table contains scd1 records of the dimension attributes."}, {"name": "dimension_source_table_zdp_meta_processed_timestamp_tracker", "type": "String", "description": "A timestamp column in the dimension's source table that tracks when each record was last processed by the ZDP (Zendesk Data Pipeline). Used to identify new or updated records for incremental model processing."}, {"name": "dimension_source_id", "type": "String", "description": "The unique identifier column in the dimension's source table. This is the primary key of the dimension table that uniquely identifies a record."}, {"name": "dimension_source_name", "type": "String", "description": "The column in the dimension's source table that contains the attribute value or descriptive label for the dimension record."}, {"name": "dimension_destination_id", "type": "String", "description": "The column name in the target or destination table that corresponds to the 'dimension_source_id' after transformation is applied."}, {"name": "dimension_destination_name", "type": "String", "description": "The column name in the target or destination table that corresponds to the 'dimension_source_name' after transformation is applied. This is where the transformed dimension attribute value or descriptive label is stored."}, {"name": "zdp_meta_op", "type": "String", "description": "A column in the dimension's source table that indicates the operation type for each record (insert, update, delete). This operation metadata is used to manage how records are transformed and loaded, especially for incremental loads."}], "created_at": 1746557619.8608336, "supported_languages": null}, "macro.zdp_dbt_utils.build_cleansed_from_formatted_pda_event_source": {"name": "build_cleansed_from_formatted_pda_event_source", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/build_cleansed_from_formatted_pda_event_source/build_cleansed_from_formatted_pda_event_source.sql", "original_file_path": "macros/build_cleansed_from_formatted_pda_event_source/build_cleansed_from_formatted_pda_event_source.sql", "unique_id": "macro.zdp_dbt_utils.build_cleansed_from_formatted_pda_event_source", "macro_sql": "{% macro build_cleansed_from_formatted_pda_event_source(\n    source_db, source_table, transformation_columns_mapping, remove_already_processed_message_id = false,\n    processing_ingestion_lag = 0, processing_ingestion_lag_unit = 'hour', do_process_until_dag_execution_time = false,\n    source_table_record_filter = '1=1'\n) %}\n\n    {% set primary_key_column = 'zdp_meta_header_message_id' -%}\n\n     -- get new data. To be able to filter duplicates due to ingestion pipeline without full scanning the table, we introduced an overlap window.\n    with records_to_process as (\n        select\n            *\n        from {{ source(source_db, source_table) }}\n        where {{ source_table_record_filter }}\n\n        {% if do_process_until_dag_execution_time and processing_ingestion_lag != 0 -%}\n            -- In case we want to get all the cleansed table in a consistant state\n            and zdp_meta_l1_ingest_ts <= timestampadd({{ processing_ingestion_lag_unit }}, -{{ processing_ingestion_lag }}, {{ zdp_dbt_utils.execution_date() }})\n        {% elif do_process_until_dag_execution_time and processing_ingestion_lag == 0 -%}\n            -- In case we want to get all the cleansed table in a consistant state\n            and zdp_meta_l1_ingest_ts <= {{ zdp_dbt_utils.execution_date() }}\n        {% elif processing_ingestion_lag != 0 and not do_process_until_dag_execution_time -%}\n            -- As the account mode filtering source is not real time for now, we want to not process the latest ingested data to\n            --   give time for the account move filtering source to be more up to date than the dataset we are filtering data from.\n            and zdp_meta_l1_ingest_ts <= timestampadd({{ processing_ingestion_lag_unit }}, -{{ processing_ingestion_lag }}, current_timestamp)\n        {% endif -%}\n\n        {% if is_incremental() -%}\n            and {{ zdp_dbt_utils.incremental_changes_condition('zdp_meta_l1_ingest_ts', 'zdp_meta_l1_ingest_timestamp') }}\n        {% endif -%}\n    ),\n\n    {% if remove_already_processed_message_id -%}\n        record_without_already_processed_message_id as (\n            select *\n            from records_to_process\n            {% if is_incremental() -%}\n                where zdp_meta_header_message_id not in (select zdp_meta_header_message_id from {{ this }})\n            {% endif -%}\n        ),\n    {% endif -%}\n\n    {% set zdp_metadata_extraction_columns_mapping = zdp_dbt_utils.get_zdp_metadata_extraction_columns_mapping(source_db, source_table) %}\n\n    transformed_data as (   -- noqa: ST03\n        select\n            {% for expr, alias in transformation_columns_mapping -%}\n                {{ expr }} as {{ alias|lower }},\n            {% endfor -%}\n            {% for expr, alias in zdp_metadata_extraction_columns_mapping -%}\n                {{ expr }} as {{ alias }}{{ \",\" if not loop.last }}\n            {% endfor -%}\n        from {% if remove_already_processed_message_id %}record_without_already_processed_message_id {% else %}records_to_process{%- endif -%}\n    ),\n\n    {%- set deduplication_order_by_statement =\n        'zdp_meta_kafka_timestamp_epoch_ms desc nulls last, ' ~\n        'zdp_meta_kafka_offset desc nulls last'\n    -%}\n\n    -- all message with the same message_id are identical but in order to be able to rely on kafka metadata to order the events\n    -- we need to keep the one with the oldest kafta timestamp / offset\n    last_records as (\n        {{ dbt_utils.deduplicate('transformed_data', primary_key_column, deduplication_order_by_statement) }}\n    ),\n\n    {%- set model_columns = transformation_columns_mapping | map(attribute=1) | map('lower')  | list +\n        zdp_metadata_extraction_columns_mapping | map(attribute=1) | list\n    -%}\n\n    processed_at_ts as (\n        select current_timestamp::timestamp_ntz as processed_timestamp\n    )\n\n    select\n        {% for column in model_columns -%}\n            {{ ' last_records.' ~ column }},\n        {% endfor -%}\n        processed_at_ts.processed_timestamp as zdp_meta_processed_timestamp,\n        {{ zdp_dbt_utils.add_metadata_columns_for_models() }}\n    from last_records\n    cross join processed_at_ts\n\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.execution_date", "macro.dbt.is_incremental", "macro.zdp_dbt_utils.incremental_changes_condition", "macro.zdp_dbt_utils.get_zdp_metadata_extraction_columns_mapping", "macro.dbt_utils.deduplicate", "macro.zdp_dbt_utils.add_metadata_columns_for_models"]}, "description": "This macro build scd2 curated model from a pda source. This macro:\n  * load the data from the source incrementally\n  * removes duplication due to the ingestion pipeline\nIn transformation_columns_mapping, aliases should not be between quotes.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/build_cleansed_from_formatted_pda_event_source/build_cleansed_from_formatted_pda_event_source.yml", "arguments": [{"name": "source_db", "type": "String", "description": "The name of the database the cdc table is created on"}, {"name": "source_table", "type": "String", "description": "The name of the source cdc table"}, {"name": "transformation_columns_mapping", "type": "Array", "description": "The columns mapping between the formatted model and the cleansed one. Aliases should not be between quotes.\n"}, {"name": "remove_already_processed_message_id", "type": "boolean", "description": "Enable already processed message_id removal The result of this macro should use append as incremental strategy, and not merge"}, {"name": "source_table_record_filter", "type": "String", "description": "Where clause applied to source table to filter certain records. Defaults to '1=1', which includes all records."}], "created_at": 1746557619.8618305, "supported_languages": null}, "macro.zdp_dbt_utils.build_cleansed_scd1_from_formatted_pda_object_source": {"name": "build_cleansed_scd1_from_formatted_pda_object_source", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/build_cleansed_scd1_from_formatted_pda_object_source/build_cleansed_scd1_from_formatted_pda_object_source.sql", "original_file_path": "macros/build_cleansed_scd1_from_formatted_pda_object_source/build_cleansed_scd1_from_formatted_pda_object_source.sql", "unique_id": "macro.zdp_dbt_utils.build_cleansed_scd1_from_formatted_pda_object_source", "macro_sql": "{% macro build_cleansed_scd1_from_formatted_pda_object_source(\n    source_db, source_table, transformation_columns_mapping,\n    processing_ingestion_lag = 0, processing_ingestion_lag_unit = 'hour', do_process_until_dag_execution_time = false,\n    source_table_record_filter = '1=1', do_filter_account_move_related_records = false\n) %}\n\n    {% set primary_key_column = 'zdp_meta_header_object_id' -%}\n\n     -- get new data. To be able to filter duplicates due to ingestion pipeline without full scanning the table, we introduced an overlap window.\n    with records_to_process as (\n        select\n            *\n        from {{ source(source_db, source_table) }}\n        where {{ source_table_record_filter }}\n\n        {% if do_process_until_dag_execution_time and processing_ingestion_lag != 0 -%}\n            -- In case we want to get all the cleansed table in a consistant state\n            and zdp_meta_l1_ingest_ts <= timestampadd({{ processing_ingestion_lag_unit }}, -{{ processing_ingestion_lag }}, {{ zdp_dbt_utils.execution_date() }})\n        {% elif do_process_until_dag_execution_time and processing_ingestion_lag == 0 -%}\n            -- In case we want to get all the cleansed table in a consistant state\n            and zdp_meta_l1_ingest_ts <= {{ zdp_dbt_utils.execution_date() }}\n        {% elif processing_ingestion_lag != 0 and not do_process_until_dag_execution_time -%}\n            -- As the account mode filtering source is not real time for now, we want to not process the latest ingested data to\n            --   give time for the account move filtering source to be more up to date than the dataset we are filtering data from.\n            and zdp_meta_l1_ingest_ts <= timestampadd({{ processing_ingestion_lag_unit }}, -{{ processing_ingestion_lag }}, current_timestamp)\n        {% endif -%}\n\n        {% if is_incremental() -%}\n            and {{ zdp_dbt_utils.incremental_changes_condition('zdp_meta_l1_ingest_ts', 'zdp_meta_l1_ingest_timestamp') }}\n        {% endif -%}\n    ),\n\n    {% set zdp_metadata_extraction_columns_mapping = [\n        ('zdp_meta_header_account_id', 'instance_account_id'),\n        ('zdp_meta_header_created_at', 'zdp_meta_header_created_timestamp'),\n        ('zdp_meta_header_occurred_at', 'zdp_meta_header_occurred_timestamp'),\n        ('zdp_meta_header_message_id', 'zdp_meta_header_message_id'),\n        ('header:object_id::string', 'zdp_meta_header_object_id'),\n        ('zdp_meta_eff_ts', 'zdp_meta_eff_timestamp'),\n        ('zdp_meta:kafka_timestamp::number', 'zdp_meta_kafka_timestamp_epoch_ms'),\n        ('zdp_meta:kafka_partition::number', 'zdp_meta_kafka_partition'),\n        ('zdp_meta:kafka_offset::number', 'zdp_meta_kafka_offset'),\n        ('zdp_meta_l1_ingest_ts', 'zdp_meta_l1_ingest_timestamp'),\n        ('zdp_meta:source_type::varchar', 'zdp_meta_source_type'),\n        (\"'\" ~ source_db ~ '_' ~ source_table ~ \"'\", 'zdp_meta_l1_source'),\n        (\"'pda'\", 'zdp_meta_l1_source_type'),\n        ('zdp_meta_is_deleted', 'zdp_meta_is_deleted')\n    ] -%}\n\n    transformed_data as (   -- noqa: ST03\n        select\n            {% for expr, alias in transformation_columns_mapping -%}\n                {{ expr }} as {{ alias|lower }},\n            {% endfor -%}\n            {% for expr, alias in zdp_metadata_extraction_columns_mapping -%}\n                {{ expr }} as {{ alias }},\n            {% endfor -%}\n            {% if do_filter_account_move_related_records %}\n                hex_decode_string(\n                    reduce(\n                        zdp_meta:kafka_headers:key_value,\n                        {},\n                        (dict, kv) -> object_insert(dict, lower(kv:key), kv:value)\n                    ):zendesk_publish_reason\n                )::string as zdp_meta_zendesk_publish_reason\n            {% endif %}\n        from records_to_process\n        {% if do_filter_account_move_related_records %}\n            where\n                zdp_meta_zendesk_publish_reason is null\n                or zdp_meta_zendesk_publish_reason != 'account_move'\n        {% endif %}\n    ),\n\n    {%- set model_columns = transformation_columns_mapping | map(attribute=1) | map('lower')  | list +\n        zdp_metadata_extraction_columns_mapping | map(attribute=1) | list\n    -%}\n\n    {% if is_incremental() %}\n        -- as the data are not ingested in order in snowflake because of snowpipe, we cannot guarantee the latest state received\n        --    in the newest one so we will need to compare it with the current newest state processed in the previous pipeline\n        entities_updates_by_current_pipeline as (\n            select distinct {{ primary_key_column }} from transformed_data\n        ),\n\n        -- Just enough to look back at the last max_processed_timestamp batch ,\n        -- as highest probability of newer state records existence will be in this delta batch, in case of later arrivinig records\n        -- we get all the records we ingested in previous pipleine of this model and union with the current delta and chose the latest binlog record\n        last_pipelines_max_timestamp AS (\n            select max(zdp_meta_processed_timestamp) AS max_watermark\n            from {{ this }}\n        ),\n\n        {# Determine if current run is done to run unit tests #}\n        {% set temp = [] %}\n        {% for element in invocation_args_dict.select %}\n            {% if invocation_args_dict.which == 'test' and 'test_type:unit' in element %}\n                {% do temp.append(element) %}\n            {% endif %}\n        {% endfor %}\n        {% set is_unit_test = temp|length > 0 %}\n\n        {%- set model_existing_column_list = [] -%}\n        {% if not is_unit_test -%}\n            {%- for column in adapter.get_columns_in_relation(this) -%}\n                {%- do model_existing_column_list.append(column.column|lower) -%}\n            {%- endfor -%}\n        {% endif -%}\n\n        current_records_for_entities_updates_by_current_pipeline as (\n            select\n                {% for column in model_columns -%}\n                    {% if column in model_existing_column_list or is_unit_test -%}\n                        {{ column }},\n                    {% else -%}\n                        null as {{ column }},\n                    {% endif -%}\n                {% endfor -%}\n            from {{ this }}\n            where\n                        zdp_meta_processed_timestamp = (select COALESCE((SELECT max_watermark FROM last_pipelines_max_timestamp), '1970-01-01 00:00:00'::timestamp) FROM last_pipelines_max_timestamp)\n                        and {{ primary_key_column }} in (select {{ primary_key_column }} from entities_updates_by_current_pipeline)\n        ),\n    {% endif %}\n\n    -- XXX: To work around Snowflake's \"error 300010\" of `merge into` of a DBT generated temporary view into the target table,\n    --      Snowflake provided a workaround to do below `union all` in this order (`is_already_in_dest_model` part first)\n    --      c.f. https://zendesk.slack.com/archives/C05S3ACJL6B/p1729152814699939?thread_ts=1729090877.300879&cid=C05S3ACJL6B\n    unioned_data as (   -- noqa: ST03\n        {% if is_incremental() %}\n            select\n                *,\n                true as is_already_in_dest_model\n            from current_records_for_entities_updates_by_current_pipeline\n            union all\n        {% endif %}\n        select\n            {% for column in model_columns -%}\n                {{ column }},\n            {% endfor -%}\n            false as is_already_in_dest_model\n        from transformed_data\n    ),\n\n    {%- set order_by_statement =\n        'zdp_meta_header_occurred_timestamp desc nulls last, ' ~\n        'zdp_meta_kafka_timestamp_epoch_ms desc nulls last, ' ~\n        'zdp_meta_kafka_offset desc nulls last, ' ~\n        'zdp_meta_l1_ingest_timestamp desc nulls last'\n    -%}\n\n    last_records as (\n        {{ dbt_utils.deduplicate('unioned_data', primary_key_column, order_by_statement) }}\n    ),\n\n    processed_at_ts as (\n        select current_timestamp::timestamp_ntz as processed_timestamp\n    )\n\n    select\n        {% for column in model_columns -%}\n            {{ ' last_records.' ~ column }},\n        {% endfor -%}\n        processed_at_ts.processed_timestamp as zdp_meta_processed_timestamp,\n        {{ zdp_dbt_utils.add_metadata_columns_for_models() }}\n    from last_records\n    cross join processed_at_ts\n\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.execution_date", "macro.dbt.is_incremental", "macro.zdp_dbt_utils.incremental_changes_condition", "macro.dbt_utils.deduplicate", "macro.zdp_dbt_utils.add_metadata_columns_for_models"]}, "description": "This macro build scd2 curated model from a pda source. This macro:\n  * load the data from the source incrementally\n  * removes duplication due to the ingestion pipeline,\nIn transformation_columns_mapping, aliases should not be between quotes.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/build_cleansed_scd1_from_formatted_pda_object_source/build_cleansed_scd1_from_formatted_pda_object_source.yml", "arguments": [{"name": "source_db", "type": "String", "description": "The name of the database the cdc table is created on"}, {"name": "source_table", "type": "String", "description": "The name of the source cdc table"}, {"name": "transformation_columns_mapping", "type": "Array", "description": "The columns mapping between the formatted model and the cleansed one. Aliases should not be between quotes."}, {"name": "source_table_record_filter", "type": "String", "description": "Where clause applied to source table to filter certain records. Defaults to '1=1', which includes all records."}], "created_at": 1746557619.862474, "supported_languages": null}, "macro.zdp_dbt_utils.snowflake__create_table_as": {"name": "snowflake__create_table_as", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.zdp_dbt_utils.snowflake__create_table_as", "macro_sql": "{% macro snowflake__create_table_as(temporary, relation, compiled_code, language='sql') -%}\n\n    {% if zdp_dbt_utils.get_dbt_minor_version() in ('1.9', '1.10') %}\n        {{ zdp_dbt_utils.create_table_as1_9(temporary, relation, compiled_code, language) }}\n    {% else %}\n        {{ zdp_dbt_utils.create_table_as1_8(temporary, relation, compiled_code, language) }}\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.get_dbt_minor_version", "macro.zdp_dbt_utils.create_table_as1_9", "macro.zdp_dbt_utils.create_table_as1_8"]}, "description": "Overriding the built-in DBT macro allows for the inclusion of additional statements in the DDL. When this macro is executed, it will gather information about table comments, tags and column masking policies, tags, and comments. It will then append the appropriate statements to the DDL to create the table with the same metadata. New columns will not have any additional metadata, and dropped columns will be skipped. If a column's data type has changed, the masking policies cannot be automatically transferred. The same applies to timestamp fields if their precision is altered.\nThis macro currently doesn't support DBT contracts enforcement. This issue should be resolved in the future.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/relations/table/create.yml", "arguments": [], "created_at": 1746557619.862917, "supported_languages": null}, "macro.zdp_dbt_utils.create_table_as1_9": {"name": "create_table_as1_9", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.zdp_dbt_utils.create_table_as1_9", "macro_sql": "{% macro create_table_as1_9(temporary, relation, compiled_code, language='sql') -%}\n\n    {%- if relation.is_iceberg_format and not adapter.behavior.enable_iceberg_materializations.no_warn %}\n        {% do exceptions.raise_compiler_error('Was unable to create model as Iceberg Table Format. Please set the `enable_iceberg_materializations` behavior flag to True in your dbt_project.yml. For more information, go to https://docs.getdbt.com/reference/resource-configs/snowflake-configs#iceberg-table-format') %}\n    {%- endif %}\n\n    {%- set materialization_prefix = relation.get_ddl_prefix_for_create(config.model.config, temporary) -%}\n    {%- set alter_prefix = relation.get_ddl_prefix_for_alter() -%}\n\n    {%- if language == 'sql' -%}\n        {%- set cluster_by_keys = config.get('cluster_by', default=none) -%}\n        {%- set enable_automatic_clustering = config.get('automatic_clustering', default=false) -%}\n        {%- set copy_grants = config.get('copy_grants', default=false) -%}\n\n        {# The easiest way to compare the structure of current table, and incorming SQL is to materialize new SQL as view #}\n        {%- set target_relation = relation -%}\n        {%- set existing_relation = load_relation(this) -%}\n        {%- set tmp_relation_type = \"view\" -%}\n        {%- set tmp_relation = make_temp_relation(target_relation).incorporate(type=tmp_relation_type) -%}\n\n        {% if existing_relation and not temporary %}\n\n            {% if tmp_relation_type == 'view' %}\n                {%- call statement('create_tmp_relation') -%}\n                    {{ snowflake__create_view_as_with_temp_flag(tmp_relation, compiled_code, True) }}\n                {%- endcall -%}\n            {% else %}\n                {%- call statement('create_tmp_relation', language=language) -%}\n                    {{ create_table_as(True, tmp_relation, compiled_code, language) }}\n                {%- endcall -%}\n            {% endif %}\n\n            {% if execute %}\n                {% set tags = zdp_dbt_utils._get_tags(existing_relation) %}\n                {% set columns_mapping = zdp_dbt_utils._get_columns_mapping(existing_relation, tmp_relation) %}\n                {% set columns_ddl = zdp_dbt_utils._get_columns_ddl(columns_mapping, tags) %}\n                {% set table_tags_ddl = zdp_dbt_utils._get_tags_ddl(tags, alter_format=relation.is_iceberg_format) %}\n                {% set table_info = zdp_dbt_utils._get_table_information(existing_relation) %}\n                {% set table_comment_ddl = zdp_dbt_utils._get_table_comment_ddl(table_info.get('comment')) %}\n\n            {% endif %}\n\n        {% endif %}\n\n        {%- if cluster_by_keys is not none and cluster_by_keys is string -%}\n            {%- set cluster_by_keys = [cluster_by_keys] -%}\n        {%- endif -%}\n        {%- if cluster_by_keys is not none -%}\n            {%- set cluster_by_string = cluster_by_keys|join(\", \")-%}\n        {% else %}\n            {%- set cluster_by_string = none -%}\n        {%- endif -%}\n        {%- set sql_header = config.get('sql_header', none) -%}\n\n        {{ sql_header if sql_header is not none }}\n\n            create or replace {{ materialization_prefix }} table {{ relation }}\n            {%- set contract_config = config.get('contract') -%}\n            {%- if contract_config.enforced -%}\n            {%- do exceptions.warn(\"Enforcing contract might not work with ZDP implemention of DBT macros.\") -%}\n            {{ get_assert_columns_equivalent(sql) }}\n            {{ get_table_columns_and_constraints() }}\n            {% set compiled_code = get_select_subquery(compiled_code) %}\n            {% endif %}\n            {% if existing_relation and not temporary %}({{ columns_ddl }}){% endif %}\n            {%- if relation.is_iceberg_format %}\n            {#\n                Valid DDL in CTAS statements. Plain create statements have a different order.\n                https://docs.snowflake.com/en/sql-reference/sql/create-iceberg-table\n            #}\n            {{ relation.get_iceberg_ddl_options(config.model.config) }}\n            {%- endif -%}\n            {% if existing_relation and not temporary and not relation.is_iceberg_format %} {{ table_tags_ddl }}{% endif %}\n            {% if existing_relation and not temporary %} {{ table_comment_ddl }}{% endif %}\n            {% if copy_grants and not temporary -%} copy grants {%- endif %} as\n            (\n            {%- if cluster_by_string is not none -%}\n                select * from (\n                {{ compiled_code }}\n                ) order by ({{ cluster_by_string }})\n            {%- else -%}\n                {{ compiled_code }}\n            {%- endif %}\n            );\n        {% if cluster_by_string is not none and not temporary -%}\n            alter {{ alter_prefix }} table {{relation}} cluster by ({{cluster_by_string}});\n        {%- endif -%}\n        {% if enable_automatic_clustering and cluster_by_string is not none and not temporary  -%}\n            alter  {{ alter_prefix }} table {{relation}} resume recluster;\n        {%- endif -%}\n        {# For some reason setting up iceberg table tags directly in CREATE statement results in unknown error #}\n        {% if existing_relation and not temporary and relation.is_iceberg_format and table_tags_ddl %}\n            alter {{ alter_prefix }} table {{relation}} set {{ table_tags_ddl }};\n        {% endif %}\n\n        {% do drop_relation_if_exists(tmp_relation) %}\n\n    {%- elif language == 'python' -%}\n        {%- if relation.is_iceberg_format %}\n            {% do exceptions.raise_compiler_error('Iceberg is incompatible with Python models. Please use a SQL model for the iceberg format.') %}\n        {%- endif %}\n        {{ py_write_table(compiled_code=compiled_code, target_relation=relation, table_type=relation.get_ddl_prefix_for_create(config.model.config, temporary)) }}\n    {%- else -%}\n        {% do exceptions.raise_compiler_error(\"snowflake__create_table_as macro didn't get supported language, it got %s\" % language) %}\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt.statement", "macro.dbt_snowflake.snowflake__create_view_as_with_temp_flag", "macro.dbt.create_table_as", "macro.zdp_dbt_utils._get_tags", "macro.zdp_dbt_utils._get_columns_mapping", "macro.zdp_dbt_utils._get_columns_ddl", "macro.zdp_dbt_utils._get_tags_ddl", "macro.zdp_dbt_utils._get_table_information", "macro.zdp_dbt_utils._get_table_comment_ddl", "macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt.get_select_subquery", "macro.dbt.drop_relation_if_exists", "macro.dbt_snowflake.py_write_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2104464, "supported_languages": null}, "macro.zdp_dbt_utils.create_table_as1_8": {"name": "create_table_as1_8", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.zdp_dbt_utils.create_table_as1_8", "macro_sql": "{% macro create_table_as1_8(temporary, relation, compiled_code, language='sql') -%}\n\n    {%- set transient = config.get('transient', default=true) -%}\n\n    {% if temporary -%}\n        {%- set table_type = \"temporary\" -%}\n    {%- elif transient -%}\n        {%- set table_type = \"transient\" -%}\n    {%- else -%}\n        {%- set table_type = \"\" -%}\n    {%- endif %}\n\n    {%- if language == 'sql' -%}\n        {%- set cluster_by_keys = config.get('cluster_by', default=none) -%}\n        {%- set enable_automatic_clustering = config.get('automatic_clustering', default=false) -%}\n        {%- set copy_grants = config.get('copy_grants', default=false) -%}\n\n        {# The easiest way to compare the structure of current table, and incorming SQL is to materialize new SQL as view #}\n        {%- set target_relation = relation -%}\n        {%- set existing_relation = load_relation(this) -%}\n        {%- set tmp_relation_type = \"view\" -%}\n        {%- set tmp_relation = make_temp_relation(target_relation).incorporate(type=tmp_relation_type) -%}\n\n        {% if existing_relation and not temporary %}\n\n            {% if tmp_relation_type == 'view' %}\n                {%- call statement('create_tmp_relation') -%}\n                    {{ snowflake__create_view_as_with_temp_flag(tmp_relation, compiled_code, True) }}\n                {%- endcall -%}\n            {% else %}\n                {%- call statement('create_tmp_relation', language=language) -%}\n                    {{ create_table_as(True, tmp_relation, compiled_code, language) }}\n                {%- endcall -%}\n            {% endif %}\n\n            {% if execute %}\n                {% set tags = zdp_dbt_utils._get_tags(existing_relation) %}\n                {% set columns_mapping = zdp_dbt_utils._get_columns_mapping(existing_relation, tmp_relation) %}\n                {% set columns_ddl = zdp_dbt_utils._get_columns_ddl(columns_mapping, tags) %}\n                {% set table_tags_ddl = zdp_dbt_utils._get_tags_ddl(tags) %}\n                {% set table_info = zdp_dbt_utils._get_table_information(existing_relation) %}\n                {% set table_comment_ddl = zdp_dbt_utils._get_table_comment_ddl(table_info.get('comment')) %}\n\n            {% endif %}\n\n        {% endif %}\n\n        {%- if cluster_by_keys is not none and cluster_by_keys is string -%}\n        {%- set cluster_by_keys = [cluster_by_keys] -%}\n        {%- endif -%}\n        {%- if cluster_by_keys is not none -%}\n        {%- set cluster_by_string = cluster_by_keys|join(\", \")-%}\n        {% else %}\n        {%- set cluster_by_string = none -%}\n        {%- endif -%}\n        {%- set sql_header = config.get('sql_header', none) -%}\n\n        {{ sql_header if sql_header is not none }}\n\n            create or replace {{ table_type }} table {{ relation }}\n            {%- set contract_config = config.get('contract') -%}\n            {%- if contract_config.enforced -%}\n            {%- do exceptions.warn(\"Enforcing contract might not work with ZDP implemention of DBT macros.\") -%}\n            {{ get_assert_columns_equivalent(sql) }}\n            {{ get_table_columns_and_constraints() }}\n            {% set compiled_code = get_select_subquery(compiled_code) %}\n            {% endif %}\n            {% if existing_relation and not temporary %}({{ columns_ddl }}){% endif %}\n            {% if existing_relation and not temporary %} {{ table_tags_ddl }}{% endif %}\n            {% if existing_relation and not temporary %} {{ table_comment_ddl }}{% endif %}\n            {% if copy_grants and not temporary -%} copy grants {%- endif %} as\n            (\n            {%- if cluster_by_string is not none -%}\n                select * from (\n                {{ compiled_code }}\n                ) order by ({{ cluster_by_string }})\n            {%- else -%}\n                {{ compiled_code }}\n            {%- endif %}\n            );\n        {% if cluster_by_string is not none and not temporary -%}\n            alter table {{relation}} cluster by ({{cluster_by_string}});\n        {%- endif -%}\n        {% if enable_automatic_clustering and cluster_by_string is not none and not temporary  -%}\n            alter table {{relation}} resume recluster;\n        {%- endif -%}\n\n        {% do drop_relation_if_exists(tmp_relation) %}\n\n    {%- elif language == 'python' -%}\n        {{ py_write_table(compiled_code=compiled_code, target_relation=relation, table_type=table_type) }}\n    {%- else -%}\n        {% do exceptions.raise_compiler_error(\"snowflake__create_table_as macro didn't get supported language, it got %s\" % language) %}\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt.statement", "macro.dbt_snowflake.snowflake__create_view_as_with_temp_flag", "macro.dbt.create_table_as", "macro.zdp_dbt_utils._get_tags", "macro.zdp_dbt_utils._get_columns_mapping", "macro.zdp_dbt_utils._get_columns_ddl", "macro.zdp_dbt_utils._get_tags_ddl", "macro.zdp_dbt_utils._get_table_information", "macro.zdp_dbt_utils._get_table_comment_ddl", "macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt.get_select_subquery", "macro.dbt.drop_relation_if_exists", "macro.dbt_snowflake.py_write_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2152324, "supported_languages": null}, "macro.zdp_dbt_utils._get_tags": {"name": "_get_tags", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/relations/table/_create_helpers.sql", "original_file_path": "macros/relations/table/_create_helpers.sql", "unique_id": "macro.zdp_dbt_utils._get_tags", "macro_sql": "{% macro _get_tags(relation) -%}\n    {# Returns table results with 4 columns: TAG_NAME, TAG_VALUE, LEVEL, COLUMN_NAME. Level can have 2 values: COLUMN or TABLE #}\n\n    {%- set sql -%}\n        select\n            '\"' || concat_ws('\".\"', tag_database, tag_schema, tag_name) || '\"' as tag_name,\n            tag_value,\n            level,\n            iff(level='TABLE', null, column_name) as column_name\n        from table(snowflake.information_schema.tag_references_all_columns('{{ relation.database }}.{{ relation.schema }}.{{ relation.identifier }}', 'table'))\n        group by 1,2,3,4;\n    {%- endset -%}\n    {%- set result = run_query(sql) -%}\n\n    {% do return(result) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "Returns Agate table with 4 columns: TAG_NAME, TAG_VALUE, LEVEL, COLUMN_NAME. Level can have 2 values: COLUMN or TABLE\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/relations/table/create.yml", "arguments": [{"name": "relation", "type": "Relation", "description": "Relation representing the table"}], "created_at": 1746557619.8635855, "supported_languages": null}, "macro.zdp_dbt_utils._get_tags_ddl": {"name": "_get_tags_ddl", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/relations/table/_create_helpers.sql", "original_file_path": "macros/relations/table/_create_helpers.sql", "unique_id": "macro.zdp_dbt_utils._get_tags_ddl", "macro_sql": "{% macro _get_tags_ddl(tags, column_name=none, alter_format=false) %}\n    {%- set result = [] -%}\n    {%- set tags_ddl = '' -%}\n\n    {%- set filtered_tags = [] -%}\n    {%- for tag_row in tags -%}\n        {%- if tag_row['COLUMN_NAME'] == column_name %}\n            {%- do filtered_tags.append({'tag_name': tag_row['TAG_NAME'], 'tag_value': tag_row['TAG_VALUE']}) -%}\n        {%- endif %}\n    {%- endfor %}\n\n    {%- for row in filtered_tags -%}\n        {%- set tag_ddl -%}\n            {{ row['tag_name'] }}=$${{ row['tag_value'] }}$$\n        {%- endset %}\n        {%- do result.append(tag_ddl) -%}\n    {%- endfor -%}\n\n    {%- if result -%}\n        {%- if alter_format -%}\n            tag {{ ', '.join(result) }}\n        {%- else -%}\n            with tag ({{ ', '.join(result) }})\n        {%- endif -%}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "Takes a table with tags information, and outputs part of the DDL that creates the tags\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/relations/table/create.yml", "arguments": [{"name": "tags", "type": "AgateTable", "description": "Agate table with columns: COLUMN_NAME, TAG_NAME, TAG_VALUE"}, {"name": "column_name", "type": "string", "description": "Name of the column to which the tags apply"}], "created_at": 1746557619.8645778, "supported_languages": null}, "macro.zdp_dbt_utils._get_columns_in_relation_overwrite": {"name": "_get_columns_in_relation_overwrite", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/relations/table/_create_helpers.sql", "original_file_path": "macros/relations/table/_create_helpers.sql", "unique_id": "macro.zdp_dbt_utils._get_columns_in_relation_overwrite", "macro_sql": "{% macro _get_columns_in_relation_overwrite(relation) -%}\n    {%- set sql -%}\n        describe table {{ relation.render() }}\n    {%- endset -%}\n    {%- set result = run_query(sql) -%}\n\n    {% set maximum = 10000 %}\n    {% if (result | length) >= maximum %}\n        {% set msg %}\n        Too many columns in relation {{ relation.render() }}! dbt can only get\n        information about relations with fewer than {{ maximum }} columns.\n        {% endset %}\n        {% do exceptions.raise_compiler_error(msg) %}\n    {% endif %}\n\n    {% do return(result) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "Generates results from 'describe table ...' query.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/relations/table/create.yml", "arguments": [{"name": "relation", "type": "Relation", "description": "Relation object for which to run describe table query"}], "created_at": 1746557619.8650012, "supported_languages": null}, "macro.zdp_dbt_utils._get_table_information": {"name": "_get_table_information", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/relations/table/_create_helpers.sql", "original_file_path": "macros/relations/table/_create_helpers.sql", "unique_id": "macro.zdp_dbt_utils._get_table_information", "macro_sql": "{% macro _get_table_information(relation) %}\n    {%- set sql -%}\n        show tables like '{{ relation.identifier }}' in schema {{ adapter.quote(relation.database) }}.{{ adapter.quote(relation.schema) }}\n    {%- endset -%}\n    {%- set result = run_query(sql) -%}\n\n    {% do return(result[0]) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "Generates results from 'show tables like ...' query.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/relations/table/create.yml", "arguments": [{"name": "relation", "type": "Relation", "description": "Relation object for which to run the query"}], "created_at": 1746557619.8655212, "supported_languages": null}, "macro.zdp_dbt_utils._get_masking_policy_ddl": {"name": "_get_masking_policy_ddl", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/relations/table/_create_helpers.sql", "original_file_path": "macros/relations/table/_create_helpers.sql", "unique_id": "macro.zdp_dbt_utils._get_masking_policy_ddl", "macro_sql": "{% macro _get_masking_policy_ddl(masking_policy_name) %}\n    {%- if masking_policy_name -%}\n        with masking policy {{ masking_policy_name }}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "Takes a masking policy name, and return the part of DDL for assiging the masking policy to a column\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/relations/table/create.yml", "arguments": [], "created_at": 1746557619.865925, "supported_languages": null}, "macro.zdp_dbt_utils._get_column_comment_ddl": {"name": "_get_column_comment_ddl", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/relations/table/_create_helpers.sql", "original_file_path": "macros/relations/table/_create_helpers.sql", "unique_id": "macro.zdp_dbt_utils._get_column_comment_ddl", "macro_sql": "{% macro _get_column_comment_ddl(comment) %}\n    {%- if comment -%}\n        COMMENT $${{ comment }}$$\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "Takes comment, and returns the part of DDL for adding a comment to a column\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/relations/table/create.yml", "arguments": [], "created_at": 1746557619.8663049, "supported_languages": null}, "macro.zdp_dbt_utils._get_table_comment_ddl": {"name": "_get_table_comment_ddl", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/relations/table/_create_helpers.sql", "original_file_path": "macros/relations/table/_create_helpers.sql", "unique_id": "macro.zdp_dbt_utils._get_table_comment_ddl", "macro_sql": "{% macro _get_table_comment_ddl(comment) %}\n    {%- if comment -%}\n        COMMENT = $${{ comment }}$$\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "Takes comment, and returns the part of DDL for adding a comment to a table.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/relations/table/create.yml", "arguments": [], "created_at": 1746557619.8667016, "supported_languages": null}, "macro.zdp_dbt_utils._get_column_ddl": {"name": "_get_column_ddl", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/relations/table/_create_helpers.sql", "original_file_path": "macros/relations/table/_create_helpers.sql", "unique_id": "macro.zdp_dbt_utils._get_column_ddl", "macro_sql": "{% macro _get_column_ddl(name, data_type, masking_policy, comment, tags) -%}\n    {{ name }} {{ data_type }} {{ zdp_dbt_utils._get_masking_policy_ddl(masking_policy) }} {{ zdp_dbt_utils._get_tags_ddl(tags, name) }} {{ zdp_dbt_utils._get_column_comment_ddl(comment) }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.zdp_dbt_utils._get_masking_policy_ddl", "macro.zdp_dbt_utils._get_tags_ddl", "macro.zdp_dbt_utils._get_column_comment_ddl"]}, "description": "Generates a DDL statement for the column based on the provided input.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/relations/table/create.yml", "arguments": [{"name": "column", "type": "String", "description": "Name of the column"}, {"name": "data_type", "type": "String", "description": "Data type of the column"}, {"name": "masking_policy", "type": "String", "description": "Masking policy of the column"}, {"name": "comment", "type": "String", "description": "Comment of the column"}, {"name": "tags", "type": "AgateTable", "description": "Agate table with columns: COLUMN_NAME, TAG_NAME, TAG_VALUE"}], "created_at": 1746557619.8685067, "supported_languages": null}, "macro.zdp_dbt_utils._get_columns_ddl": {"name": "_get_columns_ddl", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/relations/table/_create_helpers.sql", "original_file_path": "macros/relations/table/_create_helpers.sql", "unique_id": "macro.zdp_dbt_utils._get_columns_ddl", "macro_sql": "{% macro _get_columns_ddl(columns, tags) %}\n    {%- for column in columns %}\n        {{ zdp_dbt_utils._get_column_ddl(column['column_name'], column['data_type'], column['masking_policy'], column['comment'], tags) }}{%- if not loop.last %},{% endif -%}\n    {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils._get_column_ddl"]}, "description": "Creates the DDL statement for the all the columns in the new table.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/relations/table/create.yml", "arguments": [{"name": "columns", "type": "AgateTable", "description": "Agate table with columns: column_name, data_type, masking_policy, comment"}, {"name": "tags", "type": "AgateTable", "description": "Agate table with columns: COLUMN_NAME, TAG_NAME, TAG_VALUE"}], "created_at": 1746557619.8692753, "supported_languages": null}, "macro.zdp_dbt_utils._get_masking_policy": {"name": "_get_masking_policy", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/relations/table/_create_helpers.sql", "original_file_path": "macros/relations/table/_create_helpers.sql", "unique_id": "macro.zdp_dbt_utils._get_masking_policy", "macro_sql": "{% macro _get_masking_policy(masking_policy, old_data_type, new_data_type) %}\n    {#\n        For data types in the exception_list, changing the precision will result in differnt masking policies.\n        For any other data type, the precision doesn't impact the masking policy.\n    #}\n    {% set exception_list = ['TIMESTAMP_LTZ', 'TIMESTAMP_TZ', 'TIMESTAMP_NTZ'] %}\n    {% if masking_policy is string %}\n        {% set old_data_type_no_precision = old_data_type.split('(')[0] %}\n        {% set new_data_type_no_precision = new_data_type.split('(')[0] %}\n\n        {% if old_data_type_no_precision != new_data_type_no_precision  %}\n            {% set masking_policy = none %}\n        {% elif (old_data_type != new_data_type) and (old_data_type_no_precision in exception_list) %}\n            {% set masking_policy = none %}\n        {% endif %}\n\n    {% endif %}\n\n    {% do return(masking_policy) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "This macro verifies whether the masking policy can be reapplied. If the data type of the column has changed, the masking policy cannot be reapplied.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/relations/table/create.yml", "arguments": [{"name": "masking_policy", "type": "String", "description": "Name of the masking_policy"}, {"name": "old_data_type", "type": "String", "description": "Data type of the column in the existing table"}, {"name": "new_data_type", "type": "String", "description": "Data type of the column in the new table"}], "created_at": 1746557619.870291, "supported_languages": null}, "macro.zdp_dbt_utils._get_columns_mapping": {"name": "_get_columns_mapping", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/relations/table/_create_helpers.sql", "original_file_path": "macros/relations/table/_create_helpers.sql", "unique_id": "macro.zdp_dbt_utils._get_columns_mapping", "macro_sql": "{% macro _get_columns_mapping(source_relation, target_relation) %}\n    {% set target_relation_columns = zdp_dbt_utils._get_columns_in_relation_overwrite(target_relation) %}\n    {% set source_relation_columns = zdp_dbt_utils._get_columns_in_relation_overwrite(source_relation) %}\n    {% set all_cols = target_relation_columns.join(source_relation_columns, left_key='name', right_key='name') %}\n\n    {% set columns_mapping = [] %}\n    {% for row in all_cols %}\n        {% set column_mapping = {\n            \"column_name\": row['name'],\n            \"data_type\": row['type'],\n            \"comment\": row['comment2'],\n            \"masking_policy\": zdp_dbt_utils._get_masking_policy(row['policy name2'], row['type2'], row['type']),\n          } %}\n        {% do columns_mapping.append(column_mapping)%}\n    {% endfor %}\n    {% do return(columns_mapping) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils._get_columns_in_relation_overwrite", "macro.zdp_dbt_utils._get_masking_policy"]}, "description": "This macro maps the columns from the existing table to the new table. It returns a table with the following columns: `column_name`, `data_type`, `masking_policy`, and `comment`.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/relations/table/create.yml", "arguments": [{"name": "source_relation", "type": "Relation", "description": "Existing relation."}, {"name": "target_relation", "type": "Relation", "description": "New relation created based on provided SELECT statement."}], "created_at": 1746557619.8712542, "supported_languages": null}, "macro.zdp_dbt_utils.ref": {"name": "ref", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/base/ref.sql", "original_file_path": "macros/base/ref.sql", "unique_id": "macro.zdp_dbt_utils.ref", "macro_sql": "{%- macro ref() -%}\n    {{ return(adapter.dispatch('ref', 'zdp_dbt_utils')(*varargs, **kwargs)) }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.zdp_dbt_utils.default__ref"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2230065, "supported_languages": null}, "macro.zdp_dbt_utils.default__ref": {"name": "default__ref", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/base/ref.sql", "original_file_path": "macros/base/ref.sql", "unique_id": "macro.zdp_dbt_utils.default__ref", "macro_sql": "{%- macro default__ref() -%}\n    {% set rel = builtins.ref(*varargs, **kwargs) %}\n    {%- set sampling_percent = kwargs.get('sampling') -%}\n\n    {%- if target.name in ['local'] and sampling_percent -%}\n    (\n        select *\n        from {{ rel }}\n        sample block ({{ sampling_percent }}) seed(1)\n    )\n    {%- else -%}\n        {{ return(rel) }}\n    {%- endif -%}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.cleansed_bq_archive.ref"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2235305, "supported_languages": null}, "macro.zdp_dbt_utils.source": {"name": "source", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/base/source.sql", "original_file_path": "macros/base/source.sql", "unique_id": "macro.zdp_dbt_utils.source", "macro_sql": "{%- macro source() -%}\n    {{ return(adapter.dispatch('source', 'zdp_dbt_utils')(*varargs, **kwargs)) }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.zdp_dbt_utils.default__source"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.223922, "supported_languages": null}, "macro.zdp_dbt_utils.default__source": {"name": "default__source", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/base/source.sql", "original_file_path": "macros/base/source.sql", "unique_id": "macro.zdp_dbt_utils.default__source", "macro_sql": "{%- macro default__source() -%}\n\n    {%- set rel = builtins.source(*varargs) -%}\n    {%- set sampling_percent = kwargs.get('sampling') -%}\n\n    {%- if target.name in ['local'] and sampling_percent -%}\n    (\n        select *\n        from {{ rel }}\n        sample block ({{ sampling_percent }}) seed(1)\n    )\n    {%- else -%}\n        {{ return(rel) }}\n    {%- endif -%}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.cleansed_bq_archive.source"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2244196, "supported_languages": null}, "macro.zdp_dbt_utils.filter_account_move_related_records": {"name": "filter_account_move_related_records", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/filter_account_move_related_records/filter_account_move_related_records.sql", "original_file_path": "macros/filter_account_move_related_records/filter_account_move_related_records.sql", "unique_id": "macro.zdp_dbt_utils.filter_account_move_related_records", "macro_sql": "{% macro filter_account_move_related_records(source_cdc_table_cte, binlog_ts_column_name = 'zdp_meta_binlog_timestamp', account_active_shard_table_db_full_path = source('product_accounts', 'instance_account_active_shards_scd2') ) %}\n\n    with import_instance_account_active_shards_scd2 as (\n        select\n            instance_account_id,\n            instance_account_shard_id,\n            zdp_meta_valid_from as shard_valid_from,\n            zdp_meta_valid_to as shard_valid_to\n        from {{ account_active_shard_table_db_full_path }}\n        where instance_account_id in (\n            select distinct account_id\n            from {{ source_cdc_table_cte }}\n        )\n        and (\n            shard_valid_to >= (\n                select min({{ binlog_ts_column_name }})\n                from {{ source_cdc_table_cte }}\n            )\n            or shard_valid_to is null\n        )\n    ),\n\n    joined_table as (\n        select\n            ent.*,\n            acc.* exclude (instance_account_id, shard_valid_from, shard_valid_to)\n        from {{ source_cdc_table_cte }} as ent\n        left join import_instance_account_active_shards_scd2 as acc\n            on\n                ent.account_id = acc.instance_account_id\n                and ent.zdp_meta_shard_num = acc.instance_account_shard_id\n                and ent.{{ binlog_ts_column_name }} >= acc.shard_valid_from\n                and ent.{{ binlog_ts_column_name }} < coalesce(acc.shard_valid_to, current_timestamp::timestamp_ntz)\n    )\n\n    select * exclude (instance_account_shard_id)\n    from joined_table\n    where instance_account_shard_id is not null\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "This macro filter from a dataset the insertion / deletion operation due to the account move in the shards.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/filter_account_move_related_records/filter_account_move_related_records.yml", "arguments": [{"name": "source_cdc_table_cte", "type": "String", "description": "The name of the CTE in the parent code that represent the records to filter"}, {"name": "binlog_ts_column_name", "type": "String", "description": "The datetime when the record starts to be active in the shard."}], "created_at": 1746557619.8721297, "supported_languages": null}, "macro.zdp_dbt_utils.get_zdp_meta_source_columns": {"name": "get_zdp_meta_source_columns", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/get_zdp_meta_source_columns/get_zdp_meta_source_columns.sql", "original_file_path": "macros/get_zdp_meta_source_columns/get_zdp_meta_source_columns.sql", "unique_id": "macro.zdp_dbt_utils.get_zdp_meta_source_columns", "macro_sql": "{% macro get_zdp_meta_source_columns(\n    source_table_dim_type = 'scd1', source_table_alias = '',\n    input_column_suffix = '', output_column_suffix = '',\n    input_column_prefix = '', output_column_prefix = '', source_table_type = 'cdc') %}\n\n    {%- set common_cdc_metadata_column_list = [\n        'zdp_meta_eff_timestamp',\n        'zdp_meta_op',\n        'zdp_meta_l1_ingest_ts',\n        'zdp_meta_binlog_database',\n        'zdp_meta_binlog_timestamp',\n        'zdp_meta_binlog_filename_prefix',\n        'zdp_meta_binlog_filename_seq_number',\n        'zdp_meta_binlog_position',\n        'zdp_meta_binlog_transaction_id',\n        'zdp_meta_binlog_transaction_row_offset',\n        'zdp_meta_kafka_timestamp_epoch_ms',\n        'zdp_meta_kafka_offset',\n        'zdp_meta_source_type',\n        'zdp_meta_l1_source',\n        'zdp_meta_l1_source_type',\n        'zdp_meta_shard_num'\n    ] -%}\n\n    {% set common_pda_metadata_column_list = [\n        'zdp_meta_header_created_timestamp',\n        'zdp_meta_header_occurred_timestamp',\n        'zdp_meta_header_message_id',\n        'zdp_meta_header_object_id',\n        'zdp_meta_eff_timestamp',\n        'zdp_meta_kafka_timestamp_epoch_ms',\n        'zdp_meta_kafka_partition',\n        'zdp_meta_kafka_offset',\n        'zdp_meta_l1_ingest_timestamp',\n        'zdp_meta_source_type',\n        'zdp_meta_l1_source',\n        'zdp_meta_l1_source_type'\n    ] -%}\n\n    {% set common_zdp_metadata_column_list = common_pda_metadata_column_list if source_table_type == 'pda' else common_cdc_metadata_column_list -%}\n\n    {%- if source_table_dim_type == 'scd2' -%}\n        {%- set zdp_metadata_column_list = common_zdp_metadata_column_list -%}\n    {%- else -%}\n        {%- set zdp_metadata_column_list = common_zdp_metadata_column_list + [ 'zdp_meta_is_deleted' ] -%}\n    {%- endif -%}\n\n    {%- if source_table_alias == '' -%}\n        {%- if input_column_prefix == '' -%}\n            {%- set consolidated_input_column_prefix = '' -%}\n        {%- else -%}\n            {%- set consolidated_input_column_prefix = input_column_prefix ~ '_' -%}\n        {%- endif -%}\n    {%- else -%}\n        {%- if input_column_prefix == '' -%}\n            {%- set consolidated_input_column_prefix = source_table_alias ~ '.' -%}\n        {%- else -%}\n            {%- set consolidated_input_column_prefix = source_table_alias ~ '.'  ~ input_column_prefix ~ '_' -%}\n        {%- endif -%}\n    {%- endif -%}\n\n    {%- if output_column_prefix == '' -%}\n        {%- set consolidated_output_column_prefix = '' -%}\n    {%- else -%}\n        {%- set consolidated_output_column_prefix = ouput_column_prefix ~ '_' -%}\n    {%- endif -%}\n\n    {%- if input_column_suffix == '' -%}\n        {%- set consolidated_input_column_suffix = '' -%}\n    {%- else -%}\n        {%- set consolidated_input_column_suffix = '_' ~ input_column_suffix -%}\n    {%- endif -%}\n\n    {%- if output_column_suffix == '' -%}\n        {%- set consolidated_output_column_suffix = '' -%}\n    {%- else -%}\n        {%- set consolidated_output_column_suffix = '_' ~ output_column_suffix -%}\n    {%- endif -%}\n\n    {%- for column in zdp_metadata_column_list %}\n    {%- if input_column_prefix == output_column_prefix and input_column_suffix == output_column_suffix %}\n        {{ consolidated_input_column_prefix }}{{ column }}{{ consolidated_input_column_suffix }},\n    {%- else %}\n        {{ consolidated_input_column_prefix }}{{ column }}{{ consolidated_input_column_suffix }} as {{ consolidated_output_column_prefix }}{{ column }}{{ consolidated_output_column_suffix }},\n    {%- endif %}\n    {%- endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "This macro generates a list of ZDP metadata columns for a given source table dimension type.  It allows customization of input and output column prefixes and suffixes, as well as an alias for the source table.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/get_zdp_meta_source_columns/get_zdp_meta_source_columns.yml", "arguments": [{"name": "source_table_dim_type", "type": "string", "description": "The type of source table dimension. It can be either 'scd1' or 'scd2'.  Default is 'scd1'.\n"}, {"name": "source_table_alias", "type": "string", "description": "An alias for the source table. If not provided, no alias will be used.\n"}, {"name": "input_column_suffix", "type": "string", "description": "A suffix to be added to the input columns. If not provided, no suffix will be used.\n"}, {"name": "output_column_suffix", "type": "string", "description": "A suffix to be added to the output columns. If not provided, no suffix will be used.\n"}, {"name": "input_column_prefix", "type": "string", "description": "A prefix to be added to the input columns. If not provided, no prefix will be used.\n"}, {"name": "output_column_prefix", "type": "string", "description": "A prefix to be added to the output columns. If not provided, no prefix will be used.\n"}, {"name": "source_table_type", "type": null, "description": "The type of source table. It can be either 'cdc' or 'pda'.  Default is 'cdc'."}], "created_at": 1746557619.8745794, "supported_languages": null}, "macro.zdp_dbt_utils.build_cleansed_scd2_from_formatted_pda_object_source": {"name": "build_cleansed_scd2_from_formatted_pda_object_source", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/build_cleansed_scd2_from_formatted_pda_object_source/build_cleansed_scd2_from_formatted_pda_object_source.sql", "original_file_path": "macros/build_cleansed_scd2_from_formatted_pda_object_source/build_cleansed_scd2_from_formatted_pda_object_source.sql", "unique_id": "macro.zdp_dbt_utils.build_cleansed_scd2_from_formatted_pda_object_source", "macro_sql": "{% macro build_cleansed_scd2_from_formatted_pda_object_source(\n    source_db, source_table, transformation_columns_mapping,\n    processing_ingestion_lag = 0, processing_ingestion_lag_unit = 'hour', do_process_until_dag_execution_time = false,\n    source_table_record_filter = '1=1', do_filter_account_move_related_records = false\n) %}\n\n    {% set primary_key_column = 'zdp_meta_header_object_id' -%}\n\n     -- get new data. To be able to filter duplicates due to ingestion pipeline without full scanning the table, we introduced an overlap window.\n    with records_to_process as (\n        select\n            *\n        from {{ source(source_db, source_table) }}\n        where {{ source_table_record_filter }}\n\n        {% if do_process_until_dag_execution_time and processing_ingestion_lag != 0 -%}\n            -- In case we want to get all the cleansed table in a consistant state\n            and zdp_meta_l1_ingest_ts <= timestampadd({{ processing_ingestion_lag_unit }}, -{{ processing_ingestion_lag }}, {{ zdp_dbt_utils.execution_date() }})\n        {% elif do_process_until_dag_execution_time and processing_ingestion_lag == 0 -%}\n            -- In case we want to get all the cleansed table in a consistant state\n            and zdp_meta_l1_ingest_ts <= {{ zdp_dbt_utils.execution_date() }}\n        {% elif processing_ingestion_lag != 0 and not do_process_until_dag_execution_time -%}\n            -- As the account mode filtering source is not real time for now, we want to not process the latest ingested data to\n            --   give time for the account move filtering source to be more up to date than the dataset we are filtering data from.\n            and zdp_meta_l1_ingest_ts <= timestampadd({{ processing_ingestion_lag_unit }}, -{{ processing_ingestion_lag }}, current_timestamp)\n        {% endif -%}\n\n        {% if is_incremental() -%}\n            and {{ zdp_dbt_utils.incremental_changes_condition('zdp_meta_l1_ingest_ts', 'zdp_meta_l1_ingest_timestamp') }}\n        {% endif -%}\n    ),\n\n    {% set zdp_metadata_extraction_columns_mapping = [\n        ('zdp_meta_header_account_id', 'instance_account_id'),\n        ('zdp_meta_header_created_at', 'zdp_meta_header_created_timestamp'),\n        ('zdp_meta_header_occurred_at', 'zdp_meta_header_occurred_timestamp'),\n        ('zdp_meta_header_message_id', 'zdp_meta_header_message_id'),\n        ('header:object_id::varchar', 'zdp_meta_header_object_id'),\n        ('zdp_meta_eff_ts', 'zdp_meta_eff_timestamp'),\n        ('zdp_meta:kafka_timestamp::number', 'zdp_meta_kafka_timestamp_epoch_ms'),\n        ('zdp_meta:kafka_partition::number', 'zdp_meta_kafka_partition'),\n        ('zdp_meta:kafka_offset::number', 'zdp_meta_kafka_offset'),\n        ('zdp_meta_l1_ingest_ts', 'zdp_meta_l1_ingest_timestamp'),\n        ('zdp_meta:source_type::varchar', 'zdp_meta_source_type'),\n        (\"'\" ~ source_db ~ '_' ~ source_table ~ \"'\", 'zdp_meta_l1_source'),\n        (\"'pda'\", 'zdp_meta_l1_source_type'),\n        ('zdp_meta_is_deleted', 'zdp_meta_is_deleted')\n    ] -%}\n\n    {%- set order_by_statement =\n        'zdp_meta_header_occurred_timestamp desc, ' ~\n        'zdp_meta_kafka_timestamp_epoch_ms desc nulls last, ' ~\n        'zdp_meta_kafka_offset desc nulls last, ' ~\n        'zdp_meta_l1_ingest_timestamp desc nulls last'\n    -%}\n\n    -- Data transformation for the current model\n    transform_data as (   -- noqa: ST03\n        select\n            zdp_meta_header_occurred_at as zdp_meta_valid_from,\n            null as zdp_meta_valid_to, -- will be fulfilled later\n            null as zdp_meta_is_current, -- will be fulfilled later\n            null as zdp_meta_is_last_state, -- will be fulfilled later\n            {% for expr, alias in transformation_columns_mapping -%}\n                {{ expr }} as {{ alias|lower }},\n            {% endfor -%}\n            {% for expr, alias in zdp_metadata_extraction_columns_mapping -%}\n                {{ expr }} as {{ alias }},\n            {% endfor -%}\n            {% if do_filter_account_move_related_records %}\n                hex_decode_string(\n                    reduce(\n                        zdp_meta:kafka_headers:key_value, \n                        {},\n                        (dict, kv) -> object_insert(dict, lower(kv:key), kv:value)\n                    ):zendesk_publish_reason\n                )::string as zdp_meta_zendesk_publish_reason\n            {% endif %}\n        from records_to_process\n        {% if do_filter_account_move_related_records %}\n            where \n                zdp_meta_zendesk_publish_reason is null \n                or zdp_meta_zendesk_publish_reason != 'account_move'\n        {% endif %}\n    ),\n\n    {%- set model_columns = ['zdp_meta_valid_from', 'zdp_meta_valid_to', 'zdp_meta_is_current', 'zdp_meta_is_last_state'] +\n        transformation_columns_mapping | map(attribute=1) | map('lower')  | list +\n        zdp_metadata_extraction_columns_mapping | map(attribute=1) | list\n    -%}\n\n    {% if is_incremental() -%}\n\n        {# Determine if current run is done to run unit tests #}\n        {% set temp = [] %}\n        {% for element in invocation_args_dict.select %}\n            {% if invocation_args_dict.which == 'test' and 'test_type:unit' in element %}\n                {% do temp.append(element) %}\n            {% endif %}\n        {% endfor %}\n        {% set is_unit_test = temp|length > 0 %}\n\n        {%- set model_existing_column_list = [] -%}\n        {% if not is_unit_test -%}\n            {%- for column in adapter.get_columns_in_relation(this) -%}\n                {%- do model_existing_column_list.append(column.column|lower) -%}\n            {%- endfor -%}\n        {% endif -%}\n\n        -- Get current active records for updating entities in incremental mode\n        current_records_for_updated_entities as (\n            select\n                {% for column in model_columns -%}\n                    {% if column in model_existing_column_list or is_unit_test -%}\n                        {{ column }},\n                    {% else -%}\n                        null as {{ column }},\n                    {% endif -%}\n                {% endfor -%}\n            from {{ this }}\n            where {{ primary_key_column }} in (\n                select distinct {{ primary_key_column }}\n                from transform_data\n            )\n            and zdp_meta_is_current = true\n        ),\n    {% endif -%}\n\n    -- Unifying transformed new data with current active records\n    -- XXX: To work around Snowflake's \"error 300010\" of `merge into` of a DBT generated temporary view into the target table,\n    --      Snowflake provided a workaround to do below `union all` in this order (`is_already_processed` part first)\n    --      c.f. https://zendesk.slack.com/archives/C05S3ACJL6B/p1729152814699939?thread_ts=1729090877.300879&cid=C05S3ACJL6B\n    unioned_data as (\n        {% if is_incremental() %}\n            select\n                *,\n                true as is_already_processed\n            from current_records_for_updated_entities\n            union all\n        {% endif %}\n        select\n        {% for column in model_columns -%}\n            {{ column }},\n        {% endfor -%}\n            false as is_already_processed\n        from transform_data\n    ),\n\n    {# partition by and order by statement to filter duplication due to the ingestion pipeline\n    Duplicated records due to the ingestion pipeline have the message_id. They can have different kafka metadata (duplication generated by kafka) or not (duplication generated by snowpipe) #}\n    {% set ingestion_dedup_partition_by_statement = 'zdp_meta_header_object_id, zdp_meta_header_message_id'-%}\n    {% set ingestion_dedup_order_by_statement =\n        'zdp_meta_kafka_timestamp_epoch_ms asc nulls first, ' ~\n        'zdp_meta_kafka_offset asc nulls first, ' ~\n        'zdp_meta_l1_ingest_timestamp asc'\n    -%}\n\n    -- In case 2 records have the same message_id, it means they have been duplicated during the data digestion in ZDP\n    -- In that case, we want to keep the oldest one to keep the maybe already ingested one\n    filter_duplicated_data_due_to_ingestion as (\n        {{ dbt_utils.deduplicate('unioned_data', ingestion_dedup_partition_by_statement, ingestion_dedup_order_by_statement) }}\n    ),\n\n    {% set order_by_statement =\n        'zdp_meta_header_occurred_timestamp desc, ' ~\n        'zdp_meta_kafka_timestamp_epoch_ms desc nulls last, ' ~\n        'zdp_meta_kafka_offset desc nulls last'\n    -%}\n\n    -- add other sc2 table specific attributes\n    -- zdp_meta_valid_to is equal to the zdp_meta_valid_from of the next record\n    add_scd2_datetime_columns as (\n        select\n            * exclude (zdp_meta_valid_to, zdp_meta_is_current, zdp_meta_is_last_state),\n            lag(zdp_meta_valid_from) over (\n                partition by {{ primary_key_column }}\n                order by {{ order_by_statement }}\n            ) as zdp_meta_valid_to,\n            lag({{ 'zdp_meta_is_deleted' }}) over (\n                partition by {{ primary_key_column }}\n                order by {{ order_by_statement }}\n            ) as following_record_zdp_meta_is_deleted\n        from filter_duplicated_data_due_to_ingestion\n    ),\n\n    filter_deleted_records as (\n        select *\n        from add_scd2_datetime_columns\n        where not {{ 'zdp_meta_is_deleted' }}\n    ),\n\n    scd2_data_with_is_current_flag as (\n        select\n            *,\n            zdp_meta_valid_to is null as zdp_meta_is_current,\n            zdp_meta_valid_to is null or following_record_zdp_meta_is_deleted as zdp_meta_is_last_state\n        from filter_deleted_records\n    ),\n\n    -- records with is_already_processed = true and zdp_meta_is_current = true haven't been updated so they don't need to be loaded\n    -- again in the table\n    exclude_already_processed_and_not_updated_records as (\n        select * exclude is_already_processed\n        from scd2_data_with_is_current_flag\n        where\n            is_already_processed = false\n            or (is_already_processed = true and zdp_meta_is_current = false)\n    ),\n\n    processed_at_ts as (\n        select current_timestamp::timestamp_ntz as processed_timestamp\n    )\n\n    select\n        {% for column in model_columns -%}\n            {{ ' exclude_already_processed_and_not_updated_records.' ~ column }},\n        {% endfor -%}\n        processed_at_ts.processed_timestamp as zdp_meta_processed_timestamp,\n        {{ zdp_dbt_utils.add_metadata_columns_for_models() }}\n    from exclude_already_processed_and_not_updated_records\n    cross join processed_at_ts\n\n\n{% endmacro %}", "depends_on": {"macros": ["macro.zdp_dbt_utils.execution_date", "macro.dbt.is_incremental", "macro.zdp_dbt_utils.incremental_changes_condition", "macro.dbt_utils.deduplicate", "macro.zdp_dbt_utils.add_metadata_columns_for_models"]}, "description": "This macro build scd2 curated model from a pda source. This macro:\n  * load the data from the source incrementally\n  * removes duplication due to the ingestion pipeline,\nIn transformation_columns_mapping, aliases should not be between quotes.\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/build_cleansed_scd2_from_formatted_pda_object_source/build_cleansed_scd2_from_formatted_pda_object_source.yml", "arguments": [{"name": "source_db", "type": "String", "description": "The name of the database the cdc table is created on"}, {"name": "source_table", "type": "String", "description": "The name of the source cdc table"}, {"name": "primary_key_column", "type": "String", "description": "The unique identifier column in the current model."}, {"name": "transformation_columns_mapping", "type": "Array", "description": "The columns mapping between the formatted model and the cleansed one. Aliases should not be between quotes."}, {"name": "source_table_record_filter", "type": "String", "description": "Where clause applied to source table to filter certain records. Defaults to '1=1', which includes all records."}], "created_at": 1746557619.875217, "supported_languages": null}, "macro.zdp_dbt_utils.get_scd2_surrogate_key": {"name": "get_scd2_surrogate_key", "resource_type": "macro", "package_name": "zdp_dbt_utils", "path": "macros/get_scd2_surrogate_key/get_scd2_surrogate_key.sql", "original_file_path": "macros/get_scd2_surrogate_key/get_scd2_surrogate_key.sql", "unique_id": "macro.zdp_dbt_utils.get_scd2_surrogate_key", "macro_sql": "{% macro get_scd2_surrogate_key(field_list=none) %}\n\n    {%- set field_list = field_list or config.get('key_cols') or config.get('check_cols') -%}\n\n    {%- if field_list == none or field_list == [] -%}\n        {{ exceptions.raise_compiler_error(\"Neither fields were provided nor config defined. Please provide appropriate values in 'key_cols' or 'check_cols'.\") }}\n    {%- endif -%}\n\n    md5(\n        concat(\n                {%- for field in field_list -%}\n                    coalesce({{ field }}::string, '~NULL~') {%- if not loop.last %}, '_' , {% endif %}\n                {%- endfor -%}\n        )\n    )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "Generate MD5 hashed key based on given list of columns\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "zdp_dbt_utils://macros/get_scd2_surrogate_key/get_scd2_surrogate_key.yml", "arguments": [{"name": "field_list", "type": "list", "description": "List of coloumns available in the 'check_cols'. Default 'none."}], "created_at": 1746557619.87601, "supported_languages": null}, "macro.dbt_snowflake_query_tags.get_query_comment": {"name": "get_query_comment", "resource_type": "macro", "package_name": "dbt_snowflake_query_tags", "path": "macros/query_comment.sql", "original_file_path": "macros/query_comment.sql", "unique_id": "macro.dbt_snowflake_query_tags.get_query_comment", "macro_sql": "{% macro get_query_comment(node, extra = {}) %}\n    {%- set comment_dict = extra -%}\n    {%- do comment_dict.update(\n        app='dbt',\n        dbt_snowflake_query_tags_version='2.5.0',\n        dbt_version=dbt_version,\n        project_name=project_name,\n        target_name=target.name,\n        target_database=target.database,\n        target_schema=target.schema,\n        invocation_id=invocation_id,\n        run_started_at=run_started_at.astimezone(modules.pytz.utc).isoformat(),\n        full_refresh=flags.FULL_REFRESH,\n        which=flags.WHICH,\n    ) -%}\n\n    {%- if node is not none -%}\n        {%- do comment_dict.update(\n            node_name=node.name,\n            node_alias=node.alias,\n            node_package_name=node.package_name,\n            node_original_file_path=node.original_file_path,\n            node_database=node.database,\n            node_schema=node.schema,\n            node_id=node.unique_id,\n            node_resource_type=node.resource_type,\n            node_meta=node.config.meta,\n            node_tags=node.tags,\n        ) -%}\n\n        {%- if flags.INVOCATION_COMMAND -%}\n            {%- do comment_dict.update(\n                invocation_command=flags.INVOCATION_COMMAND\n            ) -%}\n        {%- endif -%}\n\n        {%- if node.resource_type != ('seed') -%} {# Otherwise this throws an error saying 'Seeds cannot depend on other nodes.' #}\n            {%- if node.refs is defined -%}\n                {% set refs = [] %}\n                {% for ref in node.refs %}\n                    {%- if dbt_version >= '1.5.0' -%}\n                        {%- do refs.append(ref.name) -%}\n                    {%- else -%}\n                        {%- do refs.append(ref[0]) -%}\n                    {%- endif -%}\n                {% endfor %}\n                {%- do comment_dict.update(\n                    node_refs=refs | unique | list\n                ) -%}\n            {%- endif -%}\n        {%- endif -%}\n        {%- if node.resource_type == 'model' -%}\n            {%- do comment_dict.update(\n                materialized=node.config.materialized,\n            ) -%}\n        {%- endif -%}\n\n        {%- if node.raw_code is not none and local_md5 -%}\n            {%- do comment_dict.update({\n                \"raw_code_hash\": local_md5(node.raw_code)\n            }) -%}\n        {%- endif -%}\n    {%- endif -%}\n\n    {%- if env_var('DBT_CLOUD_PROJECT_ID', False) -%}\n        {%- do comment_dict.update(\n            dbt_cloud_project_id=env_var('DBT_CLOUD_PROJECT_ID')\n        ) -%}\n    {%- endif -%}\n\n    {%- if env_var('DBT_CLOUD_JOB_ID', False) -%}\n        {%- do comment_dict.update(\n            dbt_cloud_job_id=env_var('DBT_CLOUD_JOB_ID')\n        ) -%}\n    {%- endif -%}\n\n    {%- if env_var('DBT_CLOUD_RUN_ID', False) -%}\n        {%- do comment_dict.update(\n            dbt_cloud_run_id=env_var('DBT_CLOUD_RUN_ID')\n        ) -%}\n    {%- endif -%}\n\n    {%- if env_var('DBT_CLOUD_RUN_REASON_CATEGORY', False) -%}\n        {%- do comment_dict.update(\n            dbt_cloud_run_reason_category=env_var('DBT_CLOUD_RUN_REASON_CATEGORY')\n        ) -%}\n    {%- endif -%}\n\n    {%- if env_var('DBT_CLOUD_RUN_REASON', False) -%}\n        {%- do comment_dict.update(\n            dbt_cloud_run_reason=env_var('DBT_CLOUD_RUN_REASON')\n        ) -%}\n    {%- endif -%}\n\n    {{ return(tojson(comment_dict)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2390223, "supported_languages": null}, "macro.dbt_snowflake_query_tags.set_query_tag": {"name": "set_query_tag", "resource_type": "macro", "package_name": "dbt_snowflake_query_tags", "path": "macros/query_tags.sql", "original_file_path": "macros/query_tags.sql", "unique_id": "macro.dbt_snowflake_query_tags.set_query_tag", "macro_sql": "{% macro set_query_tag(extra = {}) -%}\n    {{ return(adapter.dispatch('set_query_tag', 'dbt_snowflake_query_tags')(extra=extra)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake_query_tags.default__set_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2399392, "supported_languages": null}, "macro.dbt_snowflake_query_tags.default__set_query_tag": {"name": "default__set_query_tag", "resource_type": "macro", "package_name": "dbt_snowflake_query_tags", "path": "macros/query_tags.sql", "original_file_path": "macros/query_tags.sql", "unique_id": "macro.dbt_snowflake_query_tags.default__set_query_tag", "macro_sql": "{% macro default__set_query_tag(extra = {}) -%}\n    {# Get session level query tag #}\n    {% set original_query_tag = get_current_query_tag() %}\n    {% set original_query_tag_parsed = {} %}\n\n    {% if original_query_tag %}\n        {% if fromjson(original_query_tag) is mapping %}\n            {% set original_query_tag_parsed = fromjson(original_query_tag) %}\n        {% endif %}\n    {% endif %}\n\n    {# The env_vars_to_query_tag_list should contain an environment variables list to construct query tag dict #}\n    {% set env_var_query_tags = {} %}\n    {% if var('env_vars_to_query_tag_list', '') %} {# Get a list of env vars from env_vars_to_query_tag_list variable to add additional query tags #}\n        {% for k in var('env_vars_to_query_tag_list') %}\n            {% set v = env_var(k, '') %}\n            {% do env_var_query_tags.update({k.lower(): v}) if v %}\n        {% endfor %}\n    {% endif %}\n\n    {# Start with any model-configured dict #}\n    {% set query_tag = config.get('query_tag', default={}) %}\n\n    {% if query_tag is not mapping %}\n    {% do log(\"dbt-snowflake-query-tags warning: the query_tag config value of '{}' is not a mapping type, so is being ignored. If you'd like to add additional query tag information, use a mapping type instead, or remove it to avoid this message.\".format(query_tag), True) %}\n    {% set query_tag = {} %} {# If the user has set the query tag config as a non mapping type, start fresh #}\n    {% endif %}\n\n    {% do query_tag.update(original_query_tag_parsed) %}\n    {% do query_tag.update(env_var_query_tags) %}\n    {% do query_tag.update(extra) %}\n\n    {%- do query_tag.update(\n        app='dbt',\n        dbt_snowflake_query_tags_version='2.5.0',\n    ) -%}\n\n    {% if thread_id %}\n        {%- do query_tag.update(\n            thread_id=thread_id\n        ) -%}\n    {% endif %}\n\n\n    {# We have to bring is_incremental through here because its not available in the comment context #}\n    {% if model.resource_type == 'model' %}\n        {%- do query_tag.update(\n            is_incremental=is_incremental()\n        ) -%}\n    {% endif %}\n\n    {% set query_tag_json = tojson(query_tag) %}\n    {{ log(\"Setting query_tag to '\" ~ query_tag_json ~ \"'. Will reset to '\" ~ original_query_tag ~ \"' after materialization.\") }}\n    {% do run_query(\"alter session set query_tag = '{}'\".format(query_tag_json)) %}\n    {{ return(original_query_tag)}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.get_current_query_tag", "macro.dbt.is_incremental", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.242221, "supported_languages": null}, "macro.dbt_snowflake_query_tags.unset_query_tag": {"name": "unset_query_tag", "resource_type": "macro", "package_name": "dbt_snowflake_query_tags", "path": "macros/query_tags.sql", "original_file_path": "macros/query_tags.sql", "unique_id": "macro.dbt_snowflake_query_tags.unset_query_tag", "macro_sql": "{% macro unset_query_tag(original_query_tag) -%}\n    {{ return(adapter.dispatch('unset_query_tag', 'dbt_snowflake_query_tags')(original_query_tag)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake_query_tags.default__unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2424881, "supported_languages": null}, "macro.dbt_snowflake_query_tags.default__unset_query_tag": {"name": "default__unset_query_tag", "resource_type": "macro", "package_name": "dbt_snowflake_query_tags", "path": "macros/query_tags.sql", "original_file_path": "macros/query_tags.sql", "unique_id": "macro.dbt_snowflake_query_tags.default__unset_query_tag", "macro_sql": "{% macro default__unset_query_tag(original_query_tag) -%}\n    {% if original_query_tag %}\n    {{ log(\"Resetting query_tag to '\" ~ original_query_tag ~ \"'.\") }}\n    {% do run_query(\"alter session set query_tag = '{}'\".format(original_query_tag)) %}\n    {% else %}\n    {{ log(\"No original query_tag, unsetting parameter.\") }}\n    {% do run_query(\"alter session unset query_tag\") %}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2429545, "supported_languages": null}, "macro.dbt_utils.test_at_least_one": {"name": "test_at_least_one", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/at_least_one.sql", "original_file_path": "macros/generic_tests/at_least_one.sql", "unique_id": "macro.dbt_utils.test_at_least_one", "macro_sql": "{% test at_least_one(model, column_name, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_at_least_one', 'dbt_utils')(model, column_name, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_at_least_one"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2435732, "supported_languages": null}, "macro.dbt_utils.default__test_at_least_one": {"name": "default__test_at_least_one", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/at_least_one.sql", "original_file_path": "macros/generic_tests/at_least_one.sql", "unique_id": "macro.dbt_utils.default__test_at_least_one", "macro_sql": "{% macro default__test_at_least_one(model, column_name, group_by_columns) %}\n\n{% set pruned_cols = [column_name] %}\n\n{% if group_by_columns|length() > 0 %}\n\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n  {% set pruned_cols = group_by_columns %}\n\n  {% if column_name not in pruned_cols %}\n    {% do pruned_cols.append(column_name) %}\n  {% endif %}\n\n{% endif %}\n\n{% set select_pruned_cols = pruned_cols|join(' ,') %}\n\nselect *\nfrom (\n    with pruned_rows as (\n      select\n        {{ select_pruned_cols }}\n      from {{ model }}\n      where {{ column_name }} is not null\n      limit 1\n    )\n    select\n        {# In TSQL, subquery aggregate columns need aliases #}\n        {# thus: a filler col name, 'filler_column' #}\n      {{select_gb_cols}}\n      count({{ column_name }}) as filler_column\n\n    from pruned_rows\n\n    {{groupby_gb_cols}}\n\n    having count({{ column_name }}) = 0\n\n) validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2445736, "supported_languages": null}, "macro.dbt_utils.test_not_constant": {"name": "test_not_constant", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_constant.sql", "original_file_path": "macros/generic_tests/not_constant.sql", "unique_id": "macro.dbt_utils.test_not_constant", "macro_sql": "{% test not_constant(model, column_name, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_not_constant', 'dbt_utils')(model, column_name, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_constant"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.245103, "supported_languages": null}, "macro.dbt_utils.default__test_not_constant": {"name": "default__test_not_constant", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_constant.sql", "original_file_path": "macros/generic_tests/not_constant.sql", "unique_id": "macro.dbt_utils.default__test_not_constant", "macro_sql": "{% macro default__test_not_constant(model, column_name, group_by_columns) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n\nselect\n    {# In TSQL, subquery aggregate columns need aliases #}\n    {# thus: a filler col name, 'filler_column' #}\n    {{select_gb_cols}}\n    count(distinct {{ column_name }}) as filler_column\n\nfrom {{ model }}\n\n  {{groupby_gb_cols}}\n\nhaving count(distinct {{ column_name }}) = 1\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.245699, "supported_languages": null}, "macro.dbt_utils.test_sequential_values": {"name": "test_sequential_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/sequential_values.sql", "original_file_path": "macros/generic_tests/sequential_values.sql", "unique_id": "macro.dbt_utils.test_sequential_values", "macro_sql": "{% test sequential_values(model, column_name, interval=1, datepart=None, group_by_columns = []) %}\n\n  {{ return(adapter.dispatch('test_sequential_values', 'dbt_utils')(model, column_name, interval, datepart, group_by_columns)) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_sequential_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2463765, "supported_languages": null}, "macro.dbt_utils.default__test_sequential_values": {"name": "default__test_sequential_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/sequential_values.sql", "original_file_path": "macros/generic_tests/sequential_values.sql", "unique_id": "macro.dbt_utils.default__test_sequential_values", "macro_sql": "{% macro default__test_sequential_values(model, column_name, interval=1, datepart=None, group_by_columns = []) %}\n\n{% set previous_column_name = \"previous_\" ~ dbt_utils.slugify(column_name) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(',') + ', ' %}\n  {% set partition_gb_cols = 'partition by ' + group_by_columns|join(',') %}\n{% endif %}\n\nwith windowed as (\n\n    select\n        {{ select_gb_cols }}\n        {{ column_name }},\n        lag({{ column_name }}) over (\n            {{partition_gb_cols}}\n            order by {{ column_name }}\n        ) as {{ previous_column_name }}\n    from {{ model }}\n),\n\nvalidation_errors as (\n    select\n        *\n    from windowed\n    {% if datepart %}\n    where not(cast({{ column_name }} as {{ dbt.type_timestamp() }})= cast({{ dbt.dateadd(datepart, interval, previous_column_name) }} as {{ dbt.type_timestamp() }}))\n    {% else %}\n    where not({{ column_name }} = {{ previous_column_name }} + {{ interval }})\n    {% endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.slugify", "macro.dbt.type_timestamp", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2474976, "supported_languages": null}, "macro.dbt_utils.test_not_empty_string": {"name": "test_not_empty_string", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_empty_string.sql", "original_file_path": "macros/generic_tests/not_empty_string.sql", "unique_id": "macro.dbt_utils.test_not_empty_string", "macro_sql": "{% test not_empty_string(model, column_name, trim_whitespace=true) %}\n\n  {{ return(adapter.dispatch('test_not_empty_string', 'dbt_utils')(model, column_name, trim_whitespace)) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_empty_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2479665, "supported_languages": null}, "macro.dbt_utils.default__test_not_empty_string": {"name": "default__test_not_empty_string", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_empty_string.sql", "original_file_path": "macros/generic_tests/not_empty_string.sql", "unique_id": "macro.dbt_utils.default__test_not_empty_string", "macro_sql": "{% macro default__test_not_empty_string(model, column_name, trim_whitespace=true) %}\n\n    with\n    \n    all_values as (\n\n        select \n\n\n            {% if trim_whitespace == true -%}\n\n                trim({{ column_name }}) as {{ column_name }}\n\n            {%- else -%}\n\n                {{ column_name }}\n\n            {%- endif %}\n            \n        from {{ model }}\n\n    ),\n\n    errors as (\n\n        select * from all_values\n        where {{ column_name }} = ''\n\n    )\n\n    select * from errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2483673, "supported_languages": null}, "macro.dbt_utils.test_not_accepted_values": {"name": "test_not_accepted_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_accepted_values.sql", "original_file_path": "macros/generic_tests/not_accepted_values.sql", "unique_id": "macro.dbt_utils.test_not_accepted_values", "macro_sql": "{% test not_accepted_values(model, column_name, values, quote=True) %}\n  {{ return(adapter.dispatch('test_not_accepted_values', 'dbt_utils')(model, column_name, values, quote)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2488744, "supported_languages": null}, "macro.dbt_utils.default__test_not_accepted_values": {"name": "default__test_not_accepted_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_accepted_values.sql", "original_file_path": "macros/generic_tests/not_accepted_values.sql", "unique_id": "macro.dbt_utils.default__test_not_accepted_values", "macro_sql": "{% macro default__test_not_accepted_values(model, column_name, values, quote=True) %}\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as value_field\n\n    from {{ model }}\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field in (\n        {% for value in values -%}\n            {% if quote -%}\n            '{{ value }}'\n            {%- else -%}\n            {{ value }}\n            {%- endif -%}\n            {%- if not loop.last -%},{%- endif %}\n        {%- endfor %}\n        )\n\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2493796, "supported_languages": null}, "macro.dbt_utils.test_fewer_rows_than": {"name": "test_fewer_rows_than", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/fewer_rows_than.sql", "original_file_path": "macros/generic_tests/fewer_rows_than.sql", "unique_id": "macro.dbt_utils.test_fewer_rows_than", "macro_sql": "{% test fewer_rows_than(model, compare_model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_fewer_rows_than', 'dbt_utils')(model, compare_model, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_fewer_rows_than"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2500784, "supported_languages": null}, "macro.dbt_utils.default__test_fewer_rows_than": {"name": "default__test_fewer_rows_than", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/fewer_rows_than.sql", "original_file_path": "macros/generic_tests/fewer_rows_than.sql", "unique_id": "macro.dbt_utils.default__test_fewer_rows_than", "macro_sql": "{% macro default__test_fewer_rows_than(model, compare_model, group_by_columns) %}\n\n{{ config(fail_calc = 'sum(coalesce(row_count_delta, 0))') }}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set join_gb_cols %}\n    {% for c in group_by_columns %}\n      and a.{{c}} = b.{{c}}\n    {% endfor %}\n  {% endset %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n{#-- We must add a fake join key in case additional grouping variables are not provided --#}\n{#-- Redshift does not allow for dynamically created join conditions (e.g. full join on 1 = 1 --#}\n{#-- The same logic is used in equal_rowcount. In case of changes, maintain consistent logic --#}\n{% set group_by_columns = ['id_dbtutils_test_fewer_rows_than'] + group_by_columns %}\n{% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n\n\nwith a as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_fewer_rows_than,\n      count(*) as count_our_model \n    from {{ model }}\n    {{ groupby_gb_cols }}\n\n),\nb as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_fewer_rows_than,\n      count(*) as count_comparison_model \n    from {{ compare_model }}\n    {{ groupby_gb_cols }}\n\n),\ncounts as (\n\n    select\n\n        {% for c in group_by_columns -%}\n          a.{{c}} as {{c}}_a,\n          b.{{c}} as {{c}}_b,\n        {% endfor %}\n\n        count_our_model,\n        count_comparison_model\n    from a\n    full join b on \n    a.id_dbtutils_test_fewer_rows_than = b.id_dbtutils_test_fewer_rows_than\n    {{ join_gb_cols }}\n\n),\nfinal as (\n\n    select *,\n        case\n            -- fail the test if we have more rows than the reference model and return the row count delta\n            when count_our_model > count_comparison_model then (count_our_model - count_comparison_model)\n            -- fail the test if they are the same number\n            when count_our_model = count_comparison_model then 1\n            -- pass the test if the delta is positive (i.e. return the number 0)\n            else 0\n    end as row_count_delta\n    from counts\n\n)\n\nselect * from final\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2513697, "supported_languages": null}, "macro.dbt_utils.test_not_null_proportion": {"name": "test_not_null_proportion", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_null_proportion.sql", "original_file_path": "macros/generic_tests/not_null_proportion.sql", "unique_id": "macro.dbt_utils.test_not_null_proportion", "macro_sql": "{% macro test_not_null_proportion(model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_not_null_proportion', 'dbt_utils')(model, group_by_columns, **kwargs)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_null_proportion"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2519202, "supported_languages": null}, "macro.dbt_utils.default__test_not_null_proportion": {"name": "default__test_not_null_proportion", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_null_proportion.sql", "original_file_path": "macros/generic_tests/not_null_proportion.sql", "unique_id": "macro.dbt_utils.default__test_not_null_proportion", "macro_sql": "{% macro default__test_not_null_proportion(model, group_by_columns) %}\n\n{% set column_name = kwargs.get('column_name', kwargs.get('arg')) %}\n{% set at_least = kwargs.get('at_least', kwargs.get('arg')) %}\n{% set at_most = kwargs.get('at_most', kwargs.get('arg', 1)) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\nwith validation as (\n  select\n    {{select_gb_cols}}\n    sum(case when {{ column_name }} is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from {{ model }}\n  {{groupby_gb_cols}}\n),\nvalidation_errors as (\n  select\n    {{select_gb_cols}}\n    not_null_proportion\n  from validation\n  where not_null_proportion < {{ at_least }} or not_null_proportion > {{ at_most }}\n)\nselect\n  *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2529275, "supported_languages": null}, "macro.dbt_utils.test_unique_combination_of_columns": {"name": "test_unique_combination_of_columns", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/unique_combination_of_columns.sql", "original_file_path": "macros/generic_tests/unique_combination_of_columns.sql", "unique_id": "macro.dbt_utils.test_unique_combination_of_columns", "macro_sql": "{% test unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n  {{ return(adapter.dispatch('test_unique_combination_of_columns', 'dbt_utils')(model, combination_of_columns, quote_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_unique_combination_of_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2534866, "supported_languages": null}, "macro.dbt_utils.default__test_unique_combination_of_columns": {"name": "default__test_unique_combination_of_columns", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/unique_combination_of_columns.sql", "original_file_path": "macros/generic_tests/unique_combination_of_columns.sql", "unique_id": "macro.dbt_utils.default__test_unique_combination_of_columns", "macro_sql": "{% macro default__test_unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n\n{% if not quote_columns %}\n    {%- set column_list=combination_of_columns %}\n{% elif quote_columns %}\n    {%- set column_list=[] %}\n        {% for column in combination_of_columns -%}\n            {% set column_list = column_list.append( adapter.quote(column) ) %}\n        {%- endfor %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`quote_columns` argument for unique_combination_of_columns test must be one of [True, False] Got: '\" ~ quote ~\"'.'\"\n    ) }}\n{% endif %}\n\n{%- set columns_csv=column_list | join(', ') %}\n\n\nwith validation_errors as (\n\n    select\n        {{ columns_csv }}\n    from {{ model }}\n    group by {{ columns_csv }}\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2542763, "supported_languages": null}, "macro.dbt_utils.test_equality": {"name": "test_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equality.sql", "original_file_path": "macros/generic_tests/equality.sql", "unique_id": "macro.dbt_utils.test_equality", "macro_sql": "{% test equality(model, compare_model, compare_columns=None) %}\n  {{ return(adapter.dispatch('test_equality', 'dbt_utils')(model, compare_model, compare_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_equality"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2549136, "supported_languages": null}, "macro.dbt_utils.default__test_equality": {"name": "default__test_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equality.sql", "original_file_path": "macros/generic_tests/equality.sql", "unique_id": "macro.dbt_utils.default__test_equality", "macro_sql": "{% macro default__test_equality(model, compare_model, compare_columns=None) %}\n\n{% set set_diff %}\n    count(*) + coalesce(abs(\n        sum(case when which_diff = 'a_minus_b' then 1 else 0 end) -\n        sum(case when which_diff = 'b_minus_a' then 1 else 0 end)\n    ), 0)\n{% endset %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = set_diff) }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\n-- setup\n{%- do dbt_utils._is_relation(model, 'test_equality') -%}\n\n{#-\nIf the compare_cols arg is provided, we can run this test without querying the\ninformation schema\u00a0\u2014 this allows the model to be an ephemeral model\n-#}\n\n{%- if not compare_columns -%}\n    {%- do dbt_utils._is_ephemeral(model, 'test_equality') -%}\n    {%- set compare_columns = adapter.get_columns_in_relation(model) | map(attribute='quoted') -%}\n{%- endif -%}\n\n{% set compare_cols_csv = compare_columns | join(', ') %}\n\nwith a as (\n\n    select * from {{ model }}\n\n),\n\nb as (\n\n    select * from {{ compare_model }}\n\n),\n\na_minus_b as (\n\n    select {{compare_cols_csv}} from a\n    {{ dbt.except() }}\n    select {{compare_cols_csv}} from b\n\n),\n\nb_minus_a as (\n\n    select {{compare_cols_csv}} from b\n    {{ dbt.except() }}\n    select {{compare_cols_csv}} from a\n\n),\n\nunioned as (\n\n    select 'a_minus_b' as which_diff, a_minus_b.* from a_minus_b\n    union all\n    select 'b_minus_a' as which_diff, b_minus_a.* from b_minus_a\n\n)\n\nselect * from unioned\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.256201, "supported_languages": null}, "macro.dbt_utils.test_accepted_range": {"name": "test_accepted_range", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/accepted_range.sql", "original_file_path": "macros/generic_tests/accepted_range.sql", "unique_id": "macro.dbt_utils.test_accepted_range", "macro_sql": "{% test accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n  {{ return(adapter.dispatch('test_accepted_range', 'dbt_utils')(model, column_name, min_value, max_value, inclusive)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_accepted_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2568219, "supported_languages": null}, "macro.dbt_utils.default__test_accepted_range": {"name": "default__test_accepted_range", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/accepted_range.sql", "original_file_path": "macros/generic_tests/accepted_range.sql", "unique_id": "macro.dbt_utils.default__test_accepted_range", "macro_sql": "{% macro default__test_accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n\nwith meet_condition as(\n  select *\n  from {{ model }}\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n\n  {%- if min_value is not none %}\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} > {{- \"=\" if inclusive }} {{ min_value }}\n  {%- endif %}\n\n  {%- if max_value is not none %}\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} < {{- \"=\" if inclusive }} {{ max_value }}\n  {%- endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.257444, "supported_languages": null}, "macro.dbt_utils.test_recency": {"name": "test_recency", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/recency.sql", "original_file_path": "macros/generic_tests/recency.sql", "unique_id": "macro.dbt_utils.test_recency", "macro_sql": "{% test recency(model, field, datepart, interval, ignore_time_component=False, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_recency', 'dbt_utils')(model, field, datepart, interval, ignore_time_component, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_recency"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2581115, "supported_languages": null}, "macro.dbt_utils.default__test_recency": {"name": "default__test_recency", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/recency.sql", "original_file_path": "macros/generic_tests/recency.sql", "unique_id": "macro.dbt_utils.default__test_recency", "macro_sql": "{% macro default__test_recency(model, field, datepart, interval, ignore_time_component, group_by_columns) %}\n\n{% set threshold = 'cast(' ~ dbt.dateadd(datepart, interval * -1, dbt.current_timestamp()) ~ ' as ' ~ ('date' if ignore_time_component else dbt.type_timestamp()) ~ ')'  %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n\nwith recency as (\n\n    select \n\n      {{ select_gb_cols }}\n      {% if ignore_time_component %}\n        cast(max({{ field }}) as date) as most_recent\n      {%- else %}\n        max({{ field }}) as most_recent\n      {%- endif %}\n\n    from {{ model }}\n\n    {{ groupby_gb_cols }}\n\n)\n\nselect\n\n    {{ select_gb_cols }}\n    most_recent,\n    {{ threshold }} as threshold\n\nfrom recency\nwhere most_recent < {{ threshold }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.current_timestamp", "macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2591598, "supported_languages": null}, "macro.dbt_utils.test_cardinality_equality": {"name": "test_cardinality_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/cardinality_equality.sql", "original_file_path": "macros/generic_tests/cardinality_equality.sql", "unique_id": "macro.dbt_utils.test_cardinality_equality", "macro_sql": "{% test cardinality_equality(model, column_name, to, field) %}\n    {{ return(adapter.dispatch('test_cardinality_equality', 'dbt_utils')(model, column_name, to, field)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_cardinality_equality"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.25967, "supported_languages": null}, "macro.dbt_utils.default__test_cardinality_equality": {"name": "default__test_cardinality_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/cardinality_equality.sql", "original_file_path": "macros/generic_tests/cardinality_equality.sql", "unique_id": "macro.dbt_utils.default__test_cardinality_equality", "macro_sql": "{% macro default__test_cardinality_equality(model, column_name, to, field) %}\n\n{# T-SQL does not let you use numbers as aliases for columns #}\n{# Thus, no \"GROUP BY 1\" #}\n\nwith table_a as (\nselect\n  {{ column_name }},\n  count(*) as num_rows\nfrom {{ model }}\ngroup by {{ column_name }}\n),\n\ntable_b as (\nselect\n  {{ field }},\n  count(*) as num_rows\nfrom {{ to }}\ngroup by {{ field }}\n),\n\nexcept_a as (\n  select *\n  from table_a\n  {{ dbt.except() }}\n  select *\n  from table_b\n),\n\nexcept_b as (\n  select *\n  from table_b\n  {{ dbt.except() }}\n  select *\n  from table_a\n),\n\nunioned as (\n  select *\n  from except_a\n  union all\n  select *\n  from except_b\n)\n\nselect *\nfrom unioned\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2601018, "supported_languages": null}, "macro.dbt_utils.test_mutually_exclusive_ranges": {"name": "test_mutually_exclusive_ranges", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/generic_tests/mutually_exclusive_ranges.sql", "unique_id": "macro.dbt_utils.test_mutually_exclusive_ranges", "macro_sql": "{% test mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n  {{ return(adapter.dispatch('test_mutually_exclusive_ranges', 'dbt_utils')(model, lower_bound_column, upper_bound_column, partition_by, gaps, zero_length_range_allowed)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_mutually_exclusive_ranges"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.261094, "supported_languages": null}, "macro.dbt_utils.default__test_mutually_exclusive_ranges": {"name": "default__test_mutually_exclusive_ranges", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/generic_tests/mutually_exclusive_ranges.sql", "unique_id": "macro.dbt_utils.default__test_mutually_exclusive_ranges", "macro_sql": "{% macro default__test_mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n{% if gaps == 'not_allowed' %}\n    {% set allow_gaps_operator='=' %}\n    {% set allow_gaps_operator_in_words='equal_to' %}\n{% elif gaps == 'allowed' %}\n    {% set allow_gaps_operator='<=' %}\n    {% set allow_gaps_operator_in_words='less_than_or_equal_to' %}\n{% elif gaps == 'required' %}\n    {% set allow_gaps_operator='<' %}\n    {% set allow_gaps_operator_in_words='less_than' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`gaps` argument for mutually_exclusive_ranges test must be one of ['not_allowed', 'allowed', 'required'] Got: '\" ~ gaps ~\"'.'\"\n    ) }}\n{% endif %}\n{% if not zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<' %}\n    {% set allow_zero_length_operator_in_words='less_than' %}\n{% elif zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<=' %}\n    {% set allow_zero_length_operator_in_words='less_than_or_equal_to' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`zero_length_range_allowed` argument for mutually_exclusive_ranges test must be one of [true, false] Got: '\" ~ zero_length_range_allowed ~\"'.'\"\n    ) }}\n{% endif %}\n\n{% set partition_clause=\"partition by \" ~ partition_by if partition_by else '' %}\n\nwith window_functions as (\n\n    select\n        {% if partition_by %}\n        {{ partition_by }} as partition_by_col,\n        {% endif %}\n        {{ lower_bound_column }} as lower_bound,\n        {{ upper_bound_column }} as upper_bound,\n\n        lead({{ lower_bound_column }}) over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }}, {{ upper_bound_column }}\n        ) as next_lower_bound,\n\n        row_number() over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }} desc, {{ upper_bound_column }} desc\n        ) = 1 as is_last_record\n\n    from {{ model }}\n\n),\n\ncalc as (\n    -- We want to return records where one of our assumptions fails, so we'll use\n    -- the `not` function with `and` statements so we can write our assumptions more cleanly\n    select\n        *,\n\n        -- For each record: lower_bound should be < upper_bound.\n        -- Coalesce it to return an error on the null case (implicit assumption\n        -- these columns are not_null)\n        coalesce(\n            lower_bound {{ allow_zero_length_operator }} upper_bound,\n            false\n        ) as lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound,\n\n        -- For each record: upper_bound {{ allow_gaps_operator }} the next lower_bound.\n        -- Coalesce it to handle null cases for the last record.\n        coalesce(\n            upper_bound {{ allow_gaps_operator }} next_lower_bound,\n            is_last_record,\n            false\n        ) as upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n\n    from window_functions\n\n),\n\nvalidation_errors as (\n\n    select\n        *\n    from calc\n\n    where not(\n        -- THE FOLLOWING SHOULD BE TRUE --\n        lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound\n        and upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n    )\n)\n\nselect * from validation_errors\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2630484, "supported_languages": null}, "macro.dbt_utils.test_expression_is_true": {"name": "test_expression_is_true", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/expression_is_true.sql", "original_file_path": "macros/generic_tests/expression_is_true.sql", "unique_id": "macro.dbt_utils.test_expression_is_true", "macro_sql": "{% test expression_is_true(model, expression, column_name=None) %}\n  {{ return(adapter.dispatch('test_expression_is_true', 'dbt_utils')(model, expression, column_name)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.263552, "supported_languages": null}, "macro.dbt_utils.default__test_expression_is_true": {"name": "default__test_expression_is_true", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/expression_is_true.sql", "original_file_path": "macros/generic_tests/expression_is_true.sql", "unique_id": "macro.dbt_utils.default__test_expression_is_true", "macro_sql": "{% macro default__test_expression_is_true(model, expression, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else \"1\" %}\n\nselect\n    {{ column_list }}\nfrom {{ model }}\n{% if column_name is none %}\nwhere not({{ expression }})\n{%- else %}\nwhere not({{ column_name }} {{ expression }})\n{%- endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2640436, "supported_languages": null}, "macro.dbt_utils.test_relationships_where": {"name": "test_relationships_where", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/relationships_where.sql", "original_file_path": "macros/generic_tests/relationships_where.sql", "unique_id": "macro.dbt_utils.test_relationships_where", "macro_sql": "{% test relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n  {{ return(adapter.dispatch('test_relationships_where', 'dbt_utils')(model, column_name, to, field, from_condition, to_condition)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_relationships_where"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2646406, "supported_languages": null}, "macro.dbt_utils.default__test_relationships_where": {"name": "default__test_relationships_where", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/relationships_where.sql", "original_file_path": "macros/generic_tests/relationships_where.sql", "unique_id": "macro.dbt_utils.default__test_relationships_where", "macro_sql": "{% macro default__test_relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n\n{# T-SQL has no boolean data type so we use 1=1 which returns TRUE #}\n{# ref https://stackoverflow.com/a/7170753/3842610 #}\n\nwith left_table as (\n\n  select\n    {{column_name}} as id\n\n  from {{model}}\n\n  where {{column_name}} is not null\n    and {{from_condition}}\n\n),\n\nright_table as (\n\n  select\n    {{field}} as id\n\n  from {{to}}\n\n  where {{field}} is not null\n    and {{to_condition}}\n\n),\n\nexceptions as (\n\n  select\n    left_table.id,\n    right_table.id as right_id\n\n  from left_table\n\n  left join right_table\n         on left_table.id = right_table.id\n\n  where right_table.id is null\n\n)\n\nselect * from exceptions\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2650824, "supported_languages": null}, "macro.dbt_utils.test_equal_rowcount": {"name": "test_equal_rowcount", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equal_rowcount.sql", "original_file_path": "macros/generic_tests/equal_rowcount.sql", "unique_id": "macro.dbt_utils.test_equal_rowcount", "macro_sql": "{% test equal_rowcount(model, compare_model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_equal_rowcount', 'dbt_utils')(model, compare_model, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_equal_rowcount"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2658186, "supported_languages": null}, "macro.dbt_utils.default__test_equal_rowcount": {"name": "default__test_equal_rowcount", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equal_rowcount.sql", "original_file_path": "macros/generic_tests/equal_rowcount.sql", "unique_id": "macro.dbt_utils.default__test_equal_rowcount", "macro_sql": "{% macro default__test_equal_rowcount(model, compare_model, group_by_columns) %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = 'sum(coalesce(diff_count, 0))') }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(', ') + ', ' %}\n  {% set join_gb_cols %}\n    {% for c in group_by_columns %}\n      and a.{{c}} = b.{{c}}\n    {% endfor %}\n  {% endset %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n{#-- We must add a fake join key in case additional grouping variables are not provided --#}\n{#-- Redshift does not allow for dynamically created join conditions (e.g. full join on 1 = 1 --#}\n{#-- The same logic is used in fewer_rows_than. In case of changes, maintain consistent logic --#}\n{% set group_by_columns = ['id_dbtutils_test_equal_rowcount'] + group_by_columns %}\n{% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n\nwith a as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_a \n    from {{ model }}\n    {{groupby_gb_cols}}\n\n\n),\nb as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_b \n    from {{ compare_model }}\n    {{groupby_gb_cols}}\n\n),\nfinal as (\n\n    select\n    \n        {% for c in group_by_columns -%}\n          a.{{c}} as {{c}}_a,\n          b.{{c}} as {{c}}_b,\n        {% endfor %}\n\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n\n    from a\n    full join b\n    on\n    a.id_dbtutils_test_equal_rowcount = b.id_dbtutils_test_equal_rowcount\n    {{join_gb_cols}}\n\n\n)\n\nselect * from final\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2672098, "supported_languages": null}, "macro.dbt_utils.get_url_parameter": {"name": "get_url_parameter", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "unique_id": "macro.dbt_utils.get_url_parameter", "macro_sql": "{% macro get_url_parameter(field, url_parameter) -%}\n    {{ return(adapter.dispatch('get_url_parameter', 'dbt_utils')(field, url_parameter)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_parameter"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2676282, "supported_languages": null}, "macro.dbt_utils.default__get_url_parameter": {"name": "default__get_url_parameter", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "unique_id": "macro.dbt_utils.default__get_url_parameter", "macro_sql": "{% macro default__get_url_parameter(field, url_parameter) -%}\n\n{%- set formatted_url_parameter = \"'\" + url_parameter + \"='\" -%}\n\n{%- set split = dbt.split_part(dbt.split_part(field, formatted_url_parameter, 2), \"'&'\", 1) -%}\n\nnullif({{ split }},'')\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2680285, "supported_languages": null}, "macro.dbt_utils.get_url_path": {"name": "get_url_path", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "unique_id": "macro.dbt_utils.get_url_path", "macro_sql": "{% macro get_url_path(field) -%}\n    {{ return(adapter.dispatch('get_url_path', 'dbt_utils')(field)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_path"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2684822, "supported_languages": null}, "macro.dbt_utils.default__get_url_path": {"name": "default__get_url_path", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "unique_id": "macro.dbt_utils.default__get_url_path", "macro_sql": "{% macro default__get_url_path(field) -%}\n\n    {%- set stripped_url =\n        dbt.replace(\n            dbt.replace(field, \"'http://'\", \"''\"), \"'https://'\", \"''\")\n    -%}\n\n    {%- set first_slash_pos -%}\n        coalesce(\n            nullif({{ dbt.position(\"'/'\", stripped_url) }}, 0),\n            {{ dbt.position(\"'?'\", stripped_url) }} - 1\n            )\n    {%- endset -%}\n\n    {%- set parsed_path =\n        dbt.split_part(\n            dbt.right(\n                stripped_url,\n                dbt.length(stripped_url) ~ \"-\" ~ first_slash_pos\n                ),\n            \"'?'\", 1\n            )\n    -%}\n\n    {{ dbt.safe_cast(\n        parsed_path,\n        dbt.type_string()\n    )}}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.position", "macro.dbt.split_part", "macro.dbt.right", "macro.dbt.length", "macro.dbt.safe_cast", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2693048, "supported_languages": null}, "macro.dbt_utils.get_url_host": {"name": "get_url_host", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "unique_id": "macro.dbt_utils.get_url_host", "macro_sql": "{% macro get_url_host(field) -%}\n    {{ return(adapter.dispatch('get_url_host', 'dbt_utils')(field)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_host"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2697084, "supported_languages": null}, "macro.dbt_utils.default__get_url_host": {"name": "default__get_url_host", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "unique_id": "macro.dbt_utils.default__get_url_host", "macro_sql": "{% macro default__get_url_host(field) -%}\n\n{%- set parsed =\n    dbt.split_part(\n        dbt.split_part(\n            dbt.replace(\n                dbt.replace(\n                    dbt.replace(field, \"'android-app://'\", \"''\"\n                    ), \"'http://'\", \"''\"\n                ), \"'https://'\", \"''\"\n            ), \"'/'\", 1\n        ), \"'?'\", 1\n    )\n\n-%}\n\n\n    {{ dbt.safe_cast(\n        parsed,\n        dbt.type_string()\n        )}}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.split_part", "macro.dbt.replace", "macro.dbt.safe_cast", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2703824, "supported_languages": null}, "macro.dbt_utils.generate_surrogate_key": {"name": "generate_surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_surrogate_key.sql", "original_file_path": "macros/sql/generate_surrogate_key.sql", "unique_id": "macro.dbt_utils.generate_surrogate_key", "macro_sql": "{%- macro generate_surrogate_key(field_list) -%}\n    {{ return(adapter.dispatch('generate_surrogate_key', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__generate_surrogate_key"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.270863, "supported_languages": null}, "macro.dbt_utils.default__generate_surrogate_key": {"name": "default__generate_surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_surrogate_key.sql", "original_file_path": "macros/sql/generate_surrogate_key.sql", "unique_id": "macro.dbt_utils.default__generate_surrogate_key", "macro_sql": "\n\n{%- macro default__generate_surrogate_key(field_list) -%}\n\n{%- if var('surrogate_key_treat_nulls_as_empty_strings', False) -%}\n    {%- set default_null_value = \"\" -%}\n{%- else -%}\n    {%- set default_null_value = '_dbt_utils_surrogate_key_null_' -%}\n{%- endif -%}\n\n{%- set fields = [] -%}\n\n{%- for field in field_list -%}\n\n    {%- do fields.append(\n        \"coalesce(cast(\" ~ field ~ \" as \" ~ dbt.type_string() ~ \"), '\" ~ default_null_value  ~\"')\"\n    ) -%}\n\n    {%- if not loop.last %}\n        {%- do fields.append(\"'-'\") -%}\n    {%- endif -%}\n\n{%- endfor -%}\n\n{{ dbt.hash(dbt.concat(fields)) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt.hash", "macro.dbt.concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2716749, "supported_languages": null}, "macro.dbt_utils.deduplicate": {"name": "deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.deduplicate", "macro_sql": "{%- macro deduplicate(relation, partition_by, order_by) -%}\n    {{ return(adapter.dispatch('deduplicate', 'dbt_utils')(relation, partition_by, order_by)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.snowflake__deduplicate"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.272347, "supported_languages": null}, "macro.dbt_utils.default__deduplicate": {"name": "default__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.default__deduplicate", "macro_sql": "\n\n{%- macro default__deduplicate(relation, partition_by, order_by) -%}\n\n    with row_numbered as (\n        select\n            _inner.*,\n            row_number() over (\n                partition by {{ partition_by }}\n                order by {{ order_by }}\n            ) as rn\n        from {{ relation }} as _inner\n    )\n\n    select\n        distinct data.*\n    from {{ relation }} as data\n    {#\n    -- Not all DBs will support natural joins but the ones that do include:\n    -- Oracle, MySQL, SQLite, Redshift, Teradata, Materialize, Databricks\n    -- Apache Spark, SingleStore, Vertica\n    -- Those that do not appear to support natural joins include:\n    -- SQLServer, Trino, Presto, Rockset, Athena\n    #}\n    natural join row_numbered\n    where row_numbered.rn = 1\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2726605, "supported_languages": null}, "macro.dbt_utils.redshift__deduplicate": {"name": "redshift__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.redshift__deduplicate", "macro_sql": "{% macro redshift__deduplicate(relation, partition_by, order_by) -%}\n\n    {{ return(dbt_utils.default__deduplicate(relation, partition_by, order_by=order_by)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__deduplicate"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2729218, "supported_languages": null}, "macro.dbt_utils.postgres__deduplicate": {"name": "postgres__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.postgres__deduplicate", "macro_sql": "\n{%- macro postgres__deduplicate(relation, partition_by, order_by) -%}\n\n    select\n        distinct on ({{ partition_by }}) *\n    from {{ relation }}\n    order by {{ partition_by }}{{ ',' ~ order_by }}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2733285, "supported_languages": null}, "macro.dbt_utils.snowflake__deduplicate": {"name": "snowflake__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.snowflake__deduplicate", "macro_sql": "\n{%- macro snowflake__deduplicate(relation, partition_by, order_by) -%}\n\n    select *\n    from {{ relation }}\n    qualify\n        row_number() over (\n            partition by {{ partition_by }}\n            order by {{ order_by }}\n        ) = 1\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2735734, "supported_languages": null}, "macro.dbt_utils.bigquery__deduplicate": {"name": "bigquery__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.bigquery__deduplicate", "macro_sql": "\n{%- macro bigquery__deduplicate(relation, partition_by, order_by) -%}\n\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by {{ order_by }}\n                limit 1\n            )[offset(0)] unique\n        from {{ relation }} original\n        group by {{ partition_by }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2738175, "supported_languages": null}, "macro.dbt_utils.get_filtered_columns_in_relation": {"name": "get_filtered_columns_in_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_filtered_columns_in_relation.sql", "original_file_path": "macros/sql/get_filtered_columns_in_relation.sql", "unique_id": "macro.dbt_utils.get_filtered_columns_in_relation", "macro_sql": "{% macro get_filtered_columns_in_relation(from, except=[]) -%}\n    {{ return(adapter.dispatch('get_filtered_columns_in_relation', 'dbt_utils')(from, except)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_filtered_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.27434, "supported_languages": null}, "macro.dbt_utils.default__get_filtered_columns_in_relation": {"name": "default__get_filtered_columns_in_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_filtered_columns_in_relation.sql", "original_file_path": "macros/sql/get_filtered_columns_in_relation.sql", "unique_id": "macro.dbt_utils.default__get_filtered_columns_in_relation", "macro_sql": "{% macro default__get_filtered_columns_in_relation(from, except=[]) -%}\n    {%- do dbt_utils._is_relation(from, 'get_filtered_columns_in_relation') -%}\n    {%- do dbt_utils._is_ephemeral(from, 'get_filtered_columns_in_relation') -%}\n\n    {# -- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {{ return('') }}\n    {% endif %}\n\n    {%- set include_cols = [] %}\n    {%- set cols = adapter.get_columns_in_relation(from) -%}\n    {%- set except = except | map(\"lower\") | list %}\n    {%- for col in cols -%}\n        {%- if col.column|lower not in except -%}\n            {% do include_cols.append(col.column) %}\n        {%- endif %}\n    {%- endfor %}\n\n    {{ return(include_cols) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.275271, "supported_languages": null}, "macro.dbt_utils.get_powers_of_two": {"name": "get_powers_of_two", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2758422, "supported_languages": null}, "macro.dbt_utils.default__get_powers_of_two": {"name": "default__get_powers_of_two", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.276403, "supported_languages": null}, "macro.dbt_utils.generate_series": {"name": "generate_series", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2766569, "supported_languages": null}, "macro.dbt_utils.default__generate_series": {"name": "default__generate_series", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt_utils.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2773397, "supported_languages": null}, "macro.dbt_utils.get_query_results_as_dict": {"name": "get_query_results_as_dict", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "unique_id": "macro.dbt_utils.get_query_results_as_dict", "macro_sql": "{% macro get_query_results_as_dict(query) %}\n    {{ return(adapter.dispatch('get_query_results_as_dict', 'dbt_utils')(query)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_query_results_as_dict"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2778122, "supported_languages": null}, "macro.dbt_utils.default__get_query_results_as_dict": {"name": "default__get_query_results_as_dict", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "unique_id": "macro.dbt_utils.default__get_query_results_as_dict", "macro_sql": "{% macro default__get_query_results_as_dict(query) %}\n\n{# This macro returns a dictionary of the form {column_name: (tuple_of_results)} #}\n\n    {%- call statement('get_query_results', fetch_result=True,auto_begin=false) -%}\n\n        {{ query }}\n\n    {%- endcall -%}\n\n    {% set sql_results={} %}\n\n    {%- if execute -%}\n        {% set sql_results_table = load_result('get_query_results').table.columns %}\n        {% for column_name, column in sql_results_table.items() %}\n            {% do sql_results.update({column_name: column.values()}) %}\n        {% endfor %}\n    {%- endif -%}\n\n    {{ return(sql_results) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2785804, "supported_languages": null}, "macro.dbt_utils.get_tables_by_pattern_sql": {"name": "get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.get_tables_by_pattern_sql", "macro_sql": "{% macro get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_pattern_sql', 'dbt_utils')\n        (schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2793894, "supported_languages": null}, "macro.dbt_utils.default__get_tables_by_pattern_sql": {"name": "default__get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.default__get_tables_by_pattern_sql", "macro_sql": "{% macro default__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n        select distinct\n            table_schema as {{ adapter.quote('table_schema') }},\n            table_name as {{ adapter.quote('table_name') }},\n            {{ dbt_utils.get_table_types_sql() }}\n        from {{ database }}.information_schema.tables\n        where table_schema ilike '{{ schema_pattern }}'\n        and table_name ilike '{{ table_pattern }}'\n        and table_name not ilike '{{ exclude }}'\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2798474, "supported_languages": null}, "macro.dbt_utils.bigquery__get_tables_by_pattern_sql": {"name": "bigquery__get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.bigquery__get_tables_by_pattern_sql", "macro_sql": "{% macro bigquery__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {% if '%' in schema_pattern %}\n        {% set schemata=dbt_utils._bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% else %}\n        {% set schemata=[schema_pattern] %}\n    {% endif %}\n\n    {% set sql %}\n        {% for schema in schemata %}\n            select distinct\n                table_schema,\n                table_name,\n                {{ dbt_utils.get_table_types_sql() }}\n\n            from {{ adapter.quote(database) }}.{{ schema }}.INFORMATION_SCHEMA.TABLES\n            where lower(table_name) like lower ('{{ table_pattern }}')\n                and lower(table_name) not like lower ('{{ exclude }}')\n\n            {% if not loop.last %} union all {% endif %}\n\n        {% endfor %}\n    {% endset %}\n\n    {{ return(sql) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._bigquery__get_matching_schemata", "macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2807498, "supported_languages": null}, "macro.dbt_utils._bigquery__get_matching_schemata": {"name": "_bigquery__get_matching_schemata", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils._bigquery__get_matching_schemata", "macro_sql": "{% macro _bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% if execute %}\n\n        {% set sql %}\n        select schema_name from {{ adapter.quote(database) }}.INFORMATION_SCHEMA.SCHEMATA\n        where lower(schema_name) like lower('{{ schema_pattern }}')\n        {% endset %}\n\n        {% set results=run_query(sql) %}\n\n        {% set schemata=results.columns['schema_name'].values() %}\n\n        {{ return(schemata) }}\n\n    {% else %}\n\n        {{ return([]) }}\n\n    {% endif %}\n\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2813933, "supported_languages": null}, "macro.dbt_utils.nullcheck_table": {"name": "nullcheck_table", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "unique_id": "macro.dbt_utils.nullcheck_table", "macro_sql": "{% macro nullcheck_table(relation) %}\n    {{ return(adapter.dispatch('nullcheck_table', 'dbt_utils')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2817976, "supported_languages": null}, "macro.dbt_utils.default__nullcheck_table": {"name": "default__nullcheck_table", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "unique_id": "macro.dbt_utils.default__nullcheck_table", "macro_sql": "{% macro default__nullcheck_table(relation) %}\n\n  {%- do dbt_utils._is_relation(relation, 'nullcheck_table') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'nullcheck_table') -%}\n  {% set cols = adapter.get_columns_in_relation(relation) %}\n\n  select {{ dbt_utils.nullcheck(cols) }}\n  from {{relation}}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.28223, "supported_languages": null}, "macro.dbt_utils.union_relations": {"name": "union_relations", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "unique_id": "macro.dbt_utils.union_relations", "macro_sql": "{%- macro union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation', where=none) -%}\n    {{ return(adapter.dispatch('union_relations', 'dbt_utils')(relations, column_override, include, exclude, source_column_name, where)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__union_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2835238, "supported_languages": null}, "macro.dbt_utils.default__union_relations": {"name": "default__union_relations", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "unique_id": "macro.dbt_utils.default__union_relations", "macro_sql": "\n\n{%- macro default__union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation', where=none) -%}\n\n    {%- if exclude and include -%}\n        {{ exceptions.raise_compiler_error(\"Both an exclude and include list were provided to the `union` macro. Only one is allowed\") }}\n    {%- endif -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. -#}\n    {%- if not execute %}\n        {{ return('') }}\n    {% endif -%}\n\n    {%- set column_override = column_override if column_override is not none else {} -%}\n\n    {%- set relation_columns = {} -%}\n    {%- set column_superset = {} -%}\n    {%- set all_excludes = [] -%}\n    {%- set all_includes = [] -%}\n\n    {%- if exclude -%}\n        {%- for exc in exclude -%}\n            {%- do all_excludes.append(exc | lower) -%}\n        {%- endfor -%}\n    {%- endif -%}\n\n    {%- if include -%}\n        {%- for inc in include -%}\n            {%- do all_includes.append(inc | lower) -%}\n        {%- endfor -%}\n    {%- endif -%}\n\n    {%- for relation in relations -%}\n\n        {%- do relation_columns.update({relation: []}) -%}\n\n        {%- do dbt_utils._is_relation(relation, 'union_relations') -%}\n        {%- do dbt_utils._is_ephemeral(relation, 'union_relations') -%}\n        {%- set cols = adapter.get_columns_in_relation(relation) -%}\n        {%- for col in cols -%}\n\n        {#- If an exclude list was provided and the column is in the list, do nothing -#}\n        {%- if exclude and col.column | lower in all_excludes -%}\n\n        {#- If an include list was provided and the column is not in the list, do nothing -#}\n        {%- elif include and col.column | lower not in all_includes -%}\n\n        {#- Otherwise add the column to the column superset -#}\n        {%- else -%}\n\n            {#- update the list of columns in this relation -#}\n            {%- do relation_columns[relation].append(col.column) -%}\n\n            {%- if col.column in column_superset -%}\n\n                {%- set stored = column_superset[col.column] -%}\n                {%- if col.is_string() and stored.is_string() and col.string_size() > stored.string_size() -%}\n\n                    {%- do column_superset.update({col.column: col}) -%}\n\n                {%- endif %}\n\n            {%- else -%}\n\n                {%- do column_superset.update({col.column: col}) -%}\n\n            {%- endif -%}\n\n        {%- endif -%}\n\n        {%- endfor -%}\n    {%- endfor -%}\n\n    {%- set ordered_column_names = column_superset.keys() -%}\n    {%- set dbt_command = flags.WHICH -%}\n\n\n    {% if dbt_command in ['run', 'build'] %}\n    {% if (include | length > 0 or exclude | length > 0) and not column_superset.keys() %}\n        {%- set relations_string -%}\n            {%- for relation in relations -%}\n                {{ relation.name }}\n            {%- if not loop.last %}, {% endif -%}\n            {%- endfor -%}\n        {%- endset -%}\n\n        {%- set error_message -%}\n            There were no columns found to union for relations {{ relations_string }}\n        {%- endset -%}\n\n        {{ exceptions.raise_compiler_error(error_message) }}\n    {%- endif -%}\n    {%- endif -%}\n\n    {%- for relation in relations %}\n\n        (\n            select\n\n                {%- if source_column_name is not none %}\n                cast({{ dbt.string_literal(relation) }} as {{ dbt.type_string() }}) as {{ source_column_name }},\n                {%- endif %}\n\n                {% for col_name in ordered_column_names -%}\n\n                    {%- set col = column_superset[col_name] %}\n                    {%- set col_type = column_override.get(col.column, col.data_type) %}\n                    {%- set col_name = adapter.quote(col_name) if col_name in relation_columns[relation] else 'null' %}\n                    cast({{ col_name }} as {{ col_type }}) as {{ col.quoted }} {% if not loop.last %},{% endif -%}\n\n                {%- endfor %}\n\n            from {{ relation }}\n\n            {% if where -%}\n            where {{ where }}\n            {%- endif %}\n        )\n\n        {% if not loop.last -%}\n            union all\n        {% endif -%}\n\n    {%- endfor -%}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.string_literal", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2879217, "supported_languages": null}, "macro.dbt_utils.nullcheck": {"name": "nullcheck", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "unique_id": "macro.dbt_utils.nullcheck", "macro_sql": "{% macro nullcheck(cols) %}\n    {{ return(adapter.dispatch('nullcheck', 'dbt_utils')(cols)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.288405, "supported_languages": null}, "macro.dbt_utils.default__nullcheck": {"name": "default__nullcheck", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "unique_id": "macro.dbt_utils.default__nullcheck", "macro_sql": "{% macro default__nullcheck(cols) %}\n{%- for col in cols %}\n\n    {% if col.is_string() -%}\n\n    nullif({{col.name}},'') as {{col.name}}\n\n    {%- else -%}\n\n    {{col.name}}\n\n    {%- endif -%}\n\n{%- if not loop.last -%} , {%- endif -%}\n\n{%- endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.288863, "supported_languages": null}, "macro.dbt_utils.pivot": {"name": "pivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "unique_id": "macro.dbt_utils.pivot", "macro_sql": "{% macro pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n    {{ return(adapter.dispatch('pivot', 'dbt_utils')(column, values, alias, agg, cmp, prefix, suffix, then_value, else_value, quote_identifiers, distinct)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pivot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2898827, "supported_languages": null}, "macro.dbt_utils.default__pivot": {"name": "default__pivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "unique_id": "macro.dbt_utils.default__pivot", "macro_sql": "{% macro default__pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n  {% for value in values %}\n    {{ agg }}(\n      {% if distinct %} distinct {% endif %}\n      case\n      when {{ column }} {{ cmp }} '{{ dbt.escape_single_quotes(value) }}'\n        then {{ then_value }}\n      else {{ else_value }}\n      end\n    )\n    {% if alias %}\n      {% if quote_identifiers %}\n            as {{ adapter.quote(prefix ~ value ~ suffix) }}\n      {% else %}\n        as {{ dbt_utils.slugify(prefix ~ value ~ suffix) }}\n      {% endif %}\n    {% endif %}\n    {% if not loop.last %},{% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.escape_single_quotes", "macro.dbt_utils.slugify"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2909384, "supported_languages": null}, "macro.dbt_utils.group_by": {"name": "group_by", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "unique_id": "macro.dbt_utils.group_by", "macro_sql": "{%- macro group_by(n) -%}\n    {{ return(adapter.dispatch('group_by', 'dbt_utils')(n)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__group_by"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.291325, "supported_languages": null}, "macro.dbt_utils.default__group_by": {"name": "default__group_by", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "unique_id": "macro.dbt_utils.default__group_by", "macro_sql": "\n\n{%- macro default__group_by(n) -%}\n\n  group by {% for i in range(1, n + 1) -%}\n      {{ i }}{{ ',' if not loop.last }}   \n   {%- endfor -%}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2916784, "supported_languages": null}, "macro.dbt_utils.get_column_values": {"name": "get_column_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "unique_id": "macro.dbt_utils.get_column_values", "macro_sql": "{% macro get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none, where=none) -%}\n    {{ return(adapter.dispatch('get_column_values', 'dbt_utils')(table, column, order_by, max_records, default, where)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_column_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2925432, "supported_languages": null}, "macro.dbt_utils.default__get_column_values": {"name": "default__get_column_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "unique_id": "macro.dbt_utils.default__get_column_values", "macro_sql": "{% macro default__get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none, where=none) -%}\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {% set default = [] if not default %}\n        {{ return(default) }}\n    {% endif %}\n\n    {%- do dbt_utils._is_ephemeral(table, 'get_column_values') -%}\n\n    {# Not all relations are tables. Renaming for internal clarity without breaking functionality for anyone using named arguments #}\n    {# TODO: Change the method signature in a future 0.x.0 release #}\n    {%- set target_relation = table -%}\n\n    {# adapter.load_relation is a convenience wrapper to avoid building a Relation when we already have one #}\n    {% set relation_exists = (load_relation(target_relation)) is not none %}\n\n    {%- call statement('get_column_values', fetch_result=true) %}\n\n        {%- if not relation_exists and default is none -%}\n\n          {{ exceptions.raise_compiler_error(\"In get_column_values(): relation \" ~ target_relation ~ \" does not exist and no default value was provided.\") }}\n\n        {%- elif not relation_exists and default is not none -%}\n\n          {{ log(\"Relation \" ~ target_relation ~ \" does not exist. Returning the default value: \" ~ default) }}\n\n          {{ return(default) }}\n\n        {%- else -%}\n\n\n            select\n                {{ column }} as value\n\n            from {{ target_relation }}\n\n            {% if where is not none %}\n            where {{ where }}\n            {% endif %}\n\n            group by {{ column }}\n            order by {{ order_by }}\n\n            {% if max_records is not none %}\n            limit {{ max_records }}\n            {% endif %}\n\n        {% endif %}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_column_values') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values) }}\n    {%- else -%}\n        {{ return(default) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_ephemeral", "macro.dbt.load_relation", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2944155, "supported_languages": null}, "macro.dbt_utils.get_single_value": {"name": "get_single_value", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_single_value.sql", "original_file_path": "macros/sql/get_single_value.sql", "unique_id": "macro.dbt_utils.get_single_value", "macro_sql": "{% macro get_single_value(query, default=none) %}\n    {{ return(adapter.dispatch('get_single_value', 'dbt_utils')(query, default)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_single_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2949605, "supported_languages": null}, "macro.dbt_utils.default__get_single_value": {"name": "default__get_single_value", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_single_value.sql", "original_file_path": "macros/sql/get_single_value.sql", "unique_id": "macro.dbt_utils.default__get_single_value", "macro_sql": "{% macro default__get_single_value(query, default) %}\n\n{# This macro returns the (0, 0) record in a query, i.e. the first row of the first column #}\n\n    {%- call statement('get_query_result', fetch_result=True, auto_begin=false) -%}\n\n        {{ query }}\n\n    {%- endcall -%}\n\n    {%- if execute -%}\n\n        {% set r = load_result('get_query_result').table.columns[0].values() %}\n        {% if r | length == 0 %}\n            {% do print('Query `' ~ query ~ '` returned no rows. Using the default value: ' ~ default) %}\n            {% set sql_result = default %}\n        {% else %}\n            {% set sql_result = r[0] %}\n        {% endif %}\n        \n    {%- else -%}\n    \n        {% set sql_result = default %}\n    \n    {%- endif -%}\n\n    {% do return(sql_result) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2959135, "supported_languages": null}, "macro.dbt_utils.degrees_to_radians": {"name": "degrees_to_radians", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.degrees_to_radians", "macro_sql": "{% macro degrees_to_radians(degrees) -%}\n    acos(-1) * {{degrees}} / 180\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2965035, "supported_languages": null}, "macro.dbt_utils.haversine_distance": {"name": "haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.haversine_distance", "macro_sql": "{% macro haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n    {{ return(adapter.dispatch('haversine_distance', 'dbt_utils')(lat1,lon1,lat2,lon2,unit)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__haversine_distance"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2968569, "supported_languages": null}, "macro.dbt_utils.default__haversine_distance": {"name": "default__haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.default__haversine_distance", "macro_sql": "{% macro default__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n\n    2 * 3961 * asin(sqrt(power((sin(radians(({{ lat2 }} - {{ lat1 }}) / 2))), 2) +\n    cos(radians({{lat1}})) * cos(radians({{lat2}})) *\n    power((sin(radians(({{ lon2 }} - {{ lon1 }}) / 2))), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2976105, "supported_languages": null}, "macro.dbt_utils.bigquery__haversine_distance": {"name": "bigquery__haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.bigquery__haversine_distance", "macro_sql": "{% macro bigquery__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{% set radians_lat1 = dbt_utils.degrees_to_radians(lat1) %}\n{% set radians_lat2 = dbt_utils.degrees_to_radians(lat2) %}\n{% set radians_lon1 = dbt_utils.degrees_to_radians(lon1) %}\n{% set radians_lon2 = dbt_utils.degrees_to_radians(lon2) %}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n    2 * 3961 * asin(sqrt(power(sin(({{ radians_lat2 }} - {{ radians_lat1 }}) / 2), 2) +\n    cos({{ radians_lat1 }}) * cos({{ radians_lat2 }}) *\n    power(sin(({{ radians_lon2 }} - {{ radians_lon1 }}) / 2), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.degrees_to_radians"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2986515, "supported_languages": null}, "macro.dbt_utils.get_relations_by_pattern": {"name": "get_relations_by_pattern", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "unique_id": "macro.dbt_utils.get_relations_by_pattern", "macro_sql": "{% macro get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_pattern', 'dbt_utils')(schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_pattern"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.2992647, "supported_languages": null}, "macro.dbt_utils.default__get_relations_by_pattern": {"name": "default__get_relations_by_pattern", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "unique_id": "macro.dbt_utils.default__get_relations_by_pattern", "macro_sql": "{% macro default__get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3003044, "supported_languages": null}, "macro.dbt_utils.get_table_types_sql": {"name": "get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.get_table_types_sql", "macro_sql": "{%- macro get_table_types_sql() -%}\n  {{ return(adapter.dispatch('get_table_types_sql', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_utils.default__get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3007617, "supported_languages": null}, "macro.dbt_utils.default__get_table_types_sql": {"name": "default__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.default__get_table_types_sql", "macro_sql": "{% macro default__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'EXTERNAL TABLE' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3009663, "supported_languages": null}, "macro.dbt_utils.postgres__get_table_types_sql": {"name": "postgres__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.postgres__get_table_types_sql", "macro_sql": "{% macro postgres__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'FOREIGN' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.301159, "supported_languages": null}, "macro.dbt_utils.databricks__get_table_types_sql": {"name": "databricks__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.databricks__get_table_types_sql", "macro_sql": "{% macro databricks__get_table_types_sql() %}\n            case table_type\n                when 'MANAGED' then 'table'\n                when 'BASE TABLE' then 'table'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3013442, "supported_languages": null}, "macro.dbt_utils.unpivot": {"name": "unpivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "unique_id": "macro.dbt_utils.unpivot", "macro_sql": "{% macro unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value') -%}\n    {{ return(adapter.dispatch('unpivot', 'dbt_utils')(relation, cast_to, exclude, remove, field_name, value_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__unpivot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3022058, "supported_languages": null}, "macro.dbt_utils.default__unpivot": {"name": "default__unpivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "unique_id": "macro.dbt_utils.default__unpivot", "macro_sql": "{% macro default__unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value') -%}\n\n    {% if not relation %}\n        {{ exceptions.raise_compiler_error(\"Error: argument `relation` is required for `unpivot` macro.\") }}\n    {% endif %}\n\n  {%- set exclude = exclude if exclude is not none else [] %}\n  {%- set remove = remove if remove is not none else [] %}\n\n  {%- set include_cols = [] %}\n\n  {%- set table_columns = {} %}\n\n  {%- do table_columns.update({relation: []}) %}\n\n  {%- do dbt_utils._is_relation(relation, 'unpivot') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'unpivot') -%}\n  {%- set cols = adapter.get_columns_in_relation(relation) %}\n\n  {%- for col in cols -%}\n    {%- if col.column.lower() not in remove|map('lower') and col.column.lower() not in exclude|map('lower') -%}\n      {% do include_cols.append(col) %}\n    {%- endif %}\n  {%- endfor %}\n\n\n  {%- for col in include_cols -%}\n    select\n      {%- for exclude_col in exclude %}\n        {{ exclude_col }},\n      {%- endfor %}\n\n      cast('{{ col.column }}' as {{ dbt.type_string() }}) as {{ field_name }},\n      cast(  {% if col.data_type == 'boolean' %}\n           {{ dbt.cast_bool_to_text(col.column) }}\n             {% else %}\n           {{ col.column }}\n             {% endif %}\n           as {{ cast_to }}) as {{ value_name }}\n\n    from {{ relation }}\n\n    {% if not loop.last -%}\n      union all\n    {% endif -%}\n  {%- endfor -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.type_string", "macro.dbt.cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3043854, "supported_languages": null}, "macro.dbt_utils.get_tables_by_prefix_sql": {"name": "get_tables_by_prefix_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "unique_id": "macro.dbt_utils.get_tables_by_prefix_sql", "macro_sql": "{% macro get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_prefix_sql', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3049386, "supported_languages": null}, "macro.dbt_utils.default__get_tables_by_prefix_sql": {"name": "default__get_tables_by_prefix_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "unique_id": "macro.dbt_utils.default__get_tables_by_prefix_sql", "macro_sql": "{% macro default__get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n\n    {{ dbt_utils.get_tables_by_pattern_sql(\n        schema_pattern = schema,\n        table_pattern = prefix ~ '%',\n        exclude = exclude,\n        database = database\n    ) }}\n    \n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.305297, "supported_languages": null}, "macro.dbt_utils.get_relations_by_prefix": {"name": "get_relations_by_prefix", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "unique_id": "macro.dbt_utils.get_relations_by_prefix", "macro_sql": "{% macro get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_prefix', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_prefix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.305899, "supported_languages": null}, "macro.dbt_utils.default__get_relations_by_prefix": {"name": "default__get_relations_by_prefix", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "unique_id": "macro.dbt_utils.default__get_relations_by_prefix", "macro_sql": "{% macro default__get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_prefix_sql(schema, prefix, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3069715, "supported_languages": null}, "macro.dbt_utils.safe_subtract": {"name": "safe_subtract", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_subtract.sql", "original_file_path": "macros/sql/safe_subtract.sql", "unique_id": "macro.dbt_utils.safe_subtract", "macro_sql": "{%- macro safe_subtract(field_list) -%}\n    {{ return(adapter.dispatch('safe_subtract', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_subtract"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.307414, "supported_languages": null}, "macro.dbt_utils.default__safe_subtract": {"name": "default__safe_subtract", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_subtract.sql", "original_file_path": "macros/sql/safe_subtract.sql", "unique_id": "macro.dbt_utils.default__safe_subtract", "macro_sql": "\n\n{%- macro default__safe_subtract(field_list) -%}\n\n{%- if field_list is not iterable or field_list is string or field_list is mapping -%}\n\n{%- set error_message = '\nWarning: the `safe_subtract` macro takes a single list argument instead of \\\nstring arguments. The {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.raise_compiler_error(error_message) -%}\n\n{%- endif -%}\n\n{% set fields = [] %}\n\n{%- for field in field_list -%}\n\n    {% do fields.append(\"coalesce(\" ~ field ~ \", 0)\") %}\n\n{%- endfor -%}\n\n{{ fields|join(' -\\n  ') }}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.308093, "supported_languages": null}, "macro.dbt_utils.safe_divide": {"name": "safe_divide", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_divide.sql", "original_file_path": "macros/sql/safe_divide.sql", "unique_id": "macro.dbt_utils.safe_divide", "macro_sql": "{% macro safe_divide(numerator, denominator) -%}\n  {{ return(adapter.dispatch('safe_divide', 'dbt_utils')(numerator, denominator)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_divide"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3084688, "supported_languages": null}, "macro.dbt_utils.default__safe_divide": {"name": "default__safe_divide", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_divide.sql", "original_file_path": "macros/sql/safe_divide.sql", "unique_id": "macro.dbt_utils.default__safe_divide", "macro_sql": "{% macro default__safe_divide(numerator, denominator) %}\n    ( {{ numerator }} ) / nullif( ( {{ denominator }} ), 0)\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3086517, "supported_languages": null}, "macro.dbt_utils.safe_add": {"name": "safe_add", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "unique_id": "macro.dbt_utils.safe_add", "macro_sql": "{%- macro safe_add(field_list) -%}\n    {{ return(adapter.dispatch('safe_add', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_add"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.309062, "supported_languages": null}, "macro.dbt_utils.default__safe_add": {"name": "default__safe_add", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "unique_id": "macro.dbt_utils.default__safe_add", "macro_sql": "\n\n{%- macro default__safe_add(field_list) -%}\n\n{%- if field_list is not iterable or field_list is string or field_list is mapping -%}\n\n{%- set error_message = '\nWarning: the `safe_add` macro now takes a single list argument instead of \\\nstring arguments. The {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.warn(error_message) -%}\n\n{%- endif -%}\n\n{% set fields = [] %}\n\n{%- for field in field_list -%}\n\n    {% do fields.append(\"coalesce(\" ~ field ~ \", 0)\") %}\n\n{%- endfor -%}\n\n{{ fields|join(' +\\n  ') }}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3097496, "supported_languages": null}, "macro.dbt_utils.width_bucket": {"name": "width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/width_bucket.sql", "original_file_path": "macros/sql/width_bucket.sql", "unique_id": "macro.dbt_utils.width_bucket", "macro_sql": "{% macro width_bucket(expr, min_value, max_value, num_buckets) %}\n  {{ return(adapter.dispatch('width_bucket', 'dbt_utils') (expr, min_value, max_value, num_buckets)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.snowflake__width_bucket"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3102934, "supported_languages": null}, "macro.dbt_utils.default__width_bucket": {"name": "default__width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/width_bucket.sql", "original_file_path": "macros/sql/width_bucket.sql", "unique_id": "macro.dbt_utils.default__width_bucket", "macro_sql": "{% macro default__width_bucket(expr, min_value, max_value, num_buckets) -%}\n\n    {% set bin_size -%}\n    (( {{ max_value }} - {{ min_value }} ) / {{ num_buckets }} )\n    {%- endset %}\n    (\n        -- to break ties when the amount is eaxtly at the bucket egde\n        case\n            when\n                mod(\n                    {{ dbt.safe_cast(expr, dbt.type_numeric() ) }},\n                    {{ dbt.safe_cast(bin_size, dbt.type_numeric() ) }}\n                ) = 0\n            then 1\n            else 0\n        end\n    ) +\n      -- Anything over max_value goes the N+1 bucket\n    least(\n        ceil(\n            ({{ expr }} - {{ min_value }})/{{ bin_size }}\n        ),\n        {{ num_buckets }} + 1\n    )\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.safe_cast", "macro.dbt.type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3108892, "supported_languages": null}, "macro.dbt_utils.snowflake__width_bucket": {"name": "snowflake__width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/width_bucket.sql", "original_file_path": "macros/sql/width_bucket.sql", "unique_id": "macro.dbt_utils.snowflake__width_bucket", "macro_sql": "{% macro snowflake__width_bucket(expr, min_value, max_value, num_buckets) %}\n    width_bucket({{ expr }}, {{ min_value }}, {{ max_value }}, {{ num_buckets }} )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3111393, "supported_languages": null}, "macro.dbt_utils.surrogate_key": {"name": "surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "unique_id": "macro.dbt_utils.surrogate_key", "macro_sql": "{%- macro surrogate_key(field_list) -%}\n    {% set frustrating_jinja_feature = varargs %}\n    {{ return(adapter.dispatch('surrogate_key', 'dbt_utils')(field_list, *varargs)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__surrogate_key"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.311584, "supported_languages": null}, "macro.dbt_utils.default__surrogate_key": {"name": "default__surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "unique_id": "macro.dbt_utils.default__surrogate_key", "macro_sql": "\n\n{%- macro default__surrogate_key(field_list) -%}\n\n{%- set error_message = '\nWarning: `dbt_utils.surrogate_key` has been replaced by \\\n`dbt_utils.generate_surrogate_key`. The new macro treats null values \\\ndifferently to empty strings. To restore the behaviour of the original \\\nmacro, add a global variable in dbt_project.yml called \\\n`surrogate_key_treat_nulls_as_empty_strings` to your \\\ndbt_project.yml file with a value of True. \\\nThe {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.raise_compiler_error(error_message) -%}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3118985, "supported_languages": null}, "macro.dbt_utils.get_intervals_between": {"name": "get_intervals_between", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt_utils')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3125136, "supported_languages": null}, "macro.dbt_utils.default__get_intervals_between": {"name": "default__get_intervals_between", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{ dbt.datediff(start_date, end_date, datepart) }}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3132887, "supported_languages": null}, "macro.dbt_utils.date_spine": {"name": "date_spine", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt_utils')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.313596, "supported_languages": null}, "macro.dbt_utils.default__date_spine": {"name": "default__date_spine", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n\n{# call as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dbt.dateadd(week, 1, current_date)\"\n) #}\n\n\nwith rawdata as (\n\n    {{dbt_utils.generate_series(\n        dbt_utils.get_intervals_between(start_date, end_date, datepart)\n    )}}\n\n),\n\nall_periods as (\n\n    select (\n        {{\n            dbt.dateadd(\n                datepart,\n                \"row_number() over (order by 1) - 1\",\n                start_date\n            )\n        }}\n    ) as date_{{datepart}}\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_{{datepart}} <= {{ end_date }}\n\n)\n\nselect * from filtered\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.generate_series", "macro.dbt_utils.get_intervals_between", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.314073, "supported_languages": null}, "macro.dbt_utils.star": {"name": "star", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "unique_id": "macro.dbt_utils.star", "macro_sql": "{% macro star(from, relation_alias=False, except=[], prefix='', suffix='', quote_identifiers=True) -%}\r\n    {{ return(adapter.dispatch('star', 'dbt_utils')(from, relation_alias, except, prefix, suffix, quote_identifiers)) }}\r\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__star"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.314962, "supported_languages": null}, "macro.dbt_utils.default__star": {"name": "default__star", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "unique_id": "macro.dbt_utils.default__star", "macro_sql": "{% macro default__star(from, relation_alias=False, except=[], prefix='', suffix='', quote_identifiers=True) -%}\r\n    {%- do dbt_utils._is_relation(from, 'star') -%}\r\n    {%- do dbt_utils._is_ephemeral(from, 'star') -%}\r\n\r\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\r\n    {%- if not execute -%}\r\n        {% do return('*') %}\r\n    {%- endif -%}\r\n\r\n    {% set cols = dbt_utils.get_filtered_columns_in_relation(from, except) %}\r\n\r\n    {%- if cols|length <= 0 -%}\r\n        {% if flags.WHICH == 'compile' %}\r\n            {% set response %}\r\n*\r\n/* No columns were returned. Maybe the relation doesn't exist yet \r\nor all columns were excluded. This star is only output during  \r\ndbt compile, and exists to keep SQLFluff happy. */\r\n            {% endset %}\r\n            {% do return(response) %}\r\n        {% else %}\r\n            {% do return(\"/* no columns returned from star() macro */\") %}\r\n        {% endif %}\r\n    {%- else -%}\r\n        {%- for col in cols %}\r\n            {%- if relation_alias %}{{ relation_alias }}.{% else %}{%- endif -%}\r\n                {%- if quote_identifiers -%}\r\n                    {{ adapter.quote(col)|trim }} {%- if prefix!='' or suffix!='' %} as {{ adapter.quote(prefix ~ col ~ suffix)|trim }} {%- endif -%}\r\n                {%- else -%}\r\n                    {{ col|trim }} {%- if prefix!='' or suffix!='' %} as {{ (prefix ~ col ~ suffix)|trim }} {%- endif -%}\r\n                {% endif %}\r\n            {%- if not loop.last %},{{ '\\n  ' }}{%- endif -%}\r\n        {%- endfor -%}\r\n    {% endif %}\r\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.get_filtered_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.316971, "supported_languages": null}, "macro.dbt_utils._is_ephemeral": {"name": "_is_ephemeral", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/_is_ephemeral.sql", "original_file_path": "macros/jinja_helpers/_is_ephemeral.sql", "unique_id": "macro.dbt_utils._is_ephemeral", "macro_sql": "{% macro _is_ephemeral(obj, macro) %}\n    {%- if obj.is_cte -%}\n        {% set ephemeral_prefix = api.Relation.add_ephemeral_prefix('') %}\n        {% if obj.name.startswith(ephemeral_prefix) %}\n            {% set model_name = obj.name[(ephemeral_prefix|length):] %}\n        {% else %}\n            {% set model_name = obj.name %}\n        {%- endif -%}\n        {% set error_message %}\nThe `{{ macro }}` macro cannot be used with ephemeral models, as it relies on the information schema.\n\n`{{ model_name }}` is an ephemeral model. Consider making it a view or table instead.\n        {% endset %}\n        {%- do exceptions.raise_compiler_error(error_message) -%}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3179452, "supported_languages": null}, "macro.dbt_utils.pretty_time": {"name": "pretty_time", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "unique_id": "macro.dbt_utils.pretty_time", "macro_sql": "{% macro pretty_time(format='%H:%M:%S') %}\n    {{ return(adapter.dispatch('pretty_time', 'dbt_utils')(format)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3183293, "supported_languages": null}, "macro.dbt_utils.default__pretty_time": {"name": "default__pretty_time", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "unique_id": "macro.dbt_utils.default__pretty_time", "macro_sql": "{% macro default__pretty_time(format='%H:%M:%S') %}\n    {{ return(modules.datetime.datetime.now().strftime(format)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3186014, "supported_languages": null}, "macro.dbt_utils._is_relation": {"name": "_is_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/_is_relation.sql", "original_file_path": "macros/jinja_helpers/_is_relation.sql", "unique_id": "macro.dbt_utils._is_relation", "macro_sql": "{% macro _is_relation(obj, macro) %}\n    {%- if not (obj is mapping and obj.get('metadata', {}).get('type', '').endswith('Relation')) -%}\n        {%- do exceptions.raise_compiler_error(\"Macro \" ~ macro ~ \" expected a Relation but received the value: \" ~ obj) -%}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.319174, "supported_languages": null}, "macro.dbt_utils.slugify": {"name": "slugify", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/slugify.sql", "original_file_path": "macros/jinja_helpers/slugify.sql", "unique_id": "macro.dbt_utils.slugify", "macro_sql": "{% macro slugify(string) %}\n\n{#- Lower case the string -#}\n{% set string = string | lower %}\n{#- Replace spaces and dashes with underscores -#}\n{% set string = modules.re.sub('[ -]+', '_', string) %}\n{#- Only take letters, numbers, and underscores -#}\n{% set string = modules.re.sub('[^a-z0-9_]+', '', string) %}\n{#- Prepends \"_\" if string begins with a number -#}\n{% set string = modules.re.sub('^[0-9]', '_' + string[0], string) %}\n\n{{ return(string) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3200004, "supported_languages": null}, "macro.dbt_utils.log_info": {"name": "log_info", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "unique_id": "macro.dbt_utils.log_info", "macro_sql": "{% macro log_info(message) %}\n    {{ return(adapter.dispatch('log_info', 'dbt_utils')(message)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__log_info"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3203242, "supported_languages": null}, "macro.dbt_utils.default__log_info": {"name": "default__log_info", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "unique_id": "macro.dbt_utils.default__log_info", "macro_sql": "{% macro default__log_info(message) %}\n    {{ log(dbt_utils.pretty_log_format(message), info=True) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3205554, "supported_languages": null}, "macro.dbt_utils.pretty_log_format": {"name": "pretty_log_format", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "unique_id": "macro.dbt_utils.pretty_log_format", "macro_sql": "{% macro pretty_log_format(message) %}\n    {{ return(adapter.dispatch('pretty_log_format', 'dbt_utils')(message)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.320898, "supported_languages": null}, "macro.dbt_utils.default__pretty_log_format": {"name": "default__pretty_log_format", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "unique_id": "macro.dbt_utils.default__pretty_log_format", "macro_sql": "{% macro default__pretty_log_format(message) %}\n    {{ return( dbt_utils.pretty_time() ~ ' + ' ~ message) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1746557616.3211176, "supported_languages": null}}, "docs": {"doc.dbt.__overview__": {"name": "__overview__", "resource_type": "doc", "package_name": "dbt", "path": "overview.md", "original_file_path": "docs/overview.md", "unique_id": "doc.dbt.__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--select` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/introduction)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [dbt Community](https://www.getdbt.com/community/) for questions and discussion"}, "doc.zdp_dbt_utils.create_replica_database": {"name": "create_replica_database", "resource_type": "doc", "package_name": "zdp_dbt_utils", "path": "feature_db/create_replica_database.md", "original_file_path": "macros/feature_db/create_replica_database.md", "unique_id": "doc.zdp_dbt_utils.create_replica_database", "block_contents": "DEPRECATED\nThis macro creates a zero copy clone for a replica database, that is used as differ in development environments\n\nTo use in the command line:\ndbt run-operation create_replica_database --args '{\"databases\": \"source_database_name:destination_database_name\"}'\nor\ndbt run-operation create_replica_database --args '{\"source_database\": \"source_database_name\", \"destination_database\": \"destination_database_name\"}'"}, "doc.zdp_dbt_utils.drop_feature_database": {"name": "drop_feature_database", "resource_type": "doc", "package_name": "zdp_dbt_utils", "path": "feature_db/drop_feature_database.md", "original_file_path": "macros/feature_db/drop_feature_database.md", "unique_id": "doc.zdp_dbt_utils.drop_feature_database", "block_contents": "This macro drops existing feature database\n\nTo use in the command line:\ndbt run-operation drop_feature_database --args '{\"feature_database\": \"feature_database\"}'"}, "doc.zdp_dbt_utils.cleanup_outdated_feature_db": {"name": "cleanup_outdated_feature_db", "resource_type": "doc", "package_name": "zdp_dbt_utils", "path": "feature_db/cleanup_outdated_feature_db.md", "original_file_path": "macros/feature_db/cleanup_outdated_feature_db.md", "unique_id": "doc.zdp_dbt_utils.cleanup_outdated_feature_db", "block_contents": "This macro dropes all Feature DBs and CI DBs that are older than provided time_to_live.\n\nTo use in the command line:\ndbt run-operation cleanup_outdated_feature_db --args '{\"time_to_live\": 60}'"}, "doc.zdp_dbt_utils.grants_on_feature_database": {"name": "grants_on_feature_database", "resource_type": "doc", "package_name": "zdp_dbt_utils", "path": "feature_db/grants_on_feature_database.md", "original_file_path": "macros/feature_db/grants_on_feature_database.md", "unique_id": "doc.zdp_dbt_utils.grants_on_feature_database", "block_contents": "This macro grants usage and select permissions on feature database to dev-dbt-role\n\nTo use in the command line:\ndbt run-operation grants_on_feature_database --args '{\"destination_database\": \"destination_database_name\"}'"}, "doc.zdp_dbt_utils.create_feature_database": {"name": "create_feature_database", "resource_type": "doc", "package_name": "zdp_dbt_utils", "path": "feature_db/create_feature_database.md", "original_file_path": "macros/feature_db/create_feature_database.md", "unique_id": "doc.zdp_dbt_utils.create_feature_database", "block_contents": "This macro creates a new empty database and grants all permissions to dbt Developer's role \n\nTo use in the command line:\ndbt run-operation create_feature_database --args '{\"feature_database\": \"feature_database\"}'"}}, "exposures": {}, "metrics": {}, "groups": {"group.cleansed_bq_archive.cleansed_bq_product_archive": {"name": "cleansed_bq_product_archive", "resource_type": "group", "package_name": "cleansed_bq_archive", "path": "bq_product_archive_models.yml", "original_file_path": "models/bq_product_archive_models.yml", "unique_id": "group.cleansed_bq_archive.cleansed_bq_product_archive", "owner": {"email": "eda_data_curation@zendesk.com", "name": "Data Curation Team"}}, "group.cleansed_bq_archive.cleansed_bq_archive": {"name": "cleansed_bq_archive", "resource_type": "group", "package_name": "cleansed_bq_archive", "path": "bq_archive_models.yml", "original_file_path": "models/bq_archive_models.yml", "unique_id": "group.cleansed_bq_archive.cleansed_bq_archive", "owner": {"email": "eda_data_curation@zendesk.com", "name": "Data Curation Team"}}}, "selectors": {}, "disabled": {}, "parent_map": {"model.cleansed_bq_archive.pdw_slas": ["source.cleansed_bq_archive.bq_product_archive.pdw_slas"], "model.cleansed_bq_archive.support_addresses": ["source.cleansed_bq_archive.bq_product_archive.support_addresses"], "model.cleansed_bq_archive.count_objects": ["source.cleansed_bq_archive.bq_product_archive.count_objects"], "model.cleansed_bq_archive.ticket_forms": ["source.cleansed_bq_archive.bq_product_archive.ticket_forms"], "model.cleansed_bq_archive.zuora_voice_usages": ["source.cleansed_bq_archive.bq_product_archive.pdw_zuora_voice_usages"], "model.cleansed_bq_archive.explore_users": ["source.cleansed_bq_archive.bq_product_archive.explore_users"], "model.cleansed_bq_archive.explore_dashboards": ["source.cleansed_bq_archive.bq_product_archive.explore_dashboards"], "model.cleansed_bq_archive.account_settings_events": ["source.cleansed_bq_archive.bq_product_archive.pdw_account_settings_events"], "model.cleansed_bq_archive.voice_details": ["source.cleansed_bq_archive.bq_product_archive.pdw_voice_details"], "model.cleansed_bq_archive.pdw_hc_usage": ["source.cleansed_bq_archive.bq_product_archive.pdw_hc_usage"], "model.cleansed_bq_archive.explore_accounts": ["source.cleansed_bq_archive.bq_product_archive.explore_accounts"], "model.cleansed_bq_archive.explore_dashboard_views": ["source.cleansed_bq_archive.bq_product_archive.explore_dashboard_views"], "model.cleansed_bq_archive.agent_email_addresses": ["source.cleansed_bq_archive.bq_product_archive.agent_email_addresses_2023_onward"], "model.cleansed_bq_archive.signals_metrics": ["source.cleansed_bq_archive.bq_product_archive.signals_metrics"], "model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_granular": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_granular"], "model.cleansed_bq_archive.tb_ws_cc_renewals_subterm_weighted": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_subterm_weighted"], "model.cleansed_bq_archive.tb_ws_cc_renewals_pacing_renewals": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_pacing_renewals"], "model.cleansed_bq_archive.tb_ws_cc_renewals_day_of_qtr": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_day_of_qtr"], "model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_summary": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_summary"], "model.cleansed_bq_archive.tb_ws_cc_renewals_qtrly_crm_dim": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_qtrly_crm_dim"], "model.cleansed_bq_archive.tb_ws_cc_renewals_future_renewals": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_future_renewals"], "model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_summary_yoy_union": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_summary_yoy_union"], "model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_granular_subtype": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_granular_subtype"], "model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_granular_grouped": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_granular_grouped"], "model.cleansed_bq_archive.tb_ws_cc_renewals_granular_arr_band": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_granular_arr_band"], "model.cleansed_bq_archive.tb_ws_cc_renewals_timestamp": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_timestamp"], "model.cleansed_bq_archive.tb_ws_cc_renewals_pacing": ["source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_pacing"], "model.cleansed_bq_archive.segment_marketing_website_identifies": ["source.cleansed_bq_archive.bq_archive_objects.segment_marketing_website_identifies"], "model.cleansed_bq_archive.website_register_lead_demo_request": ["source.cleansed_bq_archive.bq_archive_objects.website_register_lead_demo_request"], "model.cleansed_bq_archive.website_register_lead_contact_modal_submit": ["source.cleansed_bq_archive.bq_archive_objects.website_register_lead_contact_modal_submit"], "model.cleansed_bq_archive.website_trial_reg_account_creation_apirequest_succeed": ["source.cleansed_bq_archive.bq_archive_objects.website_trial_reg_account_creation_apirequest_succeed"], "model.cleansed_bq_archive.segment_marketing_website_experiment_viewed": ["source.cleansed_bq_archive.bq_archive_objects.segment_marketing_website_experiment_viewed"], "model.cleansed_bq_archive.website_register_lead_contact_form_widget": ["source.cleansed_bq_archive.bq_archive_objects.website_register_lead_contact_form_widget"], "model.cleansed_bq_archive.support_android_search_user_opened": ["source.cleansed_bq_archive.bq_archive_objects.support_android_search_user_opened"], "model.cleansed_bq_archive.support_android_rate_app_status": ["source.cleansed_bq_archive.bq_archive_objects.support_android_rate_app_status"], "model.cleansed_bq_archive.support_android_side_conversations_list_viewed": ["source.cleansed_bq_archive.bq_archive_objects.support_android_side_conversations_list_viewed"], "model.cleansed_bq_archive.support_android_user_profile_save_failed": ["source.cleansed_bq_archive.bq_archive_objects.support_android_user_profile_save_failed"], "model.cleansed_bq_archive.support_android_edit_user_profile_opened": ["source.cleansed_bq_archive.bq_archive_objects.support_android_edit_user_profile_opened"], "model.cleansed_bq_archive.support_android_search_opened": ["source.cleansed_bq_archive.bq_archive_objects.support_android_search_opened"], "model.cleansed_bq_archive.support_android_talk_status_opened": ["source.cleansed_bq_archive.bq_archive_objects.support_android_talk_status_opened"], "model.cleansed_bq_archive.support_android_force_update_dismissible_alert_update_tapped": ["source.cleansed_bq_archive.bq_archive_objects.support_android_force_update_dismissible_alert_update_tapped"], "model.cleansed_bq_archive.support_android_search_submitted": ["source.cleansed_bq_archive.bq_archive_objects.support_android_search_submitted"], "model.cleansed_bq_archive.support_android_merge_opened": ["source.cleansed_bq_archive.bq_archive_objects.support_android_merge_opened"], "model.cleansed_bq_archive.support_android_bulk_edit_submitted": ["source.cleansed_bq_archive.bq_archive_objects.support_android_bulk_edit_submitted"], "model.cleansed_bq_archive.support_android_ticket_viewed": ["source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_viewed"], "model.cleansed_bq_archive.support_android_quick_property_tapped": ["source.cleansed_bq_archive.bq_archive_objects.support_android_quick_property_tapped"], "model.cleansed_bq_archive.support_android_search_ticket_opened": ["source.cleansed_bq_archive.bq_archive_objects.support_android_search_ticket_opened"], "model.cleansed_bq_archive.support_android_merge_submitted": ["source.cleansed_bq_archive.bq_archive_objects.support_android_merge_submitted"], "model.cleansed_bq_archive.support_android_push_notification_received": ["source.cleansed_bq_archive.bq_archive_objects.support_android_push_notification_received"], "model.cleansed_bq_archive.support_android_ongoing_chat_conversation": ["source.cleansed_bq_archive.bq_archive_objects.support_android_ongoing_chat_conversation"], "model.cleansed_bq_archive.support_android_job_result": ["source.cleansed_bq_archive.bq_archive_objects.support_android_job_result"], "model.cleansed_bq_archive.support_android_force_update_non_dismissible_alert_presented": ["source.cleansed_bq_archive.bq_archive_objects.support_android_force_update_non_dismissible_alert_presented"], "model.cleansed_bq_archive.support_android_application_opened": ["source.cleansed_bq_archive.bq_archive_objects.support_android_application_opened"], "model.cleansed_bq_archive.support_android_comment_sort_order_changed": ["source.cleansed_bq_archive.bq_archive_objects.support_android_comment_sort_order_changed"], "model.cleansed_bq_archive.support_android_side_conversation_viewed": ["source.cleansed_bq_archive.bq_archive_objects.support_android_side_conversation_viewed"], "model.cleansed_bq_archive.support_android_comment_added": ["source.cleansed_bq_archive.bq_archive_objects.support_android_comment_added"], "model.cleansed_bq_archive.support_android_bulk_edit_opened": ["source.cleansed_bq_archive.bq_archive_objects.support_android_bulk_edit_opened"], "model.cleansed_bq_archive.support_android_macro_applied": ["source.cleansed_bq_archive.bq_archive_objects.support_android_macro_applied"], "model.cleansed_bq_archive.support_android_ticket_unsaved_changes_dialog": ["source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_unsaved_changes_dialog"], "model.cleansed_bq_archive.support_android_force_update_dismissible_alert_presented": ["source.cleansed_bq_archive.bq_archive_objects.support_android_force_update_dismissible_alert_presented"], "model.cleansed_bq_archive.segment_support_android_identifies": ["source.cleansed_bq_archive.bq_archive_objects.segment_support_android_identifies"], "model.cleansed_bq_archive.support_android_opened_view_management": ["source.cleansed_bq_archive.bq_archive_objects.support_android_opened_view_management"], "model.cleansed_bq_archive.support_android_user_profile_saved": ["source.cleansed_bq_archive.bq_archive_objects.support_android_user_profile_saved"], "model.cleansed_bq_archive.support_android_quick_merge_not_permitted": ["source.cleansed_bq_archive.bq_archive_objects.support_android_quick_merge_not_permitted"], "model.cleansed_bq_archive.support_android_push_notification_opened": ["source.cleansed_bq_archive.bq_archive_objects.support_android_push_notification_opened"], "model.cleansed_bq_archive.support_android_accessed_user_profile_via_avatar": ["source.cleansed_bq_archive.bq_archive_objects.support_android_accessed_user_profile_via_avatar"], "model.cleansed_bq_archive.support_android_talk_status_changed": ["source.cleansed_bq_archive.bq_archive_objects.support_android_talk_status_changed"], "model.cleansed_bq_archive.support_android_search_opened_pt": ["source.cleansed_bq_archive.bq_archive_objects.support_android_search_opened_pt"], "model.cleansed_bq_archive.support_android_form_opened": ["source.cleansed_bq_archive.bq_archive_objects.support_android_form_opened"], "model.cleansed_bq_archive.support_android_ticket_updated": ["source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_updated"], "model.cleansed_bq_archive.support_android_ticket_reply_type_changed": ["source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_reply_type_changed"], "model.cleansed_bq_archive.support_android_user_profile_created": ["source.cleansed_bq_archive.bq_archive_objects.support_android_user_profile_created"], "model.cleansed_bq_archive.support_android_search_organisation_opened": ["source.cleansed_bq_archive.bq_archive_objects.support_android_search_organisation_opened"], "model.cleansed_bq_archive.support_android_message_playback": ["source.cleansed_bq_archive.bq_archive_objects.support_android_message_playback"], "model.cleansed_bq_archive.support_android_ticket_created": ["source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_created"], "model.cleansed_bq_archive.support_android_properties_changed": ["source.cleansed_bq_archive.bq_archive_objects.support_android_properties_changed"], "model.cleansed_bq_archive.support_android_search_filter_tooltip_shown": ["source.cleansed_bq_archive.bq_archive_objects.support_android_search_filter_tooltip_shown"], "model.cleansed_bq_archive.eloqua__emailopen": ["source.cleansed_bq_archive.bq_archive_objects.eloqua__emailopen_jan_22_fw"], "model.cleansed_bq_archive.bizible_user_touchpoints": ["source.cleansed_bq_archive.bq_archive_objects.bizible_user_touchpoints"], "model.cleansed_bq_archive.tableau_events": ["source.cleansed_bq_archive.bq_archive_objects.tableau_events"], "model.cleansed_bq_archive.hg_insights_contract_view": ["source.cleansed_bq_archive.bq_archive_objects.hg_insights_contract_view"], "model.cleansed_bq_archive.eloqua__unsubscribe": ["source.cleansed_bq_archive.bq_archive_objects.eloqua__unsubscribe_jan_22_fw"], "model.cleansed_bq_archive.eloqua_curated": ["source.cleansed_bq_archive.bq_archive_objects.eloqua_curated"], "model.cleansed_bq_archive.eloqua__bounceback": ["source.cleansed_bq_archive.bq_archive_objects.eloqua__bounceback_jan_22_fw"], "model.cleansed_bq_archive.hg_insights_install_view": ["source.cleansed_bq_archive.bq_archive_objects.hg_insights_install_view"], "model.cleansed_bq_archive.bizible_costs": ["source.cleansed_bq_archive.bq_archive_objects.bizible_costs"], "model.cleansed_bq_archive.hg_insights_spend_view": ["source.cleansed_bq_archive.bq_archive_objects.hg_insights_spend_view"], "model.cleansed_bq_archive.contacts": ["source.cleansed_bq_archive.bq_archive_objects.eloqua__contacts_jan_22_fw"], "model.cleansed_bq_archive.eloqua__emailclickthrough": ["source.cleansed_bq_archive.bq_archive_objects.eloqua__emailclickthrough_jan_22_fw"], "model.cleansed_bq_archive.eloqua__emailsend": ["source.cleansed_bq_archive.bq_archive_objects.eloqua__emailsend_jan_22_fw"], "model.cleansed_bq_archive.central_admin_onboarding_panel_task_completion": ["source.cleansed_bq_archive.bq_archive_objects.central_admin_onboarding_panel_task_completion"], "model.cleansed_bq_archive.scheduled_pagerduty_incidents_monitors": ["source.cleansed_bq_archive.bq_archive_objects.scheduled_pagerduty_incidents_monitors"], "model.cleansed_bq_archive.SLA_Chat": ["source.cleansed_bq_archive.bq_archive_objects.SLA_Chat"], "model.cleansed_bq_archive.All_Premier_Accounts_2023_06_27T16_05_41": ["source.cleansed_bq_archive.bq_archive_objects.All_Premier_Accounts_2023_06_27T16_05_41"], "model.cleansed_bq_archive.pagerduty_alerts": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_alerts"], "model.cleansed_bq_archive.pagerduty_users": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_users"], "model.cleansed_bq_archive.IM_Incidents": ["source.cleansed_bq_archive.bq_archive_objects.IM_Incidents"], "model.cleansed_bq_archive.scheduled_pagerduty_incidents": ["source.cleansed_bq_archive.bq_archive_objects.scheduled_pagerduty_incidents"], "model.cleansed_bq_archive.pagerduty_service_orchestrations": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_service_orchestrations"], "model.cleansed_bq_archive.Historical_SLA_Chat": ["source.cleansed_bq_archive.bq_archive_objects.Historical_SLA_Chat"], "model.cleansed_bq_archive.Historical_SC_Canaries": ["source.cleansed_bq_archive.bq_archive_objects.Historical_SC_Canaries"], "model.cleansed_bq_archive.datadog_monitors": ["source.cleansed_bq_archive.bq_archive_objects.datadog_monitors"], "model.cleansed_bq_archive.pagerduty_business_services": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_business_services"], "model.cleansed_bq_archive.IBM_Customers": ["source.cleansed_bq_archive.bq_archive_objects.IBM_Customers"], "model.cleansed_bq_archive.All_Premier_Accounts": ["source.cleansed_bq_archive.bq_archive_objects.All_Premier_Accounts"], "model.cleansed_bq_archive.Historical_All_Premier_Accounts": ["source.cleansed_bq_archive.bq_archive_objects.Historical_All_Premier_Accounts"], "model.cleansed_bq_archive.scheduled_tech_tier_projects": ["source.cleansed_bq_archive.bq_archive_objects.scheduled_tech_tier_projects"], "model.cleansed_bq_archive.scheduled_tech_tier_team_hierarchy": ["source.cleansed_bq_archive.bq_archive_objects.scheduled_tech_tier_team_hierarchy"], "model.cleansed_bq_archive.scheduled_critical_services": ["source.cleansed_bq_archive.bq_archive_objects.scheduled_critical_services"], "model.cleansed_bq_archive.pagerduty_services": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_services"], "model.cleansed_bq_archive.pagerduty_logs": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_logs"], "model.cleansed_bq_archive.scheduled_cerebro_blend": ["source.cleansed_bq_archive.bq_archive_objects.scheduled_cerebro_blend"], "model.cleansed_bq_archive.pagerduty_event_orchestrations": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_event_orchestrations"], "model.cleansed_bq_archive.pagerduty_event_orchestration_routers": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_event_orchestration_routers"], "model.cleansed_bq_archive.pagerduty_escalation_policies": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_escalation_policies"], "model.cleansed_bq_archive.pagerduty_teams": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_teams"], "model.cleansed_bq_archive.scheduled_core_features": ["source.cleansed_bq_archive.bq_archive_objects.scheduled_core_features"], "model.cleansed_bq_archive.scheduled_monitor_metadata": ["source.cleansed_bq_archive.bq_archive_objects.scheduled_monitor_metadata"], "model.cleansed_bq_archive.pagerduty_schedules": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_schedules"], "model.cleansed_bq_archive.scheduled_unowned_projects": ["source.cleansed_bq_archive.bq_archive_objects.scheduled_unowned_projects"], "model.cleansed_bq_archive.pagerduty_incidents": ["source.cleansed_bq_archive.bq_archive_objects.pagerduty_incidents"], "model.cleansed_bq_archive.SC_Canaries": ["source.cleansed_bq_archive.bq_archive_objects.SC_Canaries"], "model.cleansed_bq_archive.cs_db_acctmngr_chat_accounts_tableau": ["source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_chat_accounts_tableau"], "model.cleansed_bq_archive.cs_db_acctmngr_master_tableau": ["source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_master_tableau"], "model.cleansed_bq_archive.cs_db_acctmngr_benchmark_tableau": ["source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_benchmark_tableau"], "model.cleansed_bq_archive.cs_db_acctmngr_wtdavg_median_tableau": ["source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_wtdavg_median_tableau"], "model.cleansed_bq_archive.cs_db_acctmngr_median_tableau": ["source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_median_tableau"], "model.cleansed_bq_archive.cs_db_acctmngr_chshacct_tableau": ["source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_chshacct_tableau"], "model.cleansed_bq_archive.acctmgrdash_full_list_of_accounts_tableau": ["source.cleansed_bq_archive.bq_archive_objects.acctmgrdash_full_list_of_accounts_tableau"], "model.cleansed_bq_archive.cs_db_acctmngr_utilization": ["source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_utilization"], "model.cleansed_bq_archive.cs_db_acctmngr_chshacct_tableau_preagg": ["source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_chshacct_tableau_preagg"], "model.cleansed_bq_archive.support_i_os_push_notification_opened": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_push_notification_opened"], "model.cleansed_bq_archive.support_i_os_search_submitted": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_search_submitted"], "model.cleansed_bq_archive.support_i_os_ticket_updated": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_ticket_updated"], "model.cleansed_bq_archive.support_i_os_user_profile_saved": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_user_profile_saved"], "model.cleansed_bq_archive.support_i_os_application_opened": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_application_opened"], "model.cleansed_bq_archive.support_i_os_bulk_edit_opened": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_bulk_edit_opened"], "model.cleansed_bq_archive.support_i_os_ticket_reply_type_changed": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_ticket_reply_type_changed"], "model.cleansed_bq_archive.support_i_os_bulk_edit_submitted": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_bulk_edit_submitted"], "model.cleansed_bq_archive.support_i_os_comment_added": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_comment_added"], "model.cleansed_bq_archive.support_i_os_edit_user_profile_opened": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_edit_user_profile_opened"], "model.cleansed_bq_archive.support_i_os_hc_tapped": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_hc_tapped"], "model.cleansed_bq_archive.support_i_os_opened_view_management": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_opened_view_management"], "model.cleansed_bq_archive.support_i_os_quick_property_tapped": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_quick_property_tapped"], "model.cleansed_bq_archive.support_i_os_user_profile_save_failed": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_user_profile_save_failed"], "model.cleansed_bq_archive.support_i_os_ticket_created": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_ticket_created"], "model.cleansed_bq_archive.support_i_os_macro_applied": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_macro_applied"], "model.cleansed_bq_archive.support_i_os_ongoing_chat_conversation": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_ongoing_chat_conversation"], "model.cleansed_bq_archive.support_i_os_comment_sort_order_changed": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_comment_sort_order_changed"], "model.cleansed_bq_archive.support_i_os_accessed_user_profile_via_avatar": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_accessed_user_profile_via_avatar"], "model.cleansed_bq_archive.support_i_os_merge_opened": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_merge_opened"], "model.cleansed_bq_archive.support_i_os_merge_submitted": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_merge_submitted"], "model.cleansed_bq_archive.support_i_os_talk_status_opened": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_talk_status_opened"], "model.cleansed_bq_archive.support_i_os_shortcut_menu_action": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_shortcut_menu_action"], "model.cleansed_bq_archive.support_i_os_search_opened": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_search_opened"], "model.cleansed_bq_archive.support_i_os_push_notification_received": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_push_notification_received"], "model.cleansed_bq_archive.support_i_os_talk_status_changed": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_talk_status_changed"], "model.cleansed_bq_archive.support_i_os_properties_changed": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_properties_changed"], "model.cleansed_bq_archive.support_i_os_form_opened": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_form_opened"], "model.cleansed_bq_archive.support_i_os_quick_merge_not_permitted": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_quick_merge_not_permitted"], "model.cleansed_bq_archive.support_i_os_user_profile_created": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_user_profile_created"], "model.cleansed_bq_archive.support_i_os_search_ticket_opened": ["source.cleansed_bq_archive.bq_archive_objects.support_i_os_search_ticket_opened"], "model.cleansed_bq_archive.zendesk_marketingweb_ga_sessions": ["source.cleansed_bq_archive.bq_archive_objects.zendesk_marketingweb_ga_sessions_2022_01_01"], "model.cleansed_bq_archive.eda_google_analytics__pages_v2": ["source.cleansed_bq_archive.bq_archive_objects.eda_google_analytics__pages_v2_2022_01_01"], "model.cleansed_bq_archive.zendesk_marketingweb_ga_pages": ["source.cleansed_bq_archive.bq_archive_objects.zendesk_marketingweb_ga_pages_2022_01_01"], "model.cleansed_bq_archive.eda_google_analytics__sessions_v2": ["source.cleansed_bq_archive.bq_archive_objects.eda_google_analytics__sessions_v2_2022_01_01"], "model.cleansed_bq_archive.google_analytics_curated": ["source.cleansed_bq_archive.bq_archive_objects.google_analytics_curated_2022_01_01"], "model.cleansed_bq_archive.sa_pipeline_movement": ["source.cleansed_bq_archive.bq_archive_objects.sa_pipeline_movement"], "model.cleansed_bq_archive.sa_recurring_revenue": ["source.cleansed_bq_archive.bq_archive_objects.sa_recurring_revenue"], "model.cleansed_bq_archive.sa_opps_dash": ["source.cleansed_bq_archive.bq_archive_objects.sa_opps_dash"], "model.cleansed_bq_archive.sa_ops_dash_pipegen": ["source.cleansed_bq_archive.bq_archive_objects.sa_ops_dash_pipegen"], "model.cleansed_bq_archive.int_tickets_raw": ["source.cleansed_bq_archive.bq_product_archive.int_tickets_raw"], "model.cleansed_bq_archive.billing_boost_start_trial_clicked": ["source.cleansed_bq_archive.bq_archive_objects.billing_boost_start_trial_clicked"], "model.cleansed_bq_archive.billing_cart_loaded": ["source.cleansed_bq_archive.bq_archive_objects.billing_cart_loaded"], "model.cleansed_bq_archive.billing_payment_loaded": ["source.cleansed_bq_archive.bq_archive_objects.billing_payment_loaded"], "model.cleansed_bq_archive.billing_promocode_submit": ["source.cleansed_bq_archive.bq_archive_objects.billing_promocode_submit"], "model.cleansed_bq_archive.billing_update_submit": ["source.cleansed_bq_archive.bq_archive_objects.billing_update_submit"], "model.cleansed_bq_archive.billing_quiz_started": ["source.cleansed_bq_archive.bq_archive_objects.billing_quiz_started"], "model.cleansed_bq_archive.billing_web_widget_loaded": ["source.cleansed_bq_archive.bq_archive_objects.billing_web_widget_loaded"], "model.cleansed_bq_archive.billing_cancellation_viewed": ["source.cleansed_bq_archive.bq_archive_objects.billing_cancellation_viewed"], "model.cleansed_bq_archive.billing_pause_subscription_confirmed": ["source.cleansed_bq_archive.bq_archive_objects.billing_pause_subscription_confirmed"], "model.cleansed_bq_archive.billing_subscription_viewed": ["source.cleansed_bq_archive.bq_archive_objects.billing_subscription_viewed"], "model.cleansed_bq_archive.billing_boost_upgrade_clicked": ["source.cleansed_bq_archive.bq_archive_objects.billing_boost_upgrade_clicked"], "model.cleansed_bq_archive.billing_boost_banner_clicked": ["source.cleansed_bq_archive.bq_archive_objects.billing_boost_banner_clicked"], "model.cleansed_bq_archive.billing_boost_banner_eligible": ["source.cleansed_bq_archive.bq_archive_objects.billing_boost_banner_eligible"], "model.cleansed_bq_archive.billing_pause_subscription_clicked": ["source.cleansed_bq_archive.bq_archive_objects.billing_pause_subscription_clicked"], "model.cleansed_bq_archive.billing_quiz_answer_submitted": ["source.cleansed_bq_archive.bq_archive_objects.billing_quiz_answer_submitted"], "model.cleansed_bq_archive.billing_customize_subscription": ["source.cleansed_bq_archive.bq_archive_objects.billing_customize_subscription"], "model.cleansed_bq_archive.billing_update_response": ["source.cleansed_bq_archive.bq_archive_objects.billing_update_response"], "model.cleansed_bq_archive.billing_cancellation_account_submit": ["source.cleansed_bq_archive.bq_archive_objects.billing_cancellation_account_submit"], "model.cleansed_bq_archive.billing_cancel_account_clicked": ["source.cleansed_bq_archive.bq_archive_objects.billing_cancel_account_clicked"], "model.cleansed_bq_archive.billing_boost_start_trial_confirmed": ["source.cleansed_bq_archive.bq_archive_objects.billing_boost_start_trial_confirmed"], "model.cleansed_bq_archive.sfdc_opp_scd2": ["source.cleansed_bq_archive.bq_archive_objects.sfdc_opp_scd2"], "model.cleansed_bq_archive.dashboard_global_pipeline_eoq_snapshot": ["source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_eoq_snapshot_may_to_mar"], "model.cleansed_bq_archive.markov_pipeline_attribution_model_results_channel_offer": ["source.cleansed_bq_archive.bq_archive_objects.updated_markov_pipeline_attribution_model_results_channel_offer"], "model.cleansed_bq_archive.markov_opps_base_channel_offer": ["source.cleansed_bq_archive.bq_archive_objects.markov_opps_base_channel_offer"], "model.cleansed_bq_archive.attribution_user_touchpoint": ["source.cleansed_bq_archive.bq_archive_objects.attribution_user_touchpoint_jan_mar"], "model.cleansed_bq_archive.bz_cost": ["source.cleansed_bq_archive.bq_archive_objects.bz_cost_jan_20_fw"], "model.cleansed_bq_archive.ss_markov_leads_base_table": ["source.cleansed_bq_archive.bq_archive_objects.ss_markov_leads_base_table"], "model.cleansed_bq_archive.dashboard_global_pipeline_productline_eoq_snapshot_v2": ["source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_productline_eoq_snapshot_v2_may_to_mar"], "model.cleansed_bq_archive.gpd_pipeline_age": ["source.cleansed_bq_archive.bq_archive_objects.gpd_pipeline_age_may_to_mar"], "model.cleansed_bq_archive.sfdc_opportunities": ["source.cleansed_bq_archive.bq_archive_objects.sfdc_opportunities"], "model.cleansed_bq_archive.marketing_non_api_raw_cost_regional_APAC": ["source.cleansed_bq_archive.bq_archive_objects.marketing_non_api_raw_cost_regional_apac"], "model.cleansed_bq_archive.gpd_weekly_target_snapshot": ["source.cleansed_bq_archive.bq_archive_objects.gpd_weekly_target_snapshot_may_to_mar"], "model.cleansed_bq_archive.sfdc_leads_touchpoint": ["source.cleansed_bq_archive.bq_archive_objects.sfdc_leads_touchpoint"], "model.cleansed_bq_archive.markov_attribution_leads_touchpoint": ["source.cleansed_bq_archive.bq_archive_objects.markov_attribution_leads_touchpoint"], "model.cleansed_bq_archive.marketing_non_api_raw_cost": ["source.cleansed_bq_archive.bq_archive_objects.marketing_non_api_raw_cost"], "model.cleansed_bq_archive.markov_opps_touchpoint_opps": ["source.cleansed_bq_archive.bq_archive_objects.markov_opps_touchpoint_opps"], "model.cleansed_bq_archive.dashboard_global_pipeline_coverage_trends_eoq_snapshot": ["source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_coverage_trends_eoq_snapshot_may_mar"], "model.cleansed_bq_archive.pipeline_coverage_targets_daily_snapshot": ["source.cleansed_bq_archive.bq_archive_objects.pipeline_coverage_targets_daily_snapshot_may_to_mar"], "model.cleansed_bq_archive.dgp_productline_week_close_dates_eoq_snapshot_v2": ["source.cleansed_bq_archive.bq_archive_objects.dgp_productline_week_close_dates_eoq_snapshot_v2_may_to_mar"], "model.cleansed_bq_archive.dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3": ["source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3_may_mar"], "model.cleansed_bq_archive.dashboard_pipeline_quality_snapshot": ["source.cleansed_bq_archive.bq_archive_objects.dashboard_pipeline_quality_snapshot_2022_01_01"], "model.cleansed_bq_archive.gpd_weekly_product_pipeline_age_snapshot_v2": ["source.cleansed_bq_archive.bq_archive_objects.gpd_weekly_product_pipeline_age_snapshot_v2_may_to_mar"], "model.cleansed_bq_archive.markov_attribution_opportunities_touchpoint": ["source.cleansed_bq_archive.bq_archive_objects.markov_attribution_opportunities_touchpoint"], "model.cleansed_bq_archive.sfdc_opportunities_touchpoint": ["source.cleansed_bq_archive.bq_archive_objects.sfdc_opportunities_touchpoint"], "model.cleansed_bq_archive.attribution_events": ["source.cleansed_bq_archive.bq_archive_objects.attribution_events"], "model.cleansed_bq_archive.pipeline_coverage_targets_product_daily_snapshot": ["source.cleansed_bq_archive.bq_archive_objects.pipeline_coverage_targets_product_daily_snapshot_may_to_mar"], "model.cleansed_bq_archive.marketing_non_api_raw_cost_historicals": ["source.cleansed_bq_archive.bq_archive_objects.marketing_non_api_raw_cost_historicals"], "model.cleansed_bq_archive.dgp_productline_week_dates_eoq_snapshot_v2": ["source.cleansed_bq_archive.bq_archive_objects.dgp_productline_week_dates_eoq_snapshot_v2_may_to_mar"], "model.cleansed_bq_archive.dashboard_pipeline_quality": ["source.cleansed_bq_archive.bq_archive_objects.dashboard_pipeline_quality"], "model.cleansed_bq_archive.segment_support_onboarding_panel_task_completion": ["source.cleansed_bq_archive.bq_archive_objects.segment_support_onboarding_panel_task_completion"], "model.cleansed_bq_archive.segment_support_groups": ["source.cleansed_bq_archive.bq_archive_objects.segment_support_groups"], "model.cleansed_bq_archive.views_expansion_banner_find_out_more_click": ["source.cleansed_bq_archive.bq_archive_objects.views_expansion_banner_find_out_more_click"], "model.cleansed_bq_archive.views_expansion_banner_try_it_for_free_click": ["source.cleansed_bq_archive.bq_archive_objects.views_expansion_banner_try_it_for_free_click"], "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_02_03": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_02_03"], "model.cleansed_bq_archive.overview_customer_arr": ["source.cleansed_bq_archive.bq_archive_objects.overview_customer_arr"], "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_01_01": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_01_01"], "model.cleansed_bq_archive.sell_payments_products": ["source.cleansed_bq_archive.bq_archive_objects.sell_payments_products"], "model.cleansed_bq_archive.eda_hob__subpo_bundled_task_1": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__subpo_bundled_task_1"], "model.cleansed_bq_archive.eda_hob__qtd_renewals_product_finance_adjusted_bundled": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_renewals_product_finance_adjusted_bundled"], "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_04": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_04"], "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_02": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_02"], "model.cleansed_bq_archive.eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag"], "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2024_10_03": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_10_03"], "model.cleansed_bq_archive.adjusted_change_sub_type_automated_list": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_automated_list"], "model.cleansed_bq_archive.adjusted_change_sub_type_usd_20231004": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_20231004"], "model.cleansed_bq_archive.sku_modernization_zuora_amendments": ["source.cleansed_bq_archive.bq_archive_objects.sku_modernization_zuora_amendments"], "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup": ["source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup"], "model.cleansed_bq_archive.agent_months_report_table": ["source.cleansed_bq_archive.bq_archive_objects.agent_months_report_table"], "model.cleansed_bq_archive.sfa_bookings_reporting_2024_07_02": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_07_02"], "model.cleansed_bq_archive.sfa_bookings_reporting_2023_10_04": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2023_10_04"], "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup_14sep": ["source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_14sep"], "model.cleansed_bq_archive.eda_hob__mtd_recurring_revenue_bundled": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__mtd_recurring_revenue_bundled"], "model.cleansed_bq_archive.sell_payments_subscription_products": ["source.cleansed_bq_archive.bq_archive_objects.sell_payments_subscription_products"], "model.cleansed_bq_archive.eda_hob__dod_recurring_revenue_bundled": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__dod_recurring_revenue_bundled"], "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_01_05": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_01_05"], "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2024_01_04": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_01_04"], "model.cleansed_bq_archive.sfa_bookings_reporting_2025_02_03": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_02_03"], "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_05": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_05"], "model.cleansed_bq_archive.ab_test_stratifiedsamples": ["source.cleansed_bq_archive.bq_archive_objects.ab_test_stratifiedsamples"], "model.cleansed_bq_archive.sfa_bookings_reporting_2024_10_01": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_10_01"], "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_03_03": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_03_03"], "model.cleansed_bq_archive.curated_opportunities": ["source.cleansed_bq_archive.bq_archive_objects.curated_opportunities"], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup"], "model.cleansed_bq_archive.eda_hob__subpo_bundled": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__subpo_bundled"], "model.cleansed_bq_archive.change_sub_type_usd_2024_01_04": ["source.cleansed_bq_archive.bq_archive_objects.change_sub_type_usd_2024_01_04"], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06"], "model.cleansed_bq_archive.sell_payments_subscriptions": ["source.cleansed_bq_archive.bq_archive_objects.sell_payments_subscriptions"], "model.cleansed_bq_archive.sfa_bookings_reporting_2024_10_03": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_10_03"], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05"], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04"], "model.cleansed_bq_archive.eda_hob__legacy_sell_01_account": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__legacy_sell_01_account"], "model.cleansed_bq_archive.sfa_bookings_reporting_2025_03_03": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_03_03"], "model.cleansed_bq_archive.smoochforce_plans_smooch__c_scd2": ["source.cleansed_bq_archive.bq_archive_objects.smoochforce_plans_smooch__c_scd2"], "model.cleansed_bq_archive.cohort_point_in_time_15_jan": ["source.cleansed_bq_archive.bq_archive_objects.cohort_point_in_time_15_jan"], "model.cleansed_bq_archive.new_productrateplancharge": ["source.cleansed_bq_archive.bq_archive_objects.new_productrateplancharge"], "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_23": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_23"], "model.cleansed_bq_archive.crm_dim_2025_market_segment": ["source.cleansed_bq_archive.bq_archive_objects.crm_dim_2025_market_segment"], "model.cleansed_bq_archive.sam_summary": ["source.cleansed_bq_archive.bq_archive_objects.sam_summary"], "model.cleansed_bq_archive.sfa_bookings_reporting_2025_03_01": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_03_01"], "model.cleansed_bq_archive.ab_test_sample": ["source.cleansed_bq_archive.bq_archive_objects.ab_test_sample"], "model.cleansed_bq_archive.smoochforce_account_scd2": ["source.cleansed_bq_archive.bq_archive_objects.smoochforce_account_scd2"], "model.cleansed_bq_archive.sfa_bookings_reporting_2024_07_01": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_07_01"], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03"], "model.cleansed_bq_archive.qtd_recurring_revenue_month_end_and_current_snapshot": ["source.cleansed_bq_archive.bq_archive_objects.qtd_recurring_revenue_month_end_and_current_snapshot"], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03"], "model.cleansed_bq_archive.sfa_bookings_reporting_2024_04_03": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_04_03"], "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup_29april": ["source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_29april"], "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2024_07_01": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_07_01"], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04"], "model.cleansed_bq_archive.dod_change_sub_type_po_level": ["source.cleansed_bq_archive.bq_archive_objects.dod_change_sub_type_po_level"], "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_01": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_01"], "model.cleansed_bq_archive.curated_bookings": ["source.cleansed_bq_archive.bq_archive_objects.curated_bookings"], "model.cleansed_bq_archive.eda_hob__legacy_sell_06_subpo": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__legacy_sell_06_subpo"], "model.cleansed_bq_archive.sfa_bookings_reporting_2023_04_04": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2023_04_04"], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03"], "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_06": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_06"], "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2024_04_03": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_04_03"], "model.cleansed_bq_archive.eda_hob__yoy_recurring_revenue_bundled": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__yoy_recurring_revenue_bundled"], "model.cleansed_bq_archive.customer_dim_scd2": ["source.cleansed_bq_archive.bq_archive_objects.customer_dim_scd2"], "model.cleansed_bq_archive.curated_bookings_snapshot": ["source.cleansed_bq_archive.bq_archive_objects.curated_bookings_snapshot"], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01"], "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_03": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_03"], "model.cleansed_bq_archive.eda_hob__price_ramp_adjustments_prep": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__price_ramp_adjustments_prep"], "model.cleansed_bq_archive.change_sub_type_usd_2024_07_03": ["source.cleansed_bq_archive.bq_archive_objects.change_sub_type_usd_2024_07_03"], "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_18april": ["source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_18april"], "model.cleansed_bq_archive.sell_payments_trials": ["source.cleansed_bq_archive.bq_archive_objects.sell_payments_trials"], "model.cleansed_bq_archive.sam_monthly_usage": ["source.cleansed_bq_archive.bq_archive_objects.sam_monthly_usage"], "model.cleansed_bq_archive.p0_master_dashboard_backfill": ["source.cleansed_bq_archive.bq_archive_objects.p0_master_dashboard_backfill"], "model.cleansed_bq_archive.qtd_product_finance_adj_month_end_and_current_snapshot": ["source.cleansed_bq_archive.bq_archive_objects.qtd_product_finance_adj_month_end_and_current_snapshot"], "model.cleansed_bq_archive.agent_months_arr": ["source.cleansed_bq_archive.bq_archive_objects.agent_months_arr"], "model.cleansed_bq_archive.sam_usage_by_email_table": ["source.cleansed_bq_archive.bq_archive_objects.sam_usage_by_email_table"], "model.cleansed_bq_archive.sfa_bookings_reporting_2024_07_03": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_07_03"], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05"], "model.cleansed_bq_archive.am_usage_by_instance_by_email_v2": ["source.cleansed_bq_archive.bq_archive_objects.am_usage_by_instance_by_email_v2"], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03"], "model.cleansed_bq_archive.change_sub_type_yx_usd": ["source.cleansed_bq_archive.bq_archive_objects.change_sub_type_yx_usd"], "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304": ["source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304"], "model.cleansed_bq_archive.new_productrateplanchargetier": ["source.cleansed_bq_archive.bq_archive_objects.new_productrateplanchargetier"], "model.cleansed_bq_archive.adjusted_change_sub_type_usd": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd"], "model.cleansed_bq_archive.sfa_bookings_reporting_2023_07_04": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2023_07_04"], "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup_11June": ["source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_11June"], "model.cleansed_bq_archive.eda_hob__yoy_renewals_crm_finance_adjusted_bundled": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__yoy_renewals_crm_finance_adjusted_bundled"], "model.cleansed_bq_archive.eda_hob__qtd_recurring_revenue_bundled": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_recurring_revenue_bundled"], "model.cleansed_bq_archive.eda_hob__never_paid_accounts": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__never_paid_accounts"], "model.cleansed_bq_archive.smoochforce_opportunityhistory_scd2": ["source.cleansed_bq_archive.bq_archive_objects.smoochforce_opportunityhistory_scd2"], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04"], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01"], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03"], "model.cleansed_bq_archive.top10_geo_amsam": ["source.cleansed_bq_archive.bq_archive_objects.top10_geo_amsam"], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03"], "model.cleansed_bq_archive.sfa_bookings_reporting_2024_01_04": ["source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_01_04"], "model.cleansed_bq_archive.cohort_point_in_time": ["source.cleansed_bq_archive.bq_archive_objects.cohort_point_in_time"], "model.cleansed_bq_archive.smoochforce_opportunity_scd2": ["source.cleansed_bq_archive.bq_archive_objects.smoochforce_opportunity_scd2"], "model.cleansed_bq_archive.eda_hob__qtd_renewals_crm_finance_adjusted_bundled": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_renewals_crm_finance_adjusted_bundled"], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02"], "model.cleansed_bq_archive.eda_hob__crm_dim": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__crm_dim"], "model.cleansed_bq_archive.p0_master_dashboard_crm": ["source.cleansed_bq_archive.bq_archive_objects.p0_master_dashboard_crm"], "model.cleansed_bq_archive.eda_hob__crm_pro_forma_market_segment_previous_versions": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__crm_pro_forma_market_segment_previous_versions"], "model.cleansed_bq_archive.p0_master_dashboard": ["source.cleansed_bq_archive.bq_archive_objects.p0_master_dashboard"], "model.cleansed_bq_archive.sam_daily_usage": ["source.cleansed_bq_archive.bq_archive_objects.sam_daily_usage"], "model.cleansed_bq_archive.eda_hob__curated_user": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__curated_user"], "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup_31May": ["source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_31May"], "model.cleansed_bq_archive.eda_hob__yoy_renewals_product_finance_adjusted_bundled": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__yoy_renewals_product_finance_adjusted_bundled"], "model.cleansed_bq_archive.sell_core_accounts": ["source.cleansed_bq_archive.bq_archive_objects.sell_core_accounts"], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02": ["source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02"], "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_01_06": ["source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_01_06"], "model.cleansed_bq_archive.eda_hob__customer_age_bundled": ["source.cleansed_bq_archive.bq_archive_objects.eda_hob__customer_age_bundled"], "model.cleansed_bq_archive.GTM_top_10_omnichannel_routing_edw_copy": ["source.cleansed_bq_archive.bq_archive_objects.GTM_top_10_omnichannel_routing_edw_copy"], "model.cleansed_bq_archive.product_data_ml_usage_frontend_events": ["source.cleansed_bq_archive.bq_product_archive.product_data_ml_usage_frontend_events"], "model.cleansed_bq_archive.pendo__garden_reporting": ["source.cleansed_bq_archive.bq_product_archive.pendo__garden_reporting_jan_22_fw"], "model.cleansed_bq_archive.tfa_weighted_sunshine_conversations": ["source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_sunshine_conversations"], "model.cleansed_bq_archive.product_data_flow_director_conversations_activity": ["source.cleansed_bq_archive.bq_product_archive.product_data_flow_director_conversations_activity"], "model.cleansed_bq_archive.ex_usage_us_02_28_2025": ["source.cleansed_bq_archive.bq_product_archive.ex_usage_us_02_28_2025"], "model.cleansed_bq_archive.product_data_generative_answers": ["source.cleansed_bq_archive.bq_product_archive.product_data_generative_answers"], "model.cleansed_bq_archive.all_instance_provisioned_and_active_agents": ["source.cleansed_bq_archive.bq_product_archive.all_instance_provisioned_and_active_agents"], "model.cleansed_bq_archive.dlc_ola_policies": ["source.cleansed_bq_archive.bq_product_archive.dlc_ola_policies"], "model.cleansed_bq_archive.product_data_sla_ticket_policies": ["source.cleansed_bq_archive.bq_product_archive.product_data_sla_ticket_policies"], "model.cleansed_bq_archive.product_data_machine_learning_triage_deflections": ["source.cleansed_bq_archive.bq_product_archive.product_data_machine_learning_triage_deflections"], "model.cleansed_bq_archive.rules": ["source.cleansed_bq_archive.bq_product_archive.rules"], "model.cleansed_bq_archive.tfa_weighted_sell": ["source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_sell"], "model.cleansed_bq_archive.layout_builder_service_layouts": ["source.cleansed_bq_archive.bq_product_archive.layout_builder_service_layouts"], "model.cleansed_bq_archive.accounts_settings": ["source.cleansed_bq_archive.bq_product_archive.accounts_settings"], "model.cleansed_bq_archive.feature_tables_tickets_backfill": ["source.cleansed_bq_archive.bq_product_archive.feature_tables_tickets_backfill"], "model.cleansed_bq_archive.dip_athena_data_lake_sunshine_conversations_pda_m_created": ["source.cleansed_bq_archive.bq_archive_objects.dip_athena_data_lake_sunshine_conversations_pda_m_created"], "model.cleansed_bq_archive.product_data_mcs_feedback": ["source.cleansed_bq_archive.bq_product_archive.product_data_mcs_feedback"], "model.cleansed_bq_archive.lynx_machine_learning_usage_llm_features": ["source.cleansed_bq_archive.bq_product_archive.lynx_machine_learning_usage_llm_features"], "model.cleansed_bq_archive.account_dashboard_master": ["source.cleansed_bq_archive.bq_product_archive.account_dashboard_master"], "model.cleansed_bq_archive.dip_athena_product_data_flow_director_conversations_activity": ["source.cleansed_bq_archive.bq_product_archive.dip_athena_product_data_flow_director_conversations_activity"], "model.cleansed_bq_archive.ticket_deflections_events": ["source.cleansed_bq_archive.bq_product_archive.ticket_deflections_events"], "model.cleansed_bq_archive.data_lake_classic_webhooks": ["source.cleansed_bq_archive.bq_product_archive.data_lake_classic_webhooks"], "model.cleansed_bq_archive.dlc_custom_objects": ["source.cleansed_bq_archive.bq_product_archive.dlc_custom_objects"], "model.cleansed_bq_archive.roles": ["source.cleansed_bq_archive.bq_product_archive.roles"], "model.cleansed_bq_archive.ex_customer_base": ["source.cleansed_bq_archive.bq_product_archive.ex_customer_base"], "model.cleansed_bq_archive.dip_athena_data_lake_sunshine_conversations_non_pda_m_created": ["source.cleansed_bq_archive.bq_archive_objects.dip_athena_data_lake_sunshine_conversations_non_pda_m_created"], "model.cleansed_bq_archive.apps": ["source.cleansed_bq_archive.bq_product_archive.apps"], "model.cleansed_bq_archive.tfa_weighted_guide": ["source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_guide"], "model.cleansed_bq_archive.product_data_automated_triage_daily_summary": ["source.cleansed_bq_archive.bq_product_archive.product_data_automated_triage_daily_summary"], "model.cleansed_bq_archive.workspaces": ["source.cleansed_bq_archive.bq_product_archive.workspaces"], "model.cleansed_bq_archive.tfa_weighted_talk": ["source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_talk"], "model.cleansed_bq_archive.feature_tables_tickets_post_jan2022": ["source.cleansed_bq_archive.bq_product_archive.feature_tables_tickets_post_jan2022"], "model.cleansed_bq_archive.skus": ["source.cleansed_bq_archive.bq_product_archive.skus"], "model.cleansed_bq_archive.app_installs": ["source.cleansed_bq_archive.bq_product_archive.app_installs"], "model.cleansed_bq_archive.tfa_weighted_chat_lc": ["source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_chat_lc"], "model.cleansed_bq_archive.tfa_weighted_chat_voltron": ["source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_chat_voltron"], "model.cleansed_bq_archive.dhco_platform_custom_objects_records": ["source.cleansed_bq_archive.bq_product_archive.dhco_platform_custom_objects_records"], "model.cleansed_bq_archive.data_lake_classic_webhooks_backfill": ["source.cleansed_bq_archive.bq_product_archive.data_lake_classic_webhooks_backfill"], "model.cleansed_bq_archive.user_dim_historic": ["source.cleansed_bq_archive.bq_product_archive.user_dim_historic"], "model.cleansed_bq_archive.z2_raw_sla_policies": ["source.cleansed_bq_archive.bq_product_archive.z2_raw_sla_policies"], "model.cleansed_bq_archive.tfa_weighted_support": ["source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_support"], "model.cleansed_bq_archive.custom_statuses": ["source.cleansed_bq_archive.bq_product_archive.custom_statuses"], "model.cleansed_bq_archive.rules_granular_daily_history": ["source.cleansed_bq_archive.bq_archive_objects.rules_granular_daily_history"], "model.cleansed_bq_archive.classic_object_layouts": ["source.cleansed_bq_archive.bq_product_archive.classic_object_layouts"], "model.cleansed_bq_archive.agent_entitlements": ["source.cleansed_bq_archive.bq_product_archive.agent_entitlements"], "model.cleansed_bq_archive.product_data_automatic_triage_adoption": ["source.cleansed_bq_archive.bq_product_archive.product_data_automatic_triage_adoption"], "model.cleansed_bq_archive.dlc_ola_ticket_policies": ["source.cleansed_bq_archive.bq_product_archive.dlc_ola_ticket_policies"], "source.cleansed_bq_archive.bq_archive_objects.am_usage_by_instance_by_email_v2": [], "source.cleansed_bq_archive.bq_archive_objects.agent_months_report_table": [], "source.cleansed_bq_archive.bq_archive_objects.sam_monthly_usage": [], "source.cleansed_bq_archive.bq_archive_objects.sam_daily_usage": [], "source.cleansed_bq_archive.bq_archive_objects.sam_summary": [], "source.cleansed_bq_archive.bq_archive_objects.sam_usage_by_email_table": [], "source.cleansed_bq_archive.bq_archive_objects.agent_months_arr": [], "source.cleansed_bq_archive.bq_archive_objects.top10_geo_amsam": [], "source.cleansed_bq_archive.bq_archive_objects.overview_customer_arr": [], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__crm_dim": [], "source.cleansed_bq_archive.bq_archive_objects.customer_dim_scd2": [], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__legacy_sell_01_account": [], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__legacy_sell_06_subpo": [], "source.cleansed_bq_archive.bq_archive_objects.sell_core_accounts": [], "source.cleansed_bq_archive.bq_archive_objects.sell_payments_subscriptions": [], "source.cleansed_bq_archive.bq_archive_objects.sell_payments_trials": [], "source.cleansed_bq_archive.bq_archive_objects.sell_payments_products": [], "source.cleansed_bq_archive.bq_archive_objects.sell_payments_subscription_products": [], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__dod_recurring_revenue_bundled": [], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__mtd_recurring_revenue_bundled": [], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_recurring_revenue_bundled": [], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag": [], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_renewals_crm_finance_adjusted_bundled": [], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_renewals_product_finance_adjusted_bundled": [], "source.cleansed_bq_archive.bq_archive_objects.qtd_recurring_revenue_month_end_and_current_snapshot": [], "source.cleansed_bq_archive.bq_archive_objects.qtd_product_finance_adj_month_end_and_current_snapshot": [], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__yoy_recurring_revenue_bundled": [], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__yoy_renewals_product_finance_adjusted_bundled": [], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__yoy_renewals_crm_finance_adjusted_bundled": [], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__never_paid_accounts": [], "source.cleansed_bq_archive.bq_archive_objects.curated_bookings": [], "source.cleansed_bq_archive.bq_archive_objects.curated_bookings_snapshot": [], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__subpo_bundled": [], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__subpo_bundled_task_1": [], "source.cleansed_bq_archive.bq_archive_objects.change_sub_type_yx_usd": [], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd": [], "source.cleansed_bq_archive.bq_archive_objects.dod_change_sub_type_po_level": [], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__customer_age_bundled": [], "source.cleansed_bq_archive.bq_archive_objects.smoochforce_account_scd2": [], "source.cleansed_bq_archive.bq_archive_objects.smoochforce_opportunityhistory_scd2": [], "source.cleansed_bq_archive.bq_archive_objects.smoochforce_opportunity_scd2": [], "source.cleansed_bq_archive.bq_archive_objects.smoochforce_plans_smooch__c_scd2": [], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__price_ramp_adjustments_prep": [], "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_11June": [], "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_31May": [], "source.cleansed_bq_archive.bq_archive_objects.cohort_point_in_time": [], "source.cleansed_bq_archive.bq_archive_objects.cohort_point_in_time_15_jan": [], "source.cleansed_bq_archive.bq_archive_objects.new_productrateplancharge": [], "source.cleansed_bq_archive.bq_archive_objects.new_productrateplanchargetier": [], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_20231004": [], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_01_04": [], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_07_01": [], "source.cleansed_bq_archive.bq_archive_objects.change_sub_type_usd_2024_01_04": [], "source.cleansed_bq_archive.bq_archive_objects.change_sub_type_usd_2024_07_03": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2023_04_04": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2023_07_04": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2023_10_04": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_01_04": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_04_03": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_07_03": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03": [], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_automated_list": [], "source.cleansed_bq_archive.bq_archive_objects.sku_modernization_zuora_amendments": [], "source.cleansed_bq_archive.bq_archive_objects.curated_opportunities": [], "source.cleansed_bq_archive.bq_archive_objects.p0_master_dashboard": [], "source.cleansed_bq_archive.bq_archive_objects.hg_insights_contract_view": [], "source.cleansed_bq_archive.bq_archive_objects.hg_insights_install_view": [], "source.cleansed_bq_archive.bq_archive_objects.hg_insights_spend_view": [], "source.cleansed_bq_archive.bq_archive_objects.bizible_user_touchpoints": [], "source.cleansed_bq_archive.bq_archive_objects.eloqua__emailsend_jan_22_fw": [], "source.cleansed_bq_archive.bq_archive_objects.eloqua__emailopen_jan_22_fw": [], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__crm_pro_forma_market_segment_previous_versions": [], "source.cleansed_bq_archive.bq_archive_objects.crm_dim_2025_market_segment": [], "source.cleansed_bq_archive.bq_archive_objects.eloqua__emailclickthrough_jan_22_fw": [], "source.cleansed_bq_archive.bq_archive_objects.bizible_costs": [], "source.cleansed_bq_archive.bq_archive_objects.tableau_events": [], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__curated_user": [], "source.cleansed_bq_archive.bq_archive_objects.attribution_events": [], "source.cleansed_bq_archive.bq_archive_objects.markov_attribution_opportunities_touchpoint": [], "source.cleansed_bq_archive.bq_archive_objects.markov_opps_base_channel_offer": [], "source.cleansed_bq_archive.bq_archive_objects.markov_opps_touchpoint_opps": [], "source.cleansed_bq_archive.bq_archive_objects.ss_markov_leads_base_table": [], "source.cleansed_bq_archive.bq_archive_objects.markov_attribution_leads_touchpoint": [], "source.cleansed_bq_archive.bq_archive_objects.marketing_non_api_raw_cost": [], "source.cleansed_bq_archive.bq_archive_objects.marketing_non_api_raw_cost_historicals": [], "source.cleansed_bq_archive.bq_archive_objects.attribution_user_touchpoint_jan_mar": [], "source.cleansed_bq_archive.bq_archive_objects.sfdc_opportunities_touchpoint": [], "source.cleansed_bq_archive.bq_archive_objects.sfdc_leads_touchpoint": [], "source.cleansed_bq_archive.bq_archive_objects.bz_cost_jan_20_fw": [], "source.cleansed_bq_archive.bq_archive_objects.sfdc_opportunities": [], "source.cleansed_bq_archive.bq_archive_objects.sfdc_opp_scd2": [], "source.cleansed_bq_archive.bq_archive_objects.dip_athena_data_lake_sunshine_conversations_pda_m_created": [], "source.cleansed_bq_archive.bq_archive_objects.dip_athena_data_lake_sunshine_conversations_non_pda_m_created": [], "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_sunshine_conversations": [], "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_sell": [], "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_support": [], "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_chat_voltron": [], "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_chat_lc": [], "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_talk": [], "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_guide": [], "source.cleansed_bq_archive.bq_archive_objects.billing_boost_banner_clicked": [], "source.cleansed_bq_archive.bq_archive_objects.billing_boost_banner_eligible": [], "source.cleansed_bq_archive.bq_archive_objects.billing_boost_start_trial_clicked": [], "source.cleansed_bq_archive.bq_archive_objects.billing_boost_start_trial_confirmed": [], "source.cleansed_bq_archive.bq_archive_objects.billing_boost_upgrade_clicked": [], "source.cleansed_bq_archive.bq_archive_objects.billing_cart_loaded": [], "source.cleansed_bq_archive.bq_archive_objects.billing_cancellation_account_submit": [], "source.cleansed_bq_archive.bq_archive_objects.billing_cancellation_viewed": [], "source.cleansed_bq_archive.bq_archive_objects.billing_cancel_account_clicked": [], "source.cleansed_bq_archive.bq_archive_objects.billing_customize_subscription": [], "source.cleansed_bq_archive.bq_archive_objects.billing_payment_loaded": [], "source.cleansed_bq_archive.bq_archive_objects.billing_pause_subscription_clicked": [], "source.cleansed_bq_archive.bq_archive_objects.billing_pause_subscription_confirmed": [], "source.cleansed_bq_archive.bq_archive_objects.billing_promocode_submit": [], "source.cleansed_bq_archive.bq_archive_objects.billing_quiz_answer_submitted": [], "source.cleansed_bq_archive.bq_archive_objects.billing_quiz_started": [], "source.cleansed_bq_archive.bq_archive_objects.billing_subscription_viewed": [], "source.cleansed_bq_archive.bq_archive_objects.billing_update_response": [], "source.cleansed_bq_archive.bq_archive_objects.billing_update_submit": [], "source.cleansed_bq_archive.bq_archive_objects.billing_web_widget_loaded": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_accessed_user_profile_via_avatar": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_application_opened": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_bulk_edit_opened": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_bulk_edit_submitted": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_comment_added": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_comment_sort_order_changed": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_edit_user_profile_opened": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_form_opened": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_hc_tapped": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_macro_applied": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_merge_opened": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_merge_submitted": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_ongoing_chat_conversation": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_opened_view_management": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_properties_changed": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_push_notification_opened": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_push_notification_received": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_quick_merge_not_permitted": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_quick_property_tapped": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_search_opened": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_search_submitted": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_search_ticket_opened": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_shortcut_menu_action": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_talk_status_changed": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_talk_status_opened": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_ticket_created": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_ticket_reply_type_changed": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_ticket_updated": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_user_profile_created": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_user_profile_save_failed": [], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_user_profile_saved": [], "source.cleansed_bq_archive.bq_archive_objects.segment_marketing_website_experiment_viewed": [], "source.cleansed_bq_archive.bq_archive_objects.segment_marketing_website_identifies": [], "source.cleansed_bq_archive.bq_archive_objects.website_register_lead_demo_request": [], "source.cleansed_bq_archive.bq_archive_objects.website_trial_reg_account_creation_apirequest_succeed": [], "source.cleansed_bq_archive.bq_archive_objects.website_register_lead_contact_form_widget": [], "source.cleansed_bq_archive.bq_archive_objects.website_register_lead_contact_modal_submit": [], "source.cleansed_bq_archive.bq_archive_objects.central_admin_onboarding_panel_task_completion": [], "source.cleansed_bq_archive.bq_archive_objects.rules_granular_daily_history": [], "source.cleansed_bq_archive.bq_archive_objects.p0_master_dashboard_backfill": [], "source.cleansed_bq_archive.bq_archive_objects.p0_master_dashboard_crm": [], "source.cleansed_bq_archive.bq_archive_objects.GTM_top_10_omnichannel_routing_edw_copy": [], "source.cleansed_bq_archive.bq_archive_objects.segment_support_android_identifies": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_accessed_user_profile_via_avatar": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_application_opened": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_bulk_edit_opened": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_bulk_edit_submitted": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_comment_added": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_comment_sort_order_changed": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_force_update_dismissible_alert_presented": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_force_update_dismissible_alert_update_tapped": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_force_update_non_dismissible_alert_presented": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_edit_user_profile_opened": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_form_opened": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_job_result": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_macro_applied": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_merge_opened": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_merge_submitted": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_message_playback": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_ongoing_chat_conversation": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_opened_view_management": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_properties_changed": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_push_notification_opened": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_push_notification_received": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_quick_merge_not_permitted": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_quick_property_tapped": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_rate_app_status": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_search_filter_tooltip_shown": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_search_opened": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_search_opened_pt": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_search_organisation_opened": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_search_submitted": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_search_ticket_opened": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_search_user_opened": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_side_conversation_viewed": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_side_conversations_list_viewed": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_talk_status_changed": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_talk_status_opened": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_created": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_reply_type_changed": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_unsaved_changes_dialog": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_updated": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_viewed": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_user_profile_created": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_user_profile_save_failed": [], "source.cleansed_bq_archive.bq_archive_objects.support_android_user_profile_saved": [], "source.cleansed_bq_archive.bq_archive_objects.updated_markov_pipeline_attribution_model_results_channel_offer": [], "source.cleansed_bq_archive.bq_archive_objects.All_Premier_Accounts": [], "source.cleansed_bq_archive.bq_archive_objects.All_Premier_Accounts_2023_06_27T16_05_41": [], "source.cleansed_bq_archive.bq_archive_objects.Historical_All_Premier_Accounts": [], "source.cleansed_bq_archive.bq_archive_objects.Historical_SC_Canaries": [], "source.cleansed_bq_archive.bq_archive_objects.Historical_SLA_Chat": [], "source.cleansed_bq_archive.bq_archive_objects.IBM_Customers": [], "source.cleansed_bq_archive.bq_archive_objects.IM_Incidents": [], "source.cleansed_bq_archive.bq_archive_objects.SC_Canaries": [], "source.cleansed_bq_archive.bq_archive_objects.SLA_Chat": [], "source.cleansed_bq_archive.bq_archive_objects.datadog_monitors": [], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_alerts": [], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_business_services": [], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_escalation_policies": [], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_event_orchestration_routers": [], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_event_orchestrations": [], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_incidents": [], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_logs": [], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_schedules": [], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_service_orchestrations": [], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_services": [], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_teams": [], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_users": [], "source.cleansed_bq_archive.bq_archive_objects.scheduled_cerebro_blend": [], "source.cleansed_bq_archive.bq_archive_objects.scheduled_core_features": [], "source.cleansed_bq_archive.bq_archive_objects.scheduled_critical_services": [], "source.cleansed_bq_archive.bq_archive_objects.scheduled_monitor_metadata": [], "source.cleansed_bq_archive.bq_archive_objects.scheduled_pagerduty_incidents": [], "source.cleansed_bq_archive.bq_archive_objects.scheduled_pagerduty_incidents_monitors": [], "source.cleansed_bq_archive.bq_archive_objects.scheduled_tech_tier_projects": [], "source.cleansed_bq_archive.bq_archive_objects.scheduled_tech_tier_team_hierarchy": [], "source.cleansed_bq_archive.bq_archive_objects.scheduled_unowned_projects": [], "source.cleansed_bq_archive.bq_archive_objects.segment_support_groups": [], "source.cleansed_bq_archive.bq_archive_objects.segment_support_onboarding_panel_task_completion": [], "source.cleansed_bq_archive.bq_archive_objects.views_expansion_banner_find_out_more_click": [], "source.cleansed_bq_archive.bq_archive_objects.views_expansion_banner_try_it_for_free_click": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_10_03": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_03": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_06": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_10_01": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_02": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_04": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_07_01": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_23": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_02_03": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_03_03": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_05": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_03_01": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_07_02": [], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_01": [], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_01_06": [], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_02_03": [], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_03_03": [], "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_18april": [], "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_14sep": [], "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_29april": [], "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304": [], "source.cleansed_bq_archive.bq_archive_objects.ab_test_sample": [], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_01_05": [], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_10_03": [], "source.cleansed_bq_archive.bq_archive_objects.ab_test_stratifiedsamples": [], "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup": [], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_01_01": [], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_04_03": [], "source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_eoq_snapshot_may_to_mar": [], "source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_productline_eoq_snapshot_v2_may_to_mar": [], "source.cleansed_bq_archive.bq_archive_objects.gpd_weekly_target_snapshot_may_to_mar": [], "source.cleansed_bq_archive.bq_archive_objects.dgp_productline_week_dates_eoq_snapshot_v2_may_to_mar": [], "source.cleansed_bq_archive.bq_archive_objects.gpd_pipeline_age_may_to_mar": [], "source.cleansed_bq_archive.bq_archive_objects.dgp_productline_week_close_dates_eoq_snapshot_v2_may_to_mar": [], "source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_coverage_trends_eoq_snapshot_may_mar": [], "source.cleansed_bq_archive.bq_archive_objects.gpd_weekly_product_pipeline_age_snapshot_v2_may_to_mar": [], "source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3_may_mar": [], "source.cleansed_bq_archive.bq_archive_objects.pipeline_coverage_targets_daily_snapshot_may_to_mar": [], "source.cleansed_bq_archive.bq_archive_objects.pipeline_coverage_targets_product_daily_snapshot_may_to_mar": [], "source.cleansed_bq_archive.bq_archive_objects.eloqua__bounceback_jan_22_fw": [], "source.cleansed_bq_archive.bq_archive_objects.eloqua__unsubscribe_jan_22_fw": [], "source.cleansed_bq_archive.bq_archive_objects.eloqua__contacts_jan_22_fw": [], "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_benchmark_tableau": [], "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_chat_accounts_tableau": [], "source.cleansed_bq_archive.bq_archive_objects.acctmgrdash_full_list_of_accounts_tableau": [], "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_chshacct_tableau_preagg": [], "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_chshacct_tableau": [], "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_master_tableau": [], "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_median_tableau": [], "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_utilization": [], "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_wtdavg_median_tableau": [], "source.cleansed_bq_archive.bq_archive_objects.sa_opps_dash": [], "source.cleansed_bq_archive.bq_archive_objects.sa_ops_dash_pipegen": [], "source.cleansed_bq_archive.bq_archive_objects.sa_recurring_revenue": [], "source.cleansed_bq_archive.bq_archive_objects.sa_pipeline_movement": [], "source.cleansed_bq_archive.bq_archive_objects.eloqua_curated": [], "source.cleansed_bq_archive.bq_archive_objects.eda_google_analytics__pages_v2_2022_01_01": [], "source.cleansed_bq_archive.bq_archive_objects.eda_google_analytics__sessions_v2_2022_01_01": [], "source.cleansed_bq_archive.bq_archive_objects.google_analytics_curated_2022_01_01": [], "source.cleansed_bq_archive.bq_archive_objects.zendesk_marketingweb_ga_pages_2022_01_01": [], "source.cleansed_bq_archive.bq_archive_objects.zendesk_marketingweb_ga_sessions_2022_01_01": [], "source.cleansed_bq_archive.bq_archive_objects.dashboard_pipeline_quality": [], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_day_of_qtr": [], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_subterm_weighted": [], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_granular_arr_band": [], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_qtrly_crm_dim": [], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_pacing": [], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_pacing_renewals": [], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_future_renewals": [], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_granular": [], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_summary": [], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_granular_grouped": [], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_timestamp": [], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_summary_yoy_union": [], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_granular_subtype": [], "source.cleansed_bq_archive.bq_archive_objects.dashboard_pipeline_quality_snapshot_2022_01_01": [], "source.cleansed_bq_archive.bq_archive_objects.marketing_non_api_raw_cost_regional_apac": [], "source.cleansed_bq_archive.bq_product_archive.dhco_platform_custom_objects_records": [], "source.cleansed_bq_archive.bq_product_archive.dlc_custom_objects": [], "source.cleansed_bq_archive.bq_product_archive.layout_builder_service_layouts": [], "source.cleansed_bq_archive.bq_product_archive.lynx_machine_learning_usage_llm_features": [], "source.cleansed_bq_archive.bq_product_archive.product_data_automated_triage_daily_summary": [], "source.cleansed_bq_archive.bq_product_archive.product_data_automatic_triage_adoption": [], "source.cleansed_bq_archive.bq_product_archive.product_data_flow_director_conversations_activity": [], "source.cleansed_bq_archive.bq_product_archive.product_data_generative_answers": [], "source.cleansed_bq_archive.bq_product_archive.product_data_machine_learning_triage_deflections": [], "source.cleansed_bq_archive.bq_product_archive.product_data_mcs_feedback": [], "source.cleansed_bq_archive.bq_product_archive.product_data_ml_usage_frontend_events": [], "source.cleansed_bq_archive.bq_product_archive.data_lake_classic_webhooks": [], "source.cleansed_bq_archive.bq_product_archive.accounts_settings": [], "source.cleansed_bq_archive.bq_product_archive.agent_entitlements": [], "source.cleansed_bq_archive.bq_product_archive.app_installs": [], "source.cleansed_bq_archive.bq_product_archive.apps": [], "source.cleansed_bq_archive.bq_product_archive.custom_statuses": [], "source.cleansed_bq_archive.bq_product_archive.roles": [], "source.cleansed_bq_archive.bq_product_archive.skus": [], "source.cleansed_bq_archive.bq_product_archive.ticket_deflections_events": [], "source.cleansed_bq_archive.bq_product_archive.workspaces": [], "source.cleansed_bq_archive.bq_product_archive.rules": [], "source.cleansed_bq_archive.bq_product_archive.user_dim_historic": [], "source.cleansed_bq_archive.bq_product_archive.all_instance_provisioned_and_active_agents": [], "source.cleansed_bq_archive.bq_product_archive.account_dashboard_master": [], "source.cleansed_bq_archive.bq_product_archive.dip_athena_product_data_flow_director_conversations_activity": [], "source.cleansed_bq_archive.bq_product_archive.support_addresses": [], "source.cleansed_bq_archive.bq_product_archive.feature_tables_tickets_backfill": [], "source.cleansed_bq_archive.bq_product_archive.count_objects": [], "source.cleansed_bq_archive.bq_product_archive.ticket_forms": [], "source.cleansed_bq_archive.bq_product_archive.pdw_hc_usage": [], "source.cleansed_bq_archive.bq_product_archive.feature_tables_tickets_post_jan2022": [], "source.cleansed_bq_archive.bq_product_archive.data_lake_classic_webhooks_backfill": [], "source.cleansed_bq_archive.bq_product_archive.agent_email_addresses_2023_onward": [], "source.cleansed_bq_archive.bq_product_archive.signals_metrics": [], "source.cleansed_bq_archive.bq_product_archive.product_data_sla_ticket_policies": [], "source.cleansed_bq_archive.bq_product_archive.z2_raw_sla_policies": [], "source.cleansed_bq_archive.bq_product_archive.dlc_ola_ticket_policies": [], "source.cleansed_bq_archive.bq_product_archive.dlc_ola_policies": [], "source.cleansed_bq_archive.bq_product_archive.pdw_slas": [], "source.cleansed_bq_archive.bq_product_archive.classic_object_layouts": [], "source.cleansed_bq_archive.bq_product_archive.pendo__garden_reporting_jan_22_fw": [], "source.cleansed_bq_archive.bq_product_archive.int_tickets_raw": [], "source.cleansed_bq_archive.bq_product_archive.pdw_voice_details": [], "source.cleansed_bq_archive.bq_product_archive.pdw_zuora_voice_usages": [], "source.cleansed_bq_archive.bq_product_archive.pdw_account_settings_events": [], "source.cleansed_bq_archive.bq_product_archive.explore_accounts": [], "source.cleansed_bq_archive.bq_product_archive.explore_users": [], "source.cleansed_bq_archive.bq_product_archive.explore_dashboards": [], "source.cleansed_bq_archive.bq_product_archive.explore_dashboard_views": [], "source.cleansed_bq_archive.bq_product_archive.ex_customer_base": [], "source.cleansed_bq_archive.bq_product_archive.ex_usage_us_02_28_2025": []}, "child_map": {"model.cleansed_bq_archive.pdw_slas": [], "model.cleansed_bq_archive.support_addresses": [], "model.cleansed_bq_archive.count_objects": [], "model.cleansed_bq_archive.ticket_forms": [], "model.cleansed_bq_archive.zuora_voice_usages": [], "model.cleansed_bq_archive.explore_users": [], "model.cleansed_bq_archive.explore_dashboards": [], "model.cleansed_bq_archive.account_settings_events": [], "model.cleansed_bq_archive.voice_details": [], "model.cleansed_bq_archive.pdw_hc_usage": [], "model.cleansed_bq_archive.explore_accounts": [], "model.cleansed_bq_archive.explore_dashboard_views": [], "model.cleansed_bq_archive.agent_email_addresses": [], "model.cleansed_bq_archive.signals_metrics": [], "model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_granular": [], "model.cleansed_bq_archive.tb_ws_cc_renewals_subterm_weighted": [], "model.cleansed_bq_archive.tb_ws_cc_renewals_pacing_renewals": [], "model.cleansed_bq_archive.tb_ws_cc_renewals_day_of_qtr": [], "model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_summary": [], "model.cleansed_bq_archive.tb_ws_cc_renewals_qtrly_crm_dim": [], "model.cleansed_bq_archive.tb_ws_cc_renewals_future_renewals": [], "model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_summary_yoy_union": [], "model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_granular_subtype": [], "model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_granular_grouped": [], "model.cleansed_bq_archive.tb_ws_cc_renewals_granular_arr_band": [], "model.cleansed_bq_archive.tb_ws_cc_renewals_timestamp": [], "model.cleansed_bq_archive.tb_ws_cc_renewals_pacing": [], "model.cleansed_bq_archive.segment_marketing_website_identifies": [], "model.cleansed_bq_archive.website_register_lead_demo_request": [], "model.cleansed_bq_archive.website_register_lead_contact_modal_submit": [], "model.cleansed_bq_archive.website_trial_reg_account_creation_apirequest_succeed": [], "model.cleansed_bq_archive.segment_marketing_website_experiment_viewed": [], "model.cleansed_bq_archive.website_register_lead_contact_form_widget": [], "model.cleansed_bq_archive.support_android_search_user_opened": [], "model.cleansed_bq_archive.support_android_rate_app_status": [], "model.cleansed_bq_archive.support_android_side_conversations_list_viewed": [], "model.cleansed_bq_archive.support_android_user_profile_save_failed": [], "model.cleansed_bq_archive.support_android_edit_user_profile_opened": [], "model.cleansed_bq_archive.support_android_search_opened": [], "model.cleansed_bq_archive.support_android_talk_status_opened": [], "model.cleansed_bq_archive.support_android_force_update_dismissible_alert_update_tapped": [], "model.cleansed_bq_archive.support_android_search_submitted": [], "model.cleansed_bq_archive.support_android_merge_opened": [], "model.cleansed_bq_archive.support_android_bulk_edit_submitted": [], "model.cleansed_bq_archive.support_android_ticket_viewed": [], "model.cleansed_bq_archive.support_android_quick_property_tapped": [], "model.cleansed_bq_archive.support_android_search_ticket_opened": [], "model.cleansed_bq_archive.support_android_merge_submitted": [], "model.cleansed_bq_archive.support_android_push_notification_received": [], "model.cleansed_bq_archive.support_android_ongoing_chat_conversation": [], "model.cleansed_bq_archive.support_android_job_result": [], "model.cleansed_bq_archive.support_android_force_update_non_dismissible_alert_presented": [], "model.cleansed_bq_archive.support_android_application_opened": [], "model.cleansed_bq_archive.support_android_comment_sort_order_changed": [], "model.cleansed_bq_archive.support_android_side_conversation_viewed": [], "model.cleansed_bq_archive.support_android_comment_added": [], "model.cleansed_bq_archive.support_android_bulk_edit_opened": [], "model.cleansed_bq_archive.support_android_macro_applied": [], "model.cleansed_bq_archive.support_android_ticket_unsaved_changes_dialog": [], "model.cleansed_bq_archive.support_android_force_update_dismissible_alert_presented": [], "model.cleansed_bq_archive.segment_support_android_identifies": [], "model.cleansed_bq_archive.support_android_opened_view_management": [], "model.cleansed_bq_archive.support_android_user_profile_saved": [], "model.cleansed_bq_archive.support_android_quick_merge_not_permitted": [], "model.cleansed_bq_archive.support_android_push_notification_opened": [], "model.cleansed_bq_archive.support_android_accessed_user_profile_via_avatar": [], "model.cleansed_bq_archive.support_android_talk_status_changed": [], "model.cleansed_bq_archive.support_android_search_opened_pt": [], "model.cleansed_bq_archive.support_android_form_opened": [], "model.cleansed_bq_archive.support_android_ticket_updated": [], "model.cleansed_bq_archive.support_android_ticket_reply_type_changed": [], "model.cleansed_bq_archive.support_android_user_profile_created": [], "model.cleansed_bq_archive.support_android_search_organisation_opened": [], "model.cleansed_bq_archive.support_android_message_playback": [], "model.cleansed_bq_archive.support_android_ticket_created": [], "model.cleansed_bq_archive.support_android_properties_changed": [], "model.cleansed_bq_archive.support_android_search_filter_tooltip_shown": [], "model.cleansed_bq_archive.eloqua__emailopen": [], "model.cleansed_bq_archive.bizible_user_touchpoints": [], "model.cleansed_bq_archive.tableau_events": [], "model.cleansed_bq_archive.hg_insights_contract_view": [], "model.cleansed_bq_archive.eloqua__unsubscribe": [], "model.cleansed_bq_archive.eloqua_curated": [], "model.cleansed_bq_archive.eloqua__bounceback": [], "model.cleansed_bq_archive.hg_insights_install_view": [], "model.cleansed_bq_archive.bizible_costs": [], "model.cleansed_bq_archive.hg_insights_spend_view": [], "model.cleansed_bq_archive.contacts": [], "model.cleansed_bq_archive.eloqua__emailclickthrough": [], "model.cleansed_bq_archive.eloqua__emailsend": [], "model.cleansed_bq_archive.central_admin_onboarding_panel_task_completion": [], "model.cleansed_bq_archive.scheduled_pagerduty_incidents_monitors": [], "model.cleansed_bq_archive.SLA_Chat": [], "model.cleansed_bq_archive.All_Premier_Accounts_2023_06_27T16_05_41": [], "model.cleansed_bq_archive.pagerduty_alerts": [], "model.cleansed_bq_archive.pagerduty_users": [], "model.cleansed_bq_archive.IM_Incidents": [], "model.cleansed_bq_archive.scheduled_pagerduty_incidents": [], "model.cleansed_bq_archive.pagerduty_service_orchestrations": [], "model.cleansed_bq_archive.Historical_SLA_Chat": [], "model.cleansed_bq_archive.Historical_SC_Canaries": [], "model.cleansed_bq_archive.datadog_monitors": [], "model.cleansed_bq_archive.pagerduty_business_services": [], "model.cleansed_bq_archive.IBM_Customers": [], "model.cleansed_bq_archive.All_Premier_Accounts": [], "model.cleansed_bq_archive.Historical_All_Premier_Accounts": [], "model.cleansed_bq_archive.scheduled_tech_tier_projects": [], "model.cleansed_bq_archive.scheduled_tech_tier_team_hierarchy": [], "model.cleansed_bq_archive.scheduled_critical_services": [], "model.cleansed_bq_archive.pagerduty_services": [], "model.cleansed_bq_archive.pagerduty_logs": [], "model.cleansed_bq_archive.scheduled_cerebro_blend": [], "model.cleansed_bq_archive.pagerduty_event_orchestrations": [], "model.cleansed_bq_archive.pagerduty_event_orchestration_routers": [], "model.cleansed_bq_archive.pagerduty_escalation_policies": [], "model.cleansed_bq_archive.pagerduty_teams": [], "model.cleansed_bq_archive.scheduled_core_features": [], "model.cleansed_bq_archive.scheduled_monitor_metadata": [], "model.cleansed_bq_archive.pagerduty_schedules": [], "model.cleansed_bq_archive.scheduled_unowned_projects": [], "model.cleansed_bq_archive.pagerduty_incidents": [], "model.cleansed_bq_archive.SC_Canaries": [], "model.cleansed_bq_archive.cs_db_acctmngr_chat_accounts_tableau": [], "model.cleansed_bq_archive.cs_db_acctmngr_master_tableau": [], "model.cleansed_bq_archive.cs_db_acctmngr_benchmark_tableau": [], "model.cleansed_bq_archive.cs_db_acctmngr_wtdavg_median_tableau": [], "model.cleansed_bq_archive.cs_db_acctmngr_median_tableau": [], "model.cleansed_bq_archive.cs_db_acctmngr_chshacct_tableau": [], "model.cleansed_bq_archive.acctmgrdash_full_list_of_accounts_tableau": [], "model.cleansed_bq_archive.cs_db_acctmngr_utilization": [], "model.cleansed_bq_archive.cs_db_acctmngr_chshacct_tableau_preagg": [], "model.cleansed_bq_archive.support_i_os_push_notification_opened": [], "model.cleansed_bq_archive.support_i_os_search_submitted": [], "model.cleansed_bq_archive.support_i_os_ticket_updated": [], "model.cleansed_bq_archive.support_i_os_user_profile_saved": [], "model.cleansed_bq_archive.support_i_os_application_opened": [], "model.cleansed_bq_archive.support_i_os_bulk_edit_opened": [], "model.cleansed_bq_archive.support_i_os_ticket_reply_type_changed": [], "model.cleansed_bq_archive.support_i_os_bulk_edit_submitted": [], "model.cleansed_bq_archive.support_i_os_comment_added": [], "model.cleansed_bq_archive.support_i_os_edit_user_profile_opened": [], "model.cleansed_bq_archive.support_i_os_hc_tapped": [], "model.cleansed_bq_archive.support_i_os_opened_view_management": [], "model.cleansed_bq_archive.support_i_os_quick_property_tapped": [], "model.cleansed_bq_archive.support_i_os_user_profile_save_failed": [], "model.cleansed_bq_archive.support_i_os_ticket_created": [], "model.cleansed_bq_archive.support_i_os_macro_applied": [], "model.cleansed_bq_archive.support_i_os_ongoing_chat_conversation": [], "model.cleansed_bq_archive.support_i_os_comment_sort_order_changed": [], "model.cleansed_bq_archive.support_i_os_accessed_user_profile_via_avatar": [], "model.cleansed_bq_archive.support_i_os_merge_opened": [], "model.cleansed_bq_archive.support_i_os_merge_submitted": [], "model.cleansed_bq_archive.support_i_os_talk_status_opened": [], "model.cleansed_bq_archive.support_i_os_shortcut_menu_action": [], "model.cleansed_bq_archive.support_i_os_search_opened": [], "model.cleansed_bq_archive.support_i_os_push_notification_received": [], "model.cleansed_bq_archive.support_i_os_talk_status_changed": [], "model.cleansed_bq_archive.support_i_os_properties_changed": [], "model.cleansed_bq_archive.support_i_os_form_opened": [], "model.cleansed_bq_archive.support_i_os_quick_merge_not_permitted": [], "model.cleansed_bq_archive.support_i_os_user_profile_created": [], "model.cleansed_bq_archive.support_i_os_search_ticket_opened": [], "model.cleansed_bq_archive.zendesk_marketingweb_ga_sessions": [], "model.cleansed_bq_archive.eda_google_analytics__pages_v2": [], "model.cleansed_bq_archive.zendesk_marketingweb_ga_pages": [], "model.cleansed_bq_archive.eda_google_analytics__sessions_v2": [], "model.cleansed_bq_archive.google_analytics_curated": [], "model.cleansed_bq_archive.sa_pipeline_movement": [], "model.cleansed_bq_archive.sa_recurring_revenue": [], "model.cleansed_bq_archive.sa_opps_dash": [], "model.cleansed_bq_archive.sa_ops_dash_pipegen": [], "model.cleansed_bq_archive.int_tickets_raw": [], "model.cleansed_bq_archive.billing_boost_start_trial_clicked": [], "model.cleansed_bq_archive.billing_cart_loaded": [], "model.cleansed_bq_archive.billing_payment_loaded": [], "model.cleansed_bq_archive.billing_promocode_submit": [], "model.cleansed_bq_archive.billing_update_submit": [], "model.cleansed_bq_archive.billing_quiz_started": [], "model.cleansed_bq_archive.billing_web_widget_loaded": [], "model.cleansed_bq_archive.billing_cancellation_viewed": [], "model.cleansed_bq_archive.billing_pause_subscription_confirmed": [], "model.cleansed_bq_archive.billing_subscription_viewed": [], "model.cleansed_bq_archive.billing_boost_upgrade_clicked": [], "model.cleansed_bq_archive.billing_boost_banner_clicked": [], "model.cleansed_bq_archive.billing_boost_banner_eligible": [], "model.cleansed_bq_archive.billing_pause_subscription_clicked": [], "model.cleansed_bq_archive.billing_quiz_answer_submitted": [], "model.cleansed_bq_archive.billing_customize_subscription": [], "model.cleansed_bq_archive.billing_update_response": [], "model.cleansed_bq_archive.billing_cancellation_account_submit": [], "model.cleansed_bq_archive.billing_cancel_account_clicked": [], "model.cleansed_bq_archive.billing_boost_start_trial_confirmed": [], "model.cleansed_bq_archive.sfdc_opp_scd2": [], "model.cleansed_bq_archive.dashboard_global_pipeline_eoq_snapshot": [], "model.cleansed_bq_archive.markov_pipeline_attribution_model_results_channel_offer": [], "model.cleansed_bq_archive.markov_opps_base_channel_offer": [], "model.cleansed_bq_archive.attribution_user_touchpoint": [], "model.cleansed_bq_archive.bz_cost": [], "model.cleansed_bq_archive.ss_markov_leads_base_table": [], "model.cleansed_bq_archive.dashboard_global_pipeline_productline_eoq_snapshot_v2": [], "model.cleansed_bq_archive.gpd_pipeline_age": [], "model.cleansed_bq_archive.sfdc_opportunities": [], "model.cleansed_bq_archive.marketing_non_api_raw_cost_regional_APAC": [], "model.cleansed_bq_archive.gpd_weekly_target_snapshot": [], "model.cleansed_bq_archive.sfdc_leads_touchpoint": [], "model.cleansed_bq_archive.markov_attribution_leads_touchpoint": [], "model.cleansed_bq_archive.marketing_non_api_raw_cost": [], "model.cleansed_bq_archive.markov_opps_touchpoint_opps": [], "model.cleansed_bq_archive.dashboard_global_pipeline_coverage_trends_eoq_snapshot": [], "model.cleansed_bq_archive.pipeline_coverage_targets_daily_snapshot": [], "model.cleansed_bq_archive.dgp_productline_week_close_dates_eoq_snapshot_v2": [], "model.cleansed_bq_archive.dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3": [], "model.cleansed_bq_archive.dashboard_pipeline_quality_snapshot": [], "model.cleansed_bq_archive.gpd_weekly_product_pipeline_age_snapshot_v2": [], "model.cleansed_bq_archive.markov_attribution_opportunities_touchpoint": [], "model.cleansed_bq_archive.sfdc_opportunities_touchpoint": [], "model.cleansed_bq_archive.attribution_events": [], "model.cleansed_bq_archive.pipeline_coverage_targets_product_daily_snapshot": [], "model.cleansed_bq_archive.marketing_non_api_raw_cost_historicals": [], "model.cleansed_bq_archive.dgp_productline_week_dates_eoq_snapshot_v2": [], "model.cleansed_bq_archive.dashboard_pipeline_quality": [], "model.cleansed_bq_archive.segment_support_onboarding_panel_task_completion": [], "model.cleansed_bq_archive.segment_support_groups": [], "model.cleansed_bq_archive.views_expansion_banner_find_out_more_click": [], "model.cleansed_bq_archive.views_expansion_banner_try_it_for_free_click": [], "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_02_03": [], "model.cleansed_bq_archive.overview_customer_arr": [], "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_01_01": [], "model.cleansed_bq_archive.sell_payments_products": [], "model.cleansed_bq_archive.eda_hob__subpo_bundled_task_1": [], "model.cleansed_bq_archive.eda_hob__qtd_renewals_product_finance_adjusted_bundled": [], "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_04": [], "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_02": [], "model.cleansed_bq_archive.eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag": [], "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2024_10_03": [], "model.cleansed_bq_archive.adjusted_change_sub_type_automated_list": [], "model.cleansed_bq_archive.adjusted_change_sub_type_usd_20231004": [], "model.cleansed_bq_archive.sku_modernization_zuora_amendments": [], "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup": [], "model.cleansed_bq_archive.agent_months_report_table": [], "model.cleansed_bq_archive.sfa_bookings_reporting_2024_07_02": [], "model.cleansed_bq_archive.sfa_bookings_reporting_2023_10_04": [], "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup_14sep": [], "model.cleansed_bq_archive.eda_hob__mtd_recurring_revenue_bundled": [], "model.cleansed_bq_archive.sell_payments_subscription_products": [], "model.cleansed_bq_archive.eda_hob__dod_recurring_revenue_bundled": [], "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_01_05": [], "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2024_01_04": [], "model.cleansed_bq_archive.sfa_bookings_reporting_2025_02_03": [], "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_05": [], "model.cleansed_bq_archive.ab_test_stratifiedsamples": [], "model.cleansed_bq_archive.sfa_bookings_reporting_2024_10_01": [], "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_03_03": [], "model.cleansed_bq_archive.curated_opportunities": [], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup": [], "model.cleansed_bq_archive.eda_hob__subpo_bundled": [], "model.cleansed_bq_archive.change_sub_type_usd_2024_01_04": [], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06": [], "model.cleansed_bq_archive.sell_payments_subscriptions": [], "model.cleansed_bq_archive.sfa_bookings_reporting_2024_10_03": [], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05": [], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04": [], "model.cleansed_bq_archive.eda_hob__legacy_sell_01_account": [], "model.cleansed_bq_archive.sfa_bookings_reporting_2025_03_03": [], "model.cleansed_bq_archive.smoochforce_plans_smooch__c_scd2": [], "model.cleansed_bq_archive.cohort_point_in_time_15_jan": [], "model.cleansed_bq_archive.new_productrateplancharge": [], "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_23": [], "model.cleansed_bq_archive.crm_dim_2025_market_segment": [], "model.cleansed_bq_archive.sam_summary": [], "model.cleansed_bq_archive.sfa_bookings_reporting_2025_03_01": [], "model.cleansed_bq_archive.ab_test_sample": [], "model.cleansed_bq_archive.smoochforce_account_scd2": [], "model.cleansed_bq_archive.sfa_bookings_reporting_2024_07_01": [], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03": [], "model.cleansed_bq_archive.qtd_recurring_revenue_month_end_and_current_snapshot": [], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03": [], "model.cleansed_bq_archive.sfa_bookings_reporting_2024_04_03": [], "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup_29april": [], "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2024_07_01": [], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04": [], "model.cleansed_bq_archive.dod_change_sub_type_po_level": [], "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_01": [], "model.cleansed_bq_archive.curated_bookings": [], "model.cleansed_bq_archive.eda_hob__legacy_sell_06_subpo": [], "model.cleansed_bq_archive.sfa_bookings_reporting_2023_04_04": [], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03": [], "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_06": [], "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2024_04_03": [], "model.cleansed_bq_archive.eda_hob__yoy_recurring_revenue_bundled": [], "model.cleansed_bq_archive.customer_dim_scd2": [], "model.cleansed_bq_archive.curated_bookings_snapshot": [], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01": [], "model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_03": [], "model.cleansed_bq_archive.eda_hob__price_ramp_adjustments_prep": [], "model.cleansed_bq_archive.change_sub_type_usd_2024_07_03": [], "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_18april": [], "model.cleansed_bq_archive.sell_payments_trials": [], "model.cleansed_bq_archive.sam_monthly_usage": [], "model.cleansed_bq_archive.p0_master_dashboard_backfill": [], "model.cleansed_bq_archive.qtd_product_finance_adj_month_end_and_current_snapshot": [], "model.cleansed_bq_archive.agent_months_arr": [], "model.cleansed_bq_archive.sam_usage_by_email_table": [], "model.cleansed_bq_archive.sfa_bookings_reporting_2024_07_03": [], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05": [], "model.cleansed_bq_archive.am_usage_by_instance_by_email_v2": [], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03": [], "model.cleansed_bq_archive.change_sub_type_yx_usd": [], "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304": [], "model.cleansed_bq_archive.new_productrateplanchargetier": [], "model.cleansed_bq_archive.adjusted_change_sub_type_usd": [], "model.cleansed_bq_archive.sfa_bookings_reporting_2023_07_04": [], "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup_11June": [], "model.cleansed_bq_archive.eda_hob__yoy_renewals_crm_finance_adjusted_bundled": [], "model.cleansed_bq_archive.eda_hob__qtd_recurring_revenue_bundled": [], "model.cleansed_bq_archive.eda_hob__never_paid_accounts": [], "model.cleansed_bq_archive.smoochforce_opportunityhistory_scd2": [], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04": [], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01": [], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03": [], "model.cleansed_bq_archive.top10_geo_amsam": [], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03": [], "model.cleansed_bq_archive.sfa_bookings_reporting_2024_01_04": [], "model.cleansed_bq_archive.cohort_point_in_time": [], "model.cleansed_bq_archive.smoochforce_opportunity_scd2": [], "model.cleansed_bq_archive.eda_hob__qtd_renewals_crm_finance_adjusted_bundled": [], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02": [], "model.cleansed_bq_archive.eda_hob__crm_dim": [], "model.cleansed_bq_archive.p0_master_dashboard_crm": [], "model.cleansed_bq_archive.eda_hob__crm_pro_forma_market_segment_previous_versions": [], "model.cleansed_bq_archive.p0_master_dashboard": [], "model.cleansed_bq_archive.sam_daily_usage": [], "model.cleansed_bq_archive.eda_hob__curated_user": [], "model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup_31May": [], "model.cleansed_bq_archive.eda_hob__yoy_renewals_product_finance_adjusted_bundled": [], "model.cleansed_bq_archive.sell_core_accounts": [], "model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02": [], "model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_01_06": [], "model.cleansed_bq_archive.eda_hob__customer_age_bundled": [], "model.cleansed_bq_archive.GTM_top_10_omnichannel_routing_edw_copy": [], "model.cleansed_bq_archive.product_data_ml_usage_frontend_events": [], "model.cleansed_bq_archive.pendo__garden_reporting": [], "model.cleansed_bq_archive.tfa_weighted_sunshine_conversations": [], "model.cleansed_bq_archive.product_data_flow_director_conversations_activity": [], "model.cleansed_bq_archive.ex_usage_us_02_28_2025": [], "model.cleansed_bq_archive.product_data_generative_answers": [], "model.cleansed_bq_archive.all_instance_provisioned_and_active_agents": [], "model.cleansed_bq_archive.dlc_ola_policies": [], "model.cleansed_bq_archive.product_data_sla_ticket_policies": [], "model.cleansed_bq_archive.product_data_machine_learning_triage_deflections": [], "model.cleansed_bq_archive.rules": [], "model.cleansed_bq_archive.tfa_weighted_sell": [], "model.cleansed_bq_archive.layout_builder_service_layouts": [], "model.cleansed_bq_archive.accounts_settings": [], "model.cleansed_bq_archive.feature_tables_tickets_backfill": [], "model.cleansed_bq_archive.dip_athena_data_lake_sunshine_conversations_pda_m_created": [], "model.cleansed_bq_archive.product_data_mcs_feedback": [], "model.cleansed_bq_archive.lynx_machine_learning_usage_llm_features": [], "model.cleansed_bq_archive.account_dashboard_master": [], "model.cleansed_bq_archive.dip_athena_product_data_flow_director_conversations_activity": [], "model.cleansed_bq_archive.ticket_deflections_events": [], "model.cleansed_bq_archive.data_lake_classic_webhooks": [], "model.cleansed_bq_archive.dlc_custom_objects": [], "model.cleansed_bq_archive.roles": [], "model.cleansed_bq_archive.ex_customer_base": [], "model.cleansed_bq_archive.dip_athena_data_lake_sunshine_conversations_non_pda_m_created": [], "model.cleansed_bq_archive.apps": [], "model.cleansed_bq_archive.tfa_weighted_guide": [], "model.cleansed_bq_archive.product_data_automated_triage_daily_summary": [], "model.cleansed_bq_archive.workspaces": [], "model.cleansed_bq_archive.tfa_weighted_talk": [], "model.cleansed_bq_archive.feature_tables_tickets_post_jan2022": [], "model.cleansed_bq_archive.skus": [], "model.cleansed_bq_archive.app_installs": [], "model.cleansed_bq_archive.tfa_weighted_chat_lc": [], "model.cleansed_bq_archive.tfa_weighted_chat_voltron": [], "model.cleansed_bq_archive.dhco_platform_custom_objects_records": [], "model.cleansed_bq_archive.data_lake_classic_webhooks_backfill": [], "model.cleansed_bq_archive.user_dim_historic": [], "model.cleansed_bq_archive.z2_raw_sla_policies": [], "model.cleansed_bq_archive.tfa_weighted_support": [], "model.cleansed_bq_archive.custom_statuses": [], "model.cleansed_bq_archive.rules_granular_daily_history": [], "model.cleansed_bq_archive.classic_object_layouts": [], "model.cleansed_bq_archive.agent_entitlements": [], "model.cleansed_bq_archive.product_data_automatic_triage_adoption": [], "model.cleansed_bq_archive.dlc_ola_ticket_policies": [], "source.cleansed_bq_archive.bq_archive_objects.am_usage_by_instance_by_email_v2": ["model.cleansed_bq_archive.am_usage_by_instance_by_email_v2"], "source.cleansed_bq_archive.bq_archive_objects.agent_months_report_table": ["model.cleansed_bq_archive.agent_months_report_table"], "source.cleansed_bq_archive.bq_archive_objects.sam_monthly_usage": ["model.cleansed_bq_archive.sam_monthly_usage"], "source.cleansed_bq_archive.bq_archive_objects.sam_daily_usage": ["model.cleansed_bq_archive.sam_daily_usage"], "source.cleansed_bq_archive.bq_archive_objects.sam_summary": ["model.cleansed_bq_archive.sam_summary"], "source.cleansed_bq_archive.bq_archive_objects.sam_usage_by_email_table": ["model.cleansed_bq_archive.sam_usage_by_email_table"], "source.cleansed_bq_archive.bq_archive_objects.agent_months_arr": ["model.cleansed_bq_archive.agent_months_arr"], "source.cleansed_bq_archive.bq_archive_objects.top10_geo_amsam": ["model.cleansed_bq_archive.top10_geo_amsam"], "source.cleansed_bq_archive.bq_archive_objects.overview_customer_arr": ["model.cleansed_bq_archive.overview_customer_arr"], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__crm_dim": ["model.cleansed_bq_archive.eda_hob__crm_dim"], "source.cleansed_bq_archive.bq_archive_objects.customer_dim_scd2": ["model.cleansed_bq_archive.customer_dim_scd2"], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__legacy_sell_01_account": ["model.cleansed_bq_archive.eda_hob__legacy_sell_01_account"], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__legacy_sell_06_subpo": ["model.cleansed_bq_archive.eda_hob__legacy_sell_06_subpo"], "source.cleansed_bq_archive.bq_archive_objects.sell_core_accounts": ["model.cleansed_bq_archive.sell_core_accounts"], "source.cleansed_bq_archive.bq_archive_objects.sell_payments_subscriptions": ["model.cleansed_bq_archive.sell_payments_subscriptions"], "source.cleansed_bq_archive.bq_archive_objects.sell_payments_trials": ["model.cleansed_bq_archive.sell_payments_trials"], "source.cleansed_bq_archive.bq_archive_objects.sell_payments_products": ["model.cleansed_bq_archive.sell_payments_products"], "source.cleansed_bq_archive.bq_archive_objects.sell_payments_subscription_products": ["model.cleansed_bq_archive.sell_payments_subscription_products"], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__dod_recurring_revenue_bundled": ["model.cleansed_bq_archive.eda_hob__dod_recurring_revenue_bundled"], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__mtd_recurring_revenue_bundled": ["model.cleansed_bq_archive.eda_hob__mtd_recurring_revenue_bundled"], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_recurring_revenue_bundled": ["model.cleansed_bq_archive.eda_hob__qtd_recurring_revenue_bundled"], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag": ["model.cleansed_bq_archive.eda_hob__qtd_recurring_revenue_bundled_with_renewable_flag"], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_renewals_crm_finance_adjusted_bundled": ["model.cleansed_bq_archive.eda_hob__qtd_renewals_crm_finance_adjusted_bundled"], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__qtd_renewals_product_finance_adjusted_bundled": ["model.cleansed_bq_archive.eda_hob__qtd_renewals_product_finance_adjusted_bundled"], "source.cleansed_bq_archive.bq_archive_objects.qtd_recurring_revenue_month_end_and_current_snapshot": ["model.cleansed_bq_archive.qtd_recurring_revenue_month_end_and_current_snapshot"], "source.cleansed_bq_archive.bq_archive_objects.qtd_product_finance_adj_month_end_and_current_snapshot": ["model.cleansed_bq_archive.qtd_product_finance_adj_month_end_and_current_snapshot"], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__yoy_recurring_revenue_bundled": ["model.cleansed_bq_archive.eda_hob__yoy_recurring_revenue_bundled"], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__yoy_renewals_product_finance_adjusted_bundled": ["model.cleansed_bq_archive.eda_hob__yoy_renewals_product_finance_adjusted_bundled"], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__yoy_renewals_crm_finance_adjusted_bundled": ["model.cleansed_bq_archive.eda_hob__yoy_renewals_crm_finance_adjusted_bundled"], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__never_paid_accounts": ["model.cleansed_bq_archive.eda_hob__never_paid_accounts"], "source.cleansed_bq_archive.bq_archive_objects.curated_bookings": ["model.cleansed_bq_archive.curated_bookings"], "source.cleansed_bq_archive.bq_archive_objects.curated_bookings_snapshot": ["model.cleansed_bq_archive.curated_bookings_snapshot"], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__subpo_bundled": ["model.cleansed_bq_archive.eda_hob__subpo_bundled"], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__subpo_bundled_task_1": ["model.cleansed_bq_archive.eda_hob__subpo_bundled_task_1"], "source.cleansed_bq_archive.bq_archive_objects.change_sub_type_yx_usd": ["model.cleansed_bq_archive.change_sub_type_yx_usd"], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd": ["model.cleansed_bq_archive.adjusted_change_sub_type_usd"], "source.cleansed_bq_archive.bq_archive_objects.dod_change_sub_type_po_level": ["model.cleansed_bq_archive.dod_change_sub_type_po_level"], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__customer_age_bundled": ["model.cleansed_bq_archive.eda_hob__customer_age_bundled"], "source.cleansed_bq_archive.bq_archive_objects.smoochforce_account_scd2": ["model.cleansed_bq_archive.smoochforce_account_scd2"], "source.cleansed_bq_archive.bq_archive_objects.smoochforce_opportunityhistory_scd2": ["model.cleansed_bq_archive.smoochforce_opportunityhistory_scd2"], "source.cleansed_bq_archive.bq_archive_objects.smoochforce_opportunity_scd2": ["model.cleansed_bq_archive.smoochforce_opportunity_scd2"], "source.cleansed_bq_archive.bq_archive_objects.smoochforce_plans_smooch__c_scd2": ["model.cleansed_bq_archive.smoochforce_plans_smooch__c_scd2"], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__price_ramp_adjustments_prep": ["model.cleansed_bq_archive.eda_hob__price_ramp_adjustments_prep"], "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_11June": ["model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup_11June"], "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_31May": ["model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup_31May"], "source.cleansed_bq_archive.bq_archive_objects.cohort_point_in_time": ["model.cleansed_bq_archive.cohort_point_in_time"], "source.cleansed_bq_archive.bq_archive_objects.cohort_point_in_time_15_jan": ["model.cleansed_bq_archive.cohort_point_in_time_15_jan"], "source.cleansed_bq_archive.bq_archive_objects.new_productrateplancharge": ["model.cleansed_bq_archive.new_productrateplancharge"], "source.cleansed_bq_archive.bq_archive_objects.new_productrateplanchargetier": ["model.cleansed_bq_archive.new_productrateplanchargetier"], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_20231004": ["model.cleansed_bq_archive.adjusted_change_sub_type_usd_20231004"], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_01_04": ["model.cleansed_bq_archive.adjusted_change_sub_type_usd_2024_01_04"], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_07_01": ["model.cleansed_bq_archive.adjusted_change_sub_type_usd_2024_07_01"], "source.cleansed_bq_archive.bq_archive_objects.change_sub_type_usd_2024_01_04": ["model.cleansed_bq_archive.change_sub_type_usd_2024_01_04"], "source.cleansed_bq_archive.bq_archive_objects.change_sub_type_usd_2024_07_03": ["model.cleansed_bq_archive.change_sub_type_usd_2024_07_03"], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2023_04_04": ["model.cleansed_bq_archive.sfa_bookings_reporting_2023_04_04"], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2023_07_04": ["model.cleansed_bq_archive.sfa_bookings_reporting_2023_07_04"], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2023_10_04": ["model.cleansed_bq_archive.sfa_bookings_reporting_2023_10_04"], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_01_04": ["model.cleansed_bq_archive.sfa_bookings_reporting_2024_01_04"], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_04_03": ["model.cleansed_bq_archive.sfa_bookings_reporting_2024_04_03"], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_07_03": ["model.cleansed_bq_archive.sfa_bookings_reporting_2024_07_03"], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05": ["model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_04_05"], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04": ["model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_07_04"], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03": ["model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2023_10_03"], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04": ["model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_01_04"], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03": ["model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_04_03"], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03": ["model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_07_03"], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_automated_list": ["model.cleansed_bq_archive.adjusted_change_sub_type_automated_list"], "source.cleansed_bq_archive.bq_archive_objects.sku_modernization_zuora_amendments": ["model.cleansed_bq_archive.sku_modernization_zuora_amendments"], "source.cleansed_bq_archive.bq_archive_objects.curated_opportunities": ["model.cleansed_bq_archive.curated_opportunities"], "source.cleansed_bq_archive.bq_archive_objects.p0_master_dashboard": ["model.cleansed_bq_archive.p0_master_dashboard"], "source.cleansed_bq_archive.bq_archive_objects.hg_insights_contract_view": ["model.cleansed_bq_archive.hg_insights_contract_view"], "source.cleansed_bq_archive.bq_archive_objects.hg_insights_install_view": ["model.cleansed_bq_archive.hg_insights_install_view"], "source.cleansed_bq_archive.bq_archive_objects.hg_insights_spend_view": ["model.cleansed_bq_archive.hg_insights_spend_view"], "source.cleansed_bq_archive.bq_archive_objects.bizible_user_touchpoints": ["model.cleansed_bq_archive.bizible_user_touchpoints"], "source.cleansed_bq_archive.bq_archive_objects.eloqua__emailsend_jan_22_fw": ["model.cleansed_bq_archive.eloqua__emailsend"], "source.cleansed_bq_archive.bq_archive_objects.eloqua__emailopen_jan_22_fw": ["model.cleansed_bq_archive.eloqua__emailopen"], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__crm_pro_forma_market_segment_previous_versions": ["model.cleansed_bq_archive.eda_hob__crm_pro_forma_market_segment_previous_versions"], "source.cleansed_bq_archive.bq_archive_objects.crm_dim_2025_market_segment": ["model.cleansed_bq_archive.crm_dim_2025_market_segment"], "source.cleansed_bq_archive.bq_archive_objects.eloqua__emailclickthrough_jan_22_fw": ["model.cleansed_bq_archive.eloqua__emailclickthrough"], "source.cleansed_bq_archive.bq_archive_objects.bizible_costs": ["model.cleansed_bq_archive.bizible_costs"], "source.cleansed_bq_archive.bq_archive_objects.tableau_events": ["model.cleansed_bq_archive.tableau_events"], "source.cleansed_bq_archive.bq_archive_objects.eda_hob__curated_user": ["model.cleansed_bq_archive.eda_hob__curated_user"], "source.cleansed_bq_archive.bq_archive_objects.attribution_events": ["model.cleansed_bq_archive.attribution_events"], "source.cleansed_bq_archive.bq_archive_objects.markov_attribution_opportunities_touchpoint": ["model.cleansed_bq_archive.markov_attribution_opportunities_touchpoint"], "source.cleansed_bq_archive.bq_archive_objects.markov_opps_base_channel_offer": ["model.cleansed_bq_archive.markov_opps_base_channel_offer"], "source.cleansed_bq_archive.bq_archive_objects.markov_opps_touchpoint_opps": ["model.cleansed_bq_archive.markov_opps_touchpoint_opps"], "source.cleansed_bq_archive.bq_archive_objects.ss_markov_leads_base_table": ["model.cleansed_bq_archive.ss_markov_leads_base_table"], "source.cleansed_bq_archive.bq_archive_objects.markov_attribution_leads_touchpoint": ["model.cleansed_bq_archive.markov_attribution_leads_touchpoint"], "source.cleansed_bq_archive.bq_archive_objects.marketing_non_api_raw_cost": ["model.cleansed_bq_archive.marketing_non_api_raw_cost"], "source.cleansed_bq_archive.bq_archive_objects.marketing_non_api_raw_cost_historicals": ["model.cleansed_bq_archive.marketing_non_api_raw_cost_historicals"], "source.cleansed_bq_archive.bq_archive_objects.attribution_user_touchpoint_jan_mar": ["model.cleansed_bq_archive.attribution_user_touchpoint"], "source.cleansed_bq_archive.bq_archive_objects.sfdc_opportunities_touchpoint": ["model.cleansed_bq_archive.sfdc_opportunities_touchpoint"], "source.cleansed_bq_archive.bq_archive_objects.sfdc_leads_touchpoint": ["model.cleansed_bq_archive.sfdc_leads_touchpoint"], "source.cleansed_bq_archive.bq_archive_objects.bz_cost_jan_20_fw": ["model.cleansed_bq_archive.bz_cost"], "source.cleansed_bq_archive.bq_archive_objects.sfdc_opportunities": ["model.cleansed_bq_archive.sfdc_opportunities"], "source.cleansed_bq_archive.bq_archive_objects.sfdc_opp_scd2": ["model.cleansed_bq_archive.sfdc_opp_scd2"], "source.cleansed_bq_archive.bq_archive_objects.dip_athena_data_lake_sunshine_conversations_pda_m_created": ["model.cleansed_bq_archive.dip_athena_data_lake_sunshine_conversations_pda_m_created"], "source.cleansed_bq_archive.bq_archive_objects.dip_athena_data_lake_sunshine_conversations_non_pda_m_created": ["model.cleansed_bq_archive.dip_athena_data_lake_sunshine_conversations_non_pda_m_created"], "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_sunshine_conversations": ["model.cleansed_bq_archive.tfa_weighted_sunshine_conversations"], "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_sell": ["model.cleansed_bq_archive.tfa_weighted_sell"], "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_support": ["model.cleansed_bq_archive.tfa_weighted_support"], "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_chat_voltron": ["model.cleansed_bq_archive.tfa_weighted_chat_voltron"], "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_chat_lc": ["model.cleansed_bq_archive.tfa_weighted_chat_lc"], "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_talk": ["model.cleansed_bq_archive.tfa_weighted_talk"], "source.cleansed_bq_archive.bq_archive_objects.tfa_weighted_guide": ["model.cleansed_bq_archive.tfa_weighted_guide"], "source.cleansed_bq_archive.bq_archive_objects.billing_boost_banner_clicked": ["model.cleansed_bq_archive.billing_boost_banner_clicked"], "source.cleansed_bq_archive.bq_archive_objects.billing_boost_banner_eligible": ["model.cleansed_bq_archive.billing_boost_banner_eligible"], "source.cleansed_bq_archive.bq_archive_objects.billing_boost_start_trial_clicked": ["model.cleansed_bq_archive.billing_boost_start_trial_clicked"], "source.cleansed_bq_archive.bq_archive_objects.billing_boost_start_trial_confirmed": ["model.cleansed_bq_archive.billing_boost_start_trial_confirmed"], "source.cleansed_bq_archive.bq_archive_objects.billing_boost_upgrade_clicked": ["model.cleansed_bq_archive.billing_boost_upgrade_clicked"], "source.cleansed_bq_archive.bq_archive_objects.billing_cart_loaded": ["model.cleansed_bq_archive.billing_cart_loaded"], "source.cleansed_bq_archive.bq_archive_objects.billing_cancellation_account_submit": ["model.cleansed_bq_archive.billing_cancellation_account_submit"], "source.cleansed_bq_archive.bq_archive_objects.billing_cancellation_viewed": ["model.cleansed_bq_archive.billing_cancellation_viewed"], "source.cleansed_bq_archive.bq_archive_objects.billing_cancel_account_clicked": ["model.cleansed_bq_archive.billing_cancel_account_clicked"], "source.cleansed_bq_archive.bq_archive_objects.billing_customize_subscription": ["model.cleansed_bq_archive.billing_customize_subscription"], "source.cleansed_bq_archive.bq_archive_objects.billing_payment_loaded": ["model.cleansed_bq_archive.billing_payment_loaded"], "source.cleansed_bq_archive.bq_archive_objects.billing_pause_subscription_clicked": ["model.cleansed_bq_archive.billing_pause_subscription_clicked"], "source.cleansed_bq_archive.bq_archive_objects.billing_pause_subscription_confirmed": ["model.cleansed_bq_archive.billing_pause_subscription_confirmed"], "source.cleansed_bq_archive.bq_archive_objects.billing_promocode_submit": ["model.cleansed_bq_archive.billing_promocode_submit"], "source.cleansed_bq_archive.bq_archive_objects.billing_quiz_answer_submitted": ["model.cleansed_bq_archive.billing_quiz_answer_submitted"], "source.cleansed_bq_archive.bq_archive_objects.billing_quiz_started": ["model.cleansed_bq_archive.billing_quiz_started"], "source.cleansed_bq_archive.bq_archive_objects.billing_subscription_viewed": ["model.cleansed_bq_archive.billing_subscription_viewed"], "source.cleansed_bq_archive.bq_archive_objects.billing_update_response": ["model.cleansed_bq_archive.billing_update_response"], "source.cleansed_bq_archive.bq_archive_objects.billing_update_submit": ["model.cleansed_bq_archive.billing_update_submit"], "source.cleansed_bq_archive.bq_archive_objects.billing_web_widget_loaded": ["model.cleansed_bq_archive.billing_web_widget_loaded"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_accessed_user_profile_via_avatar": ["model.cleansed_bq_archive.support_i_os_accessed_user_profile_via_avatar"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_application_opened": ["model.cleansed_bq_archive.support_i_os_application_opened"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_bulk_edit_opened": ["model.cleansed_bq_archive.support_i_os_bulk_edit_opened"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_bulk_edit_submitted": ["model.cleansed_bq_archive.support_i_os_bulk_edit_submitted"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_comment_added": ["model.cleansed_bq_archive.support_i_os_comment_added"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_comment_sort_order_changed": ["model.cleansed_bq_archive.support_i_os_comment_sort_order_changed"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_edit_user_profile_opened": ["model.cleansed_bq_archive.support_i_os_edit_user_profile_opened"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_form_opened": ["model.cleansed_bq_archive.support_i_os_form_opened"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_hc_tapped": ["model.cleansed_bq_archive.support_i_os_hc_tapped"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_macro_applied": ["model.cleansed_bq_archive.support_i_os_macro_applied"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_merge_opened": ["model.cleansed_bq_archive.support_i_os_merge_opened"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_merge_submitted": ["model.cleansed_bq_archive.support_i_os_merge_submitted"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_ongoing_chat_conversation": ["model.cleansed_bq_archive.support_i_os_ongoing_chat_conversation"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_opened_view_management": ["model.cleansed_bq_archive.support_i_os_opened_view_management"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_properties_changed": ["model.cleansed_bq_archive.support_i_os_properties_changed"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_push_notification_opened": ["model.cleansed_bq_archive.support_i_os_push_notification_opened"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_push_notification_received": ["model.cleansed_bq_archive.support_i_os_push_notification_received"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_quick_merge_not_permitted": ["model.cleansed_bq_archive.support_i_os_quick_merge_not_permitted"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_quick_property_tapped": ["model.cleansed_bq_archive.support_i_os_quick_property_tapped"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_search_opened": ["model.cleansed_bq_archive.support_i_os_search_opened"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_search_submitted": ["model.cleansed_bq_archive.support_i_os_search_submitted"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_search_ticket_opened": ["model.cleansed_bq_archive.support_i_os_search_ticket_opened"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_shortcut_menu_action": ["model.cleansed_bq_archive.support_i_os_shortcut_menu_action"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_talk_status_changed": ["model.cleansed_bq_archive.support_i_os_talk_status_changed"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_talk_status_opened": ["model.cleansed_bq_archive.support_i_os_talk_status_opened"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_ticket_created": ["model.cleansed_bq_archive.support_i_os_ticket_created"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_ticket_reply_type_changed": ["model.cleansed_bq_archive.support_i_os_ticket_reply_type_changed"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_ticket_updated": ["model.cleansed_bq_archive.support_i_os_ticket_updated"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_user_profile_created": ["model.cleansed_bq_archive.support_i_os_user_profile_created"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_user_profile_save_failed": ["model.cleansed_bq_archive.support_i_os_user_profile_save_failed"], "source.cleansed_bq_archive.bq_archive_objects.support_i_os_user_profile_saved": ["model.cleansed_bq_archive.support_i_os_user_profile_saved"], "source.cleansed_bq_archive.bq_archive_objects.segment_marketing_website_experiment_viewed": ["model.cleansed_bq_archive.segment_marketing_website_experiment_viewed"], "source.cleansed_bq_archive.bq_archive_objects.segment_marketing_website_identifies": ["model.cleansed_bq_archive.segment_marketing_website_identifies"], "source.cleansed_bq_archive.bq_archive_objects.website_register_lead_demo_request": ["model.cleansed_bq_archive.website_register_lead_demo_request"], "source.cleansed_bq_archive.bq_archive_objects.website_trial_reg_account_creation_apirequest_succeed": ["model.cleansed_bq_archive.website_trial_reg_account_creation_apirequest_succeed"], "source.cleansed_bq_archive.bq_archive_objects.website_register_lead_contact_form_widget": ["model.cleansed_bq_archive.website_register_lead_contact_form_widget"], "source.cleansed_bq_archive.bq_archive_objects.website_register_lead_contact_modal_submit": ["model.cleansed_bq_archive.website_register_lead_contact_modal_submit"], "source.cleansed_bq_archive.bq_archive_objects.central_admin_onboarding_panel_task_completion": ["model.cleansed_bq_archive.central_admin_onboarding_panel_task_completion"], "source.cleansed_bq_archive.bq_archive_objects.rules_granular_daily_history": ["model.cleansed_bq_archive.rules_granular_daily_history"], "source.cleansed_bq_archive.bq_archive_objects.p0_master_dashboard_backfill": ["model.cleansed_bq_archive.p0_master_dashboard_backfill"], "source.cleansed_bq_archive.bq_archive_objects.p0_master_dashboard_crm": ["model.cleansed_bq_archive.p0_master_dashboard_crm"], "source.cleansed_bq_archive.bq_archive_objects.GTM_top_10_omnichannel_routing_edw_copy": ["model.cleansed_bq_archive.GTM_top_10_omnichannel_routing_edw_copy"], "source.cleansed_bq_archive.bq_archive_objects.segment_support_android_identifies": ["model.cleansed_bq_archive.segment_support_android_identifies"], "source.cleansed_bq_archive.bq_archive_objects.support_android_accessed_user_profile_via_avatar": ["model.cleansed_bq_archive.support_android_accessed_user_profile_via_avatar"], "source.cleansed_bq_archive.bq_archive_objects.support_android_application_opened": ["model.cleansed_bq_archive.support_android_application_opened"], "source.cleansed_bq_archive.bq_archive_objects.support_android_bulk_edit_opened": ["model.cleansed_bq_archive.support_android_bulk_edit_opened"], "source.cleansed_bq_archive.bq_archive_objects.support_android_bulk_edit_submitted": ["model.cleansed_bq_archive.support_android_bulk_edit_submitted"], "source.cleansed_bq_archive.bq_archive_objects.support_android_comment_added": ["model.cleansed_bq_archive.support_android_comment_added"], "source.cleansed_bq_archive.bq_archive_objects.support_android_comment_sort_order_changed": ["model.cleansed_bq_archive.support_android_comment_sort_order_changed"], "source.cleansed_bq_archive.bq_archive_objects.support_android_force_update_dismissible_alert_presented": ["model.cleansed_bq_archive.support_android_force_update_dismissible_alert_presented"], "source.cleansed_bq_archive.bq_archive_objects.support_android_force_update_dismissible_alert_update_tapped": ["model.cleansed_bq_archive.support_android_force_update_dismissible_alert_update_tapped"], "source.cleansed_bq_archive.bq_archive_objects.support_android_force_update_non_dismissible_alert_presented": ["model.cleansed_bq_archive.support_android_force_update_non_dismissible_alert_presented"], "source.cleansed_bq_archive.bq_archive_objects.support_android_edit_user_profile_opened": ["model.cleansed_bq_archive.support_android_edit_user_profile_opened"], "source.cleansed_bq_archive.bq_archive_objects.support_android_form_opened": ["model.cleansed_bq_archive.support_android_form_opened"], "source.cleansed_bq_archive.bq_archive_objects.support_android_job_result": ["model.cleansed_bq_archive.support_android_job_result"], "source.cleansed_bq_archive.bq_archive_objects.support_android_macro_applied": ["model.cleansed_bq_archive.support_android_macro_applied"], "source.cleansed_bq_archive.bq_archive_objects.support_android_merge_opened": ["model.cleansed_bq_archive.support_android_merge_opened"], "source.cleansed_bq_archive.bq_archive_objects.support_android_merge_submitted": ["model.cleansed_bq_archive.support_android_merge_submitted"], "source.cleansed_bq_archive.bq_archive_objects.support_android_message_playback": ["model.cleansed_bq_archive.support_android_message_playback"], "source.cleansed_bq_archive.bq_archive_objects.support_android_ongoing_chat_conversation": ["model.cleansed_bq_archive.support_android_ongoing_chat_conversation"], "source.cleansed_bq_archive.bq_archive_objects.support_android_opened_view_management": ["model.cleansed_bq_archive.support_android_opened_view_management"], "source.cleansed_bq_archive.bq_archive_objects.support_android_properties_changed": ["model.cleansed_bq_archive.support_android_properties_changed"], "source.cleansed_bq_archive.bq_archive_objects.support_android_push_notification_opened": ["model.cleansed_bq_archive.support_android_push_notification_opened"], "source.cleansed_bq_archive.bq_archive_objects.support_android_push_notification_received": ["model.cleansed_bq_archive.support_android_push_notification_received"], "source.cleansed_bq_archive.bq_archive_objects.support_android_quick_merge_not_permitted": ["model.cleansed_bq_archive.support_android_quick_merge_not_permitted"], "source.cleansed_bq_archive.bq_archive_objects.support_android_quick_property_tapped": ["model.cleansed_bq_archive.support_android_quick_property_tapped"], "source.cleansed_bq_archive.bq_archive_objects.support_android_rate_app_status": ["model.cleansed_bq_archive.support_android_rate_app_status"], "source.cleansed_bq_archive.bq_archive_objects.support_android_search_filter_tooltip_shown": ["model.cleansed_bq_archive.support_android_search_filter_tooltip_shown"], "source.cleansed_bq_archive.bq_archive_objects.support_android_search_opened": ["model.cleansed_bq_archive.support_android_search_opened"], "source.cleansed_bq_archive.bq_archive_objects.support_android_search_opened_pt": ["model.cleansed_bq_archive.support_android_search_opened_pt"], "source.cleansed_bq_archive.bq_archive_objects.support_android_search_organisation_opened": ["model.cleansed_bq_archive.support_android_search_organisation_opened"], "source.cleansed_bq_archive.bq_archive_objects.support_android_search_submitted": ["model.cleansed_bq_archive.support_android_search_submitted"], "source.cleansed_bq_archive.bq_archive_objects.support_android_search_ticket_opened": ["model.cleansed_bq_archive.support_android_search_ticket_opened"], "source.cleansed_bq_archive.bq_archive_objects.support_android_search_user_opened": ["model.cleansed_bq_archive.support_android_search_user_opened"], "source.cleansed_bq_archive.bq_archive_objects.support_android_side_conversation_viewed": ["model.cleansed_bq_archive.support_android_side_conversation_viewed"], "source.cleansed_bq_archive.bq_archive_objects.support_android_side_conversations_list_viewed": ["model.cleansed_bq_archive.support_android_side_conversations_list_viewed"], "source.cleansed_bq_archive.bq_archive_objects.support_android_talk_status_changed": ["model.cleansed_bq_archive.support_android_talk_status_changed"], "source.cleansed_bq_archive.bq_archive_objects.support_android_talk_status_opened": ["model.cleansed_bq_archive.support_android_talk_status_opened"], "source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_created": ["model.cleansed_bq_archive.support_android_ticket_created"], "source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_reply_type_changed": ["model.cleansed_bq_archive.support_android_ticket_reply_type_changed"], "source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_unsaved_changes_dialog": ["model.cleansed_bq_archive.support_android_ticket_unsaved_changes_dialog"], "source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_updated": ["model.cleansed_bq_archive.support_android_ticket_updated"], "source.cleansed_bq_archive.bq_archive_objects.support_android_ticket_viewed": ["model.cleansed_bq_archive.support_android_ticket_viewed"], "source.cleansed_bq_archive.bq_archive_objects.support_android_user_profile_created": ["model.cleansed_bq_archive.support_android_user_profile_created"], "source.cleansed_bq_archive.bq_archive_objects.support_android_user_profile_save_failed": ["model.cleansed_bq_archive.support_android_user_profile_save_failed"], "source.cleansed_bq_archive.bq_archive_objects.support_android_user_profile_saved": ["model.cleansed_bq_archive.support_android_user_profile_saved"], "source.cleansed_bq_archive.bq_archive_objects.updated_markov_pipeline_attribution_model_results_channel_offer": ["model.cleansed_bq_archive.markov_pipeline_attribution_model_results_channel_offer"], "source.cleansed_bq_archive.bq_archive_objects.All_Premier_Accounts": ["model.cleansed_bq_archive.All_Premier_Accounts"], "source.cleansed_bq_archive.bq_archive_objects.All_Premier_Accounts_2023_06_27T16_05_41": ["model.cleansed_bq_archive.All_Premier_Accounts_2023_06_27T16_05_41"], "source.cleansed_bq_archive.bq_archive_objects.Historical_All_Premier_Accounts": ["model.cleansed_bq_archive.Historical_All_Premier_Accounts"], "source.cleansed_bq_archive.bq_archive_objects.Historical_SC_Canaries": ["model.cleansed_bq_archive.Historical_SC_Canaries"], "source.cleansed_bq_archive.bq_archive_objects.Historical_SLA_Chat": ["model.cleansed_bq_archive.Historical_SLA_Chat"], "source.cleansed_bq_archive.bq_archive_objects.IBM_Customers": ["model.cleansed_bq_archive.IBM_Customers"], "source.cleansed_bq_archive.bq_archive_objects.IM_Incidents": ["model.cleansed_bq_archive.IM_Incidents"], "source.cleansed_bq_archive.bq_archive_objects.SC_Canaries": ["model.cleansed_bq_archive.SC_Canaries"], "source.cleansed_bq_archive.bq_archive_objects.SLA_Chat": ["model.cleansed_bq_archive.SLA_Chat"], "source.cleansed_bq_archive.bq_archive_objects.datadog_monitors": ["model.cleansed_bq_archive.datadog_monitors"], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_alerts": ["model.cleansed_bq_archive.pagerduty_alerts"], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_business_services": ["model.cleansed_bq_archive.pagerduty_business_services"], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_escalation_policies": ["model.cleansed_bq_archive.pagerduty_escalation_policies"], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_event_orchestration_routers": ["model.cleansed_bq_archive.pagerduty_event_orchestration_routers"], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_event_orchestrations": ["model.cleansed_bq_archive.pagerduty_event_orchestrations"], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_incidents": ["model.cleansed_bq_archive.pagerduty_incidents"], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_logs": ["model.cleansed_bq_archive.pagerduty_logs"], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_schedules": ["model.cleansed_bq_archive.pagerduty_schedules"], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_service_orchestrations": ["model.cleansed_bq_archive.pagerduty_service_orchestrations"], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_services": ["model.cleansed_bq_archive.pagerduty_services"], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_teams": ["model.cleansed_bq_archive.pagerduty_teams"], "source.cleansed_bq_archive.bq_archive_objects.pagerduty_users": ["model.cleansed_bq_archive.pagerduty_users"], "source.cleansed_bq_archive.bq_archive_objects.scheduled_cerebro_blend": ["model.cleansed_bq_archive.scheduled_cerebro_blend"], "source.cleansed_bq_archive.bq_archive_objects.scheduled_core_features": ["model.cleansed_bq_archive.scheduled_core_features"], "source.cleansed_bq_archive.bq_archive_objects.scheduled_critical_services": ["model.cleansed_bq_archive.scheduled_critical_services"], "source.cleansed_bq_archive.bq_archive_objects.scheduled_monitor_metadata": ["model.cleansed_bq_archive.scheduled_monitor_metadata"], "source.cleansed_bq_archive.bq_archive_objects.scheduled_pagerduty_incidents": ["model.cleansed_bq_archive.scheduled_pagerduty_incidents"], "source.cleansed_bq_archive.bq_archive_objects.scheduled_pagerduty_incidents_monitors": ["model.cleansed_bq_archive.scheduled_pagerduty_incidents_monitors"], "source.cleansed_bq_archive.bq_archive_objects.scheduled_tech_tier_projects": ["model.cleansed_bq_archive.scheduled_tech_tier_projects"], "source.cleansed_bq_archive.bq_archive_objects.scheduled_tech_tier_team_hierarchy": ["model.cleansed_bq_archive.scheduled_tech_tier_team_hierarchy"], "source.cleansed_bq_archive.bq_archive_objects.scheduled_unowned_projects": ["model.cleansed_bq_archive.scheduled_unowned_projects"], "source.cleansed_bq_archive.bq_archive_objects.segment_support_groups": ["model.cleansed_bq_archive.segment_support_groups"], "source.cleansed_bq_archive.bq_archive_objects.segment_support_onboarding_panel_task_completion": ["model.cleansed_bq_archive.segment_support_onboarding_panel_task_completion"], "source.cleansed_bq_archive.bq_archive_objects.views_expansion_banner_find_out_more_click": ["model.cleansed_bq_archive.views_expansion_banner_find_out_more_click"], "source.cleansed_bq_archive.bq_archive_objects.views_expansion_banner_try_it_for_free_click": ["model.cleansed_bq_archive.views_expansion_banner_try_it_for_free_click"], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup": ["model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06_backup"], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03": ["model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_02_03"], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06": ["model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_06"], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05": ["model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_05"], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04": ["model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_04"], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03": ["model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_03"], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02": ["model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_02"], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01": ["model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2025_01_01"], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03": ["model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_03"], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02": ["model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_02"], "source.cleansed_bq_archive.bq_archive_objects.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01": ["model.cleansed_bq_archive.sfa_qtd_crm_product_recurring_revenue_adj_2024_10_01"], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_10_03": ["model.cleansed_bq_archive.sfa_bookings_reporting_2024_10_03"], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_03": ["model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_03"], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_06": ["model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_06"], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_10_01": ["model.cleansed_bq_archive.sfa_bookings_reporting_2024_10_01"], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_02": ["model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_02"], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_04": ["model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_04"], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_07_01": ["model.cleansed_bq_archive.sfa_bookings_reporting_2024_07_01"], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_23": ["model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_23"], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_02_03": ["model.cleansed_bq_archive.sfa_bookings_reporting_2025_02_03"], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_03_03": ["model.cleansed_bq_archive.sfa_bookings_reporting_2025_03_03"], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_05": ["model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_05"], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_03_01": ["model.cleansed_bq_archive.sfa_bookings_reporting_2025_03_01"], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2024_07_02": ["model.cleansed_bq_archive.sfa_bookings_reporting_2024_07_02"], "source.cleansed_bq_archive.bq_archive_objects.sfa_bookings_reporting_2025_01_01": ["model.cleansed_bq_archive.sfa_bookings_reporting_2025_01_01"], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_01_06": ["model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_01_06"], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_02_03": ["model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_02_03"], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_03_03": ["model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_03_03"], "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_18april": ["model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_18april"], "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_14sep": ["model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup_14sep"], "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup_29april": ["model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup_29april"], "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304": ["model.cleansed_bq_archive.eda_pricing_comm_zuora_202304"], "source.cleansed_bq_archive.bq_archive_objects.ab_test_sample": ["model.cleansed_bq_archive.ab_test_sample"], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_01_05": ["model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_01_05"], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_10_03": ["model.cleansed_bq_archive.adjusted_change_sub_type_usd_2024_10_03"], "source.cleansed_bq_archive.bq_archive_objects.ab_test_stratifiedsamples": ["model.cleansed_bq_archive.ab_test_stratifiedsamples"], "source.cleansed_bq_archive.bq_archive_objects.eda_pricing_comm_zuora_202304_backup": ["model.cleansed_bq_archive.eda_pricing_comm_zuora_202304_backup"], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2025_01_01": ["model.cleansed_bq_archive.adjusted_change_sub_type_usd_2025_01_01"], "source.cleansed_bq_archive.bq_archive_objects.adjusted_change_sub_type_usd_2024_04_03": ["model.cleansed_bq_archive.adjusted_change_sub_type_usd_2024_04_03"], "source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_eoq_snapshot_may_to_mar": ["model.cleansed_bq_archive.dashboard_global_pipeline_eoq_snapshot"], "source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_productline_eoq_snapshot_v2_may_to_mar": ["model.cleansed_bq_archive.dashboard_global_pipeline_productline_eoq_snapshot_v2"], "source.cleansed_bq_archive.bq_archive_objects.gpd_weekly_target_snapshot_may_to_mar": ["model.cleansed_bq_archive.gpd_weekly_target_snapshot"], "source.cleansed_bq_archive.bq_archive_objects.dgp_productline_week_dates_eoq_snapshot_v2_may_to_mar": ["model.cleansed_bq_archive.dgp_productline_week_dates_eoq_snapshot_v2"], "source.cleansed_bq_archive.bq_archive_objects.gpd_pipeline_age_may_to_mar": ["model.cleansed_bq_archive.gpd_pipeline_age"], "source.cleansed_bq_archive.bq_archive_objects.dgp_productline_week_close_dates_eoq_snapshot_v2_may_to_mar": ["model.cleansed_bq_archive.dgp_productline_week_close_dates_eoq_snapshot_v2"], "source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_coverage_trends_eoq_snapshot_may_mar": ["model.cleansed_bq_archive.dashboard_global_pipeline_coverage_trends_eoq_snapshot"], "source.cleansed_bq_archive.bq_archive_objects.gpd_weekly_product_pipeline_age_snapshot_v2_may_to_mar": ["model.cleansed_bq_archive.gpd_weekly_product_pipeline_age_snapshot_v2"], "source.cleansed_bq_archive.bq_archive_objects.dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3_may_mar": ["model.cleansed_bq_archive.dashboard_global_pipeline_coverage_trends_product_eoq_snapshot_v3"], "source.cleansed_bq_archive.bq_archive_objects.pipeline_coverage_targets_daily_snapshot_may_to_mar": ["model.cleansed_bq_archive.pipeline_coverage_targets_daily_snapshot"], "source.cleansed_bq_archive.bq_archive_objects.pipeline_coverage_targets_product_daily_snapshot_may_to_mar": ["model.cleansed_bq_archive.pipeline_coverage_targets_product_daily_snapshot"], "source.cleansed_bq_archive.bq_archive_objects.eloqua__bounceback_jan_22_fw": ["model.cleansed_bq_archive.eloqua__bounceback"], "source.cleansed_bq_archive.bq_archive_objects.eloqua__unsubscribe_jan_22_fw": ["model.cleansed_bq_archive.eloqua__unsubscribe"], "source.cleansed_bq_archive.bq_archive_objects.eloqua__contacts_jan_22_fw": ["model.cleansed_bq_archive.contacts"], "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_benchmark_tableau": ["model.cleansed_bq_archive.cs_db_acctmngr_benchmark_tableau"], "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_chat_accounts_tableau": ["model.cleansed_bq_archive.cs_db_acctmngr_chat_accounts_tableau"], "source.cleansed_bq_archive.bq_archive_objects.acctmgrdash_full_list_of_accounts_tableau": ["model.cleansed_bq_archive.acctmgrdash_full_list_of_accounts_tableau"], "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_chshacct_tableau_preagg": ["model.cleansed_bq_archive.cs_db_acctmngr_chshacct_tableau_preagg"], "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_chshacct_tableau": ["model.cleansed_bq_archive.cs_db_acctmngr_chshacct_tableau"], "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_master_tableau": ["model.cleansed_bq_archive.cs_db_acctmngr_master_tableau"], "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_median_tableau": ["model.cleansed_bq_archive.cs_db_acctmngr_median_tableau"], "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_utilization": ["model.cleansed_bq_archive.cs_db_acctmngr_utilization"], "source.cleansed_bq_archive.bq_archive_objects.cs_db_acctmngr_wtdavg_median_tableau": ["model.cleansed_bq_archive.cs_db_acctmngr_wtdavg_median_tableau"], "source.cleansed_bq_archive.bq_archive_objects.sa_opps_dash": ["model.cleansed_bq_archive.sa_opps_dash"], "source.cleansed_bq_archive.bq_archive_objects.sa_ops_dash_pipegen": ["model.cleansed_bq_archive.sa_ops_dash_pipegen"], "source.cleansed_bq_archive.bq_archive_objects.sa_recurring_revenue": ["model.cleansed_bq_archive.sa_recurring_revenue"], "source.cleansed_bq_archive.bq_archive_objects.sa_pipeline_movement": ["model.cleansed_bq_archive.sa_pipeline_movement"], "source.cleansed_bq_archive.bq_archive_objects.eloqua_curated": ["model.cleansed_bq_archive.eloqua_curated"], "source.cleansed_bq_archive.bq_archive_objects.eda_google_analytics__pages_v2_2022_01_01": ["model.cleansed_bq_archive.eda_google_analytics__pages_v2"], "source.cleansed_bq_archive.bq_archive_objects.eda_google_analytics__sessions_v2_2022_01_01": ["model.cleansed_bq_archive.eda_google_analytics__sessions_v2"], "source.cleansed_bq_archive.bq_archive_objects.google_analytics_curated_2022_01_01": ["model.cleansed_bq_archive.google_analytics_curated"], "source.cleansed_bq_archive.bq_archive_objects.zendesk_marketingweb_ga_pages_2022_01_01": ["model.cleansed_bq_archive.zendesk_marketingweb_ga_pages"], "source.cleansed_bq_archive.bq_archive_objects.zendesk_marketingweb_ga_sessions_2022_01_01": ["model.cleansed_bq_archive.zendesk_marketingweb_ga_sessions"], "source.cleansed_bq_archive.bq_archive_objects.dashboard_pipeline_quality": ["model.cleansed_bq_archive.dashboard_pipeline_quality"], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_day_of_qtr": ["model.cleansed_bq_archive.tb_ws_cc_renewals_day_of_qtr"], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_subterm_weighted": ["model.cleansed_bq_archive.tb_ws_cc_renewals_subterm_weighted"], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_granular_arr_band": ["model.cleansed_bq_archive.tb_ws_cc_renewals_granular_arr_band"], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_qtrly_crm_dim": ["model.cleansed_bq_archive.tb_ws_cc_renewals_qtrly_crm_dim"], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_pacing": ["model.cleansed_bq_archive.tb_ws_cc_renewals_pacing"], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_pacing_renewals": ["model.cleansed_bq_archive.tb_ws_cc_renewals_pacing_renewals"], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_future_renewals": ["model.cleansed_bq_archive.tb_ws_cc_renewals_future_renewals"], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_granular": ["model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_granular"], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_summary": ["model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_summary"], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_granular_grouped": ["model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_granular_grouped"], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_timestamp": ["model.cleansed_bq_archive.tb_ws_cc_renewals_timestamp"], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_summary_yoy_union": ["model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_summary_yoy_union"], "source.cleansed_bq_archive.bq_archive_objects.tb_ws_cc_renewals_finadj_granular_subtype": ["model.cleansed_bq_archive.tb_ws_cc_renewals_finadj_granular_subtype"], "source.cleansed_bq_archive.bq_archive_objects.dashboard_pipeline_quality_snapshot_2022_01_01": ["model.cleansed_bq_archive.dashboard_pipeline_quality_snapshot"], "source.cleansed_bq_archive.bq_archive_objects.marketing_non_api_raw_cost_regional_apac": ["model.cleansed_bq_archive.marketing_non_api_raw_cost_regional_APAC"], "source.cleansed_bq_archive.bq_product_archive.dhco_platform_custom_objects_records": ["model.cleansed_bq_archive.dhco_platform_custom_objects_records"], "source.cleansed_bq_archive.bq_product_archive.dlc_custom_objects": ["model.cleansed_bq_archive.dlc_custom_objects"], "source.cleansed_bq_archive.bq_product_archive.layout_builder_service_layouts": ["model.cleansed_bq_archive.layout_builder_service_layouts"], "source.cleansed_bq_archive.bq_product_archive.lynx_machine_learning_usage_llm_features": ["model.cleansed_bq_archive.lynx_machine_learning_usage_llm_features"], "source.cleansed_bq_archive.bq_product_archive.product_data_automated_triage_daily_summary": ["model.cleansed_bq_archive.product_data_automated_triage_daily_summary"], "source.cleansed_bq_archive.bq_product_archive.product_data_automatic_triage_adoption": ["model.cleansed_bq_archive.product_data_automatic_triage_adoption"], "source.cleansed_bq_archive.bq_product_archive.product_data_flow_director_conversations_activity": ["model.cleansed_bq_archive.product_data_flow_director_conversations_activity"], "source.cleansed_bq_archive.bq_product_archive.product_data_generative_answers": ["model.cleansed_bq_archive.product_data_generative_answers"], "source.cleansed_bq_archive.bq_product_archive.product_data_machine_learning_triage_deflections": ["model.cleansed_bq_archive.product_data_machine_learning_triage_deflections"], "source.cleansed_bq_archive.bq_product_archive.product_data_mcs_feedback": ["model.cleansed_bq_archive.product_data_mcs_feedback"], "source.cleansed_bq_archive.bq_product_archive.product_data_ml_usage_frontend_events": ["model.cleansed_bq_archive.product_data_ml_usage_frontend_events"], "source.cleansed_bq_archive.bq_product_archive.data_lake_classic_webhooks": ["model.cleansed_bq_archive.data_lake_classic_webhooks"], "source.cleansed_bq_archive.bq_product_archive.accounts_settings": ["model.cleansed_bq_archive.accounts_settings"], "source.cleansed_bq_archive.bq_product_archive.agent_entitlements": ["model.cleansed_bq_archive.agent_entitlements"], "source.cleansed_bq_archive.bq_product_archive.app_installs": ["model.cleansed_bq_archive.app_installs"], "source.cleansed_bq_archive.bq_product_archive.apps": ["model.cleansed_bq_archive.apps"], "source.cleansed_bq_archive.bq_product_archive.custom_statuses": ["model.cleansed_bq_archive.custom_statuses"], "source.cleansed_bq_archive.bq_product_archive.roles": ["model.cleansed_bq_archive.roles"], "source.cleansed_bq_archive.bq_product_archive.skus": ["model.cleansed_bq_archive.skus"], "source.cleansed_bq_archive.bq_product_archive.ticket_deflections_events": ["model.cleansed_bq_archive.ticket_deflections_events"], "source.cleansed_bq_archive.bq_product_archive.workspaces": ["model.cleansed_bq_archive.workspaces"], "source.cleansed_bq_archive.bq_product_archive.rules": ["model.cleansed_bq_archive.rules"], "source.cleansed_bq_archive.bq_product_archive.user_dim_historic": ["model.cleansed_bq_archive.user_dim_historic"], "source.cleansed_bq_archive.bq_product_archive.all_instance_provisioned_and_active_agents": ["model.cleansed_bq_archive.all_instance_provisioned_and_active_agents"], "source.cleansed_bq_archive.bq_product_archive.account_dashboard_master": ["model.cleansed_bq_archive.account_dashboard_master"], "source.cleansed_bq_archive.bq_product_archive.dip_athena_product_data_flow_director_conversations_activity": ["model.cleansed_bq_archive.dip_athena_product_data_flow_director_conversations_activity"], "source.cleansed_bq_archive.bq_product_archive.support_addresses": ["model.cleansed_bq_archive.support_addresses"], "source.cleansed_bq_archive.bq_product_archive.feature_tables_tickets_backfill": ["model.cleansed_bq_archive.feature_tables_tickets_backfill"], "source.cleansed_bq_archive.bq_product_archive.count_objects": ["model.cleansed_bq_archive.count_objects"], "source.cleansed_bq_archive.bq_product_archive.ticket_forms": ["model.cleansed_bq_archive.ticket_forms"], "source.cleansed_bq_archive.bq_product_archive.pdw_hc_usage": ["model.cleansed_bq_archive.pdw_hc_usage"], "source.cleansed_bq_archive.bq_product_archive.feature_tables_tickets_post_jan2022": ["model.cleansed_bq_archive.feature_tables_tickets_post_jan2022"], "source.cleansed_bq_archive.bq_product_archive.data_lake_classic_webhooks_backfill": ["model.cleansed_bq_archive.data_lake_classic_webhooks_backfill"], "source.cleansed_bq_archive.bq_product_archive.agent_email_addresses_2023_onward": ["model.cleansed_bq_archive.agent_email_addresses"], "source.cleansed_bq_archive.bq_product_archive.signals_metrics": ["model.cleansed_bq_archive.signals_metrics"], "source.cleansed_bq_archive.bq_product_archive.product_data_sla_ticket_policies": ["model.cleansed_bq_archive.product_data_sla_ticket_policies"], "source.cleansed_bq_archive.bq_product_archive.z2_raw_sla_policies": ["model.cleansed_bq_archive.z2_raw_sla_policies"], "source.cleansed_bq_archive.bq_product_archive.dlc_ola_ticket_policies": ["model.cleansed_bq_archive.dlc_ola_ticket_policies"], "source.cleansed_bq_archive.bq_product_archive.dlc_ola_policies": ["model.cleansed_bq_archive.dlc_ola_policies"], "source.cleansed_bq_archive.bq_product_archive.pdw_slas": ["model.cleansed_bq_archive.pdw_slas"], "source.cleansed_bq_archive.bq_product_archive.classic_object_layouts": ["model.cleansed_bq_archive.classic_object_layouts"], "source.cleansed_bq_archive.bq_product_archive.pendo__garden_reporting_jan_22_fw": ["model.cleansed_bq_archive.pendo__garden_reporting"], "source.cleansed_bq_archive.bq_product_archive.int_tickets_raw": ["model.cleansed_bq_archive.int_tickets_raw"], "source.cleansed_bq_archive.bq_product_archive.pdw_voice_details": ["model.cleansed_bq_archive.voice_details"], "source.cleansed_bq_archive.bq_product_archive.pdw_zuora_voice_usages": ["model.cleansed_bq_archive.zuora_voice_usages"], "source.cleansed_bq_archive.bq_product_archive.pdw_account_settings_events": ["model.cleansed_bq_archive.account_settings_events"], "source.cleansed_bq_archive.bq_product_archive.explore_accounts": ["model.cleansed_bq_archive.explore_accounts"], "source.cleansed_bq_archive.bq_product_archive.explore_users": ["model.cleansed_bq_archive.explore_users"], "source.cleansed_bq_archive.bq_product_archive.explore_dashboards": ["model.cleansed_bq_archive.explore_dashboards"], "source.cleansed_bq_archive.bq_product_archive.explore_dashboard_views": ["model.cleansed_bq_archive.explore_dashboard_views"], "source.cleansed_bq_archive.bq_product_archive.ex_customer_base": ["model.cleansed_bq_archive.ex_customer_base"], "source.cleansed_bq_archive.bq_product_archive.ex_usage_us_02_28_2025": ["model.cleansed_bq_archive.ex_usage_us_02_28_2025"]}, "group_map": {"cleansed_bq_product_archive": ["model.cleansed_bq_archive.agent_email_addresses", "model.cleansed_bq_archive.feature_tables_tickets_post_jan2022"], "cleansed_bq_archive": ["model.cleansed_bq_archive.support_addresses", "model.cleansed_bq_archive.bizible_user_touchpoints", "model.cleansed_bq_archive.bizible_costs", "model.cleansed_bq_archive.billing_cart_loaded", "model.cleansed_bq_archive.billing_payment_loaded", "model.cleansed_bq_archive.billing_update_submit", "model.cleansed_bq_archive.sfdc_opp_scd2", "model.cleansed_bq_archive.markov_pipeline_attribution_model_results_channel_offer", "model.cleansed_bq_archive.markov_opps_base_channel_offer", "model.cleansed_bq_archive.attribution_user_touchpoint", "model.cleansed_bq_archive.bz_cost", "model.cleansed_bq_archive.ss_markov_leads_base_table", "model.cleansed_bq_archive.sfdc_opportunities", "model.cleansed_bq_archive.sfdc_leads_touchpoint", "model.cleansed_bq_archive.markov_attribution_leads_touchpoint", "model.cleansed_bq_archive.marketing_non_api_raw_cost", "model.cleansed_bq_archive.markov_opps_touchpoint_opps", "model.cleansed_bq_archive.markov_attribution_opportunities_touchpoint", "model.cleansed_bq_archive.sfdc_opportunities_touchpoint", "model.cleansed_bq_archive.attribution_events", "model.cleansed_bq_archive.marketing_non_api_raw_cost_historicals"]}, "saved_queries": {}, "semantic_models": {}, "unit_tests": {}}